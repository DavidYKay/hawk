// Compiled by ClojureScript 0.0-2850 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2850";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [cljs.core.constant$keyword$1,cljs.core._STAR_flush_on_newline_STAR_,cljs.core.constant$keyword$2,cljs.core._STAR_print_readably_STAR_,cljs.core.constant$keyword$3,cljs.core._STAR_print_meta_STAR_,cljs.core.constant$keyword$4,cljs.core._STAR_print_dup_STAR_,cljs.core.constant$keyword$5,cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__26872__delegate = function (args){
return console.log.apply(console,(function (){var G__26871 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__26871) : cljs.core.into_array.call(null,G__26871));
})());
};
var G__26872 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__26873__i = 0, G__26873__a = new Array(arguments.length -  0);
while (G__26873__i < G__26873__a.length) {G__26873__a[G__26873__i] = arguments[G__26873__i + 0]; ++G__26873__i;}
  args = new cljs.core.IndexedSeq(G__26873__a,0);
} 
return G__26872__delegate.call(this,args);};
G__26872.cljs$lang$maxFixedArity = 0;
G__26872.cljs$lang$applyTo = (function (arglist__26874){
var args = cljs.core.seq(arglist__26874);
return G__26872__delegate(args);
});
G__26872.cljs$core$IFn$_invoke$arity$variadic = G__26872__delegate;
return G__26872;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__26876 = x;
return goog.isString(G__26876);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__26878 = x__$1;
return goog.typeOf(G__26878);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__16453__auto__ = ty;
if(cljs.core.truth_(and__16453__auto__)){
return ty.cljs$lang$type;
} else {
return and__16453__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__26880 = obj;
return goog.typeOf(G__26880);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__26882 = Symbol;
return goog.typeOf(G__26882);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__17352__auto___26884 = len;
var i_26885 = (0);
while(true){
if((i_26885 < n__17352__auto___26884)){
(new_arr[i_26885] = (arr[i_26885]));

var G__26886 = (i_26885 + (1));
i_26885 = G__26886;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__26887 = (i + (1));
i = G__26887;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__26896__delegate = function (array,i,idxs){
var G__26893 = aget;
var G__26894 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__26895 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__26893,G__26894,G__26895) : cljs.core.apply.call(null,G__26893,G__26894,G__26895));
};
var G__26896 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__26897__i = 0, G__26897__a = new Array(arguments.length -  2);
while (G__26897__i < G__26897__a.length) {G__26897__a[G__26897__i] = arguments[G__26897__i + 2]; ++G__26897__i;}
  idxs = new cljs.core.IndexedSeq(G__26897__a,0);
} 
return G__26896__delegate.call(this,array,i,idxs);};
G__26896.cljs$lang$maxFixedArity = 2;
G__26896.cljs$lang$applyTo = (function (arglist__26898){
var array = cljs.core.first(arglist__26898);
arglist__26898 = cljs.core.next(arglist__26898);
var i = cljs.core.first(arglist__26898);
var idxs = cljs.core.rest(arglist__26898);
return G__26896__delegate(array,i,idxs);
});
G__26896.cljs$core$IFn$_invoke$arity$variadic = G__26896__delegate;
return G__26896;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__26899 = null;
if (arguments.length > 2) {
var G__26900__i = 0, G__26900__a = new Array(arguments.length -  2);
while (G__26900__i < G__26900__a.length) {G__26900__a[G__26900__i] = arguments[G__26900__i + 2]; ++G__26900__i;}
G__26899 = new cljs.core.IndexedSeq(G__26900__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__26899);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__26909__delegate = function (array,idx,idx2,idxv){
var G__26905 = aset;
var G__26906 = (array[idx]);
var G__26907 = idx2;
var G__26908 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__26905,G__26906,G__26907,G__26908) : cljs.core.apply.call(null,G__26905,G__26906,G__26907,G__26908));
};
var G__26909 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__26910__i = 0, G__26910__a = new Array(arguments.length -  3);
while (G__26910__i < G__26910__a.length) {G__26910__a[G__26910__i] = arguments[G__26910__i + 3]; ++G__26910__i;}
  idxv = new cljs.core.IndexedSeq(G__26910__a,0);
} 
return G__26909__delegate.call(this,array,idx,idx2,idxv);};
G__26909.cljs$lang$maxFixedArity = 3;
G__26909.cljs$lang$applyTo = (function (arglist__26911){
var array = cljs.core.first(arglist__26911);
arglist__26911 = cljs.core.next(arglist__26911);
var idx = cljs.core.first(arglist__26911);
arglist__26911 = cljs.core.next(arglist__26911);
var idx2 = cljs.core.first(arglist__26911);
var idxv = cljs.core.rest(arglist__26911);
return G__26909__delegate(array,idx,idx2,idxv);
});
G__26909.cljs$core$IFn$_invoke$arity$variadic = G__26909__delegate;
return G__26909;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__26912 = null;
if (arguments.length > 3) {
var G__26913__i = 0, G__26913__a = new Array(arguments.length -  3);
while (G__26913__i < G__26913__a.length) {G__26913__a[G__26913__i] = arguments[G__26913__i + 3]; ++G__26913__i;}
G__26912 = new cljs.core.IndexedSeq(G__26913__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__26912);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__26919 = (function (a,x){
a.push(x);

return a;
});
var G__26920 = [];
var G__26921 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__26919,G__26920,G__26921) : cljs.core.reduce.call(null,G__26919,G__26920,G__26921));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__26922__i = 0, G__26922__a = new Array(arguments.length -  2);
while (G__26922__i < G__26922__a.length) {G__26922__a[G__26922__i] = arguments[G__26922__i + 2]; ++G__26922__i;}
  args = new cljs.core.IndexedSeq(G__26922__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__26923){
var obj = cljs.core.first(arglist__26923);
arglist__26923 = cljs.core.next(arglist__26923);
var s = cljs.core.first(arglist__26923);
var args = cljs.core.rest(arglist__26923);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj26925 = {};
return obj26925;
})();


cljs.core.IFn = (function (){var obj26927 = {};
return obj26927;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__16453__auto__ = this$;
if(and__16453__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__16453__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__17109__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16465__auto__ = (cljs.core._invoke[(function (){var G__26973 = x__17109__auto__;
return goog.typeOf(G__26973);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._invoke["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__16453__auto__ = this$;
if(and__16453__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__16453__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__17109__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16465__auto__ = (cljs.core._invoke[(function (){var G__26975 = x__17109__auto__;
return goog.typeOf(G__26975);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._invoke["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__16453__auto__ = this$;
if(and__16453__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__16453__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__17109__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16465__auto__ = (cljs.core._invoke[(function (){var G__26977 = x__17109__auto__;
return goog.typeOf(G__26977);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._invoke["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__16453__auto__ = this$;
if(and__16453__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__16453__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__17109__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16465__auto__ = (cljs.core._invoke[(function (){var G__26979 = x__17109__auto__;
return goog.typeOf(G__26979);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._invoke["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__16453__auto__ = this$;
if(and__16453__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__16453__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__17109__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16465__auto__ = (cljs.core._invoke[(function (){var G__26981 = x__17109__auto__;
return goog.typeOf(G__26981);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._invoke["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__16453__auto__ = this$;
if(and__16453__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__16453__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__17109__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16465__auto__ = (cljs.core._invoke[(function (){var G__26983 = x__17109__auto__;
return goog.typeOf(G__26983);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._invoke["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__16453__auto__ = this$;
if(and__16453__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__16453__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__17109__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16465__auto__ = (cljs.core._invoke[(function (){var G__26985 = x__17109__auto__;
return goog.typeOf(G__26985);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._invoke["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__16453__auto__ = this$;
if(and__16453__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__16453__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__17109__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16465__auto__ = (cljs.core._invoke[(function (){var G__26987 = x__17109__auto__;
return goog.typeOf(G__26987);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._invoke["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__16453__auto__ = this$;
if(and__16453__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__16453__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__17109__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16465__auto__ = (cljs.core._invoke[(function (){var G__26989 = x__17109__auto__;
return goog.typeOf(G__26989);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._invoke["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__16453__auto__ = this$;
if(and__16453__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__16453__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__17109__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16465__auto__ = (cljs.core._invoke[(function (){var G__26991 = x__17109__auto__;
return goog.typeOf(G__26991);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._invoke["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__16453__auto__ = this$;
if(and__16453__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__16453__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__17109__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16465__auto__ = (cljs.core._invoke[(function (){var G__26993 = x__17109__auto__;
return goog.typeOf(G__26993);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._invoke["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__16453__auto__ = this$;
if(and__16453__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__16453__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__17109__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16465__auto__ = (cljs.core._invoke[(function (){var G__26995 = x__17109__auto__;
return goog.typeOf(G__26995);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._invoke["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__16453__auto__ = this$;
if(and__16453__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__16453__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__17109__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16465__auto__ = (cljs.core._invoke[(function (){var G__26997 = x__17109__auto__;
return goog.typeOf(G__26997);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._invoke["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__16453__auto__ = this$;
if(and__16453__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__16453__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__17109__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16465__auto__ = (cljs.core._invoke[(function (){var G__26999 = x__17109__auto__;
return goog.typeOf(G__26999);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._invoke["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__16453__auto__ = this$;
if(and__16453__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__16453__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__17109__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16465__auto__ = (cljs.core._invoke[(function (){var G__27001 = x__17109__auto__;
return goog.typeOf(G__27001);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._invoke["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__16453__auto__ = this$;
if(and__16453__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__16453__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__17109__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16465__auto__ = (cljs.core._invoke[(function (){var G__27003 = x__17109__auto__;
return goog.typeOf(G__27003);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._invoke["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__16453__auto__ = this$;
if(and__16453__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__16453__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__17109__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16465__auto__ = (cljs.core._invoke[(function (){var G__27005 = x__17109__auto__;
return goog.typeOf(G__27005);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._invoke["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__16453__auto__ = this$;
if(and__16453__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__16453__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__17109__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16465__auto__ = (cljs.core._invoke[(function (){var G__27007 = x__17109__auto__;
return goog.typeOf(G__27007);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._invoke["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__16453__auto__ = this$;
if(and__16453__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__16453__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__17109__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16465__auto__ = (cljs.core._invoke[(function (){var G__27009 = x__17109__auto__;
return goog.typeOf(G__27009);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._invoke["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__16453__auto__ = this$;
if(and__16453__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__16453__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__17109__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16465__auto__ = (cljs.core._invoke[(function (){var G__27011 = x__17109__auto__;
return goog.typeOf(G__27011);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._invoke["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__16453__auto__ = this$;
if(and__16453__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__16453__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__17109__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16465__auto__ = (cljs.core._invoke[(function (){var G__27013 = x__17109__auto__;
return goog.typeOf(G__27013);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._invoke["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__16453__auto__ = this$;
if(and__16453__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__16453__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__17109__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16465__auto__ = (cljs.core._invoke[(function (){var G__27015 = x__17109__auto__;
return goog.typeOf(G__27015);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._invoke["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj27017 = {};
return obj27017;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__16453__auto__ = value;
if(and__16453__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__16453__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__17109__auto__ = (((value == null))?null:value);
return (function (){var or__16465__auto__ = (cljs.core._clone[(function (){var G__27021 = x__17109__auto__;
return goog.typeOf(G__27021);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._clone["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj27023 = {};
return obj27023;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__16453__auto__ = coll;
if(and__16453__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__16453__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__17109__auto__ = (((coll == null))?null:coll);
return (function (){var or__16465__auto__ = (cljs.core._count[(function (){var G__27027 = x__17109__auto__;
return goog.typeOf(G__27027);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._count["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj27029 = {};
return obj27029;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__16453__auto__ = coll;
if(and__16453__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__16453__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__17109__auto__ = (((coll == null))?null:coll);
return (function (){var or__16465__auto__ = (cljs.core._empty[(function (){var G__27033 = x__17109__auto__;
return goog.typeOf(G__27033);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._empty["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj27035 = {};
return obj27035;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__16453__auto__ = coll;
if(and__16453__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__16453__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__17109__auto__ = (((coll == null))?null:coll);
return (function (){var or__16465__auto__ = (cljs.core._conj[(function (){var G__27039 = x__17109__auto__;
return goog.typeOf(G__27039);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._conj["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj27041 = {};
return obj27041;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__16453__auto__ = coll;
if(and__16453__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__16453__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__17109__auto__ = (((coll == null))?null:coll);
return (function (){var or__16465__auto__ = (cljs.core._nth[(function (){var G__27047 = x__17109__auto__;
return goog.typeOf(G__27047);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._nth["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__16453__auto__ = coll;
if(and__16453__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__16453__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__17109__auto__ = (((coll == null))?null:coll);
return (function (){var or__16465__auto__ = (cljs.core._nth[(function (){var G__27049 = x__17109__auto__;
return goog.typeOf(G__27049);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._nth["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj27051 = {};
return obj27051;
})();


cljs.core.ISeq = (function (){var obj27053 = {};
return obj27053;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__16453__auto__ = coll;
if(and__16453__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__16453__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__17109__auto__ = (((coll == null))?null:coll);
return (function (){var or__16465__auto__ = (cljs.core._first[(function (){var G__27057 = x__17109__auto__;
return goog.typeOf(G__27057);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._first["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__16453__auto__ = coll;
if(and__16453__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__16453__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__17109__auto__ = (((coll == null))?null:coll);
return (function (){var or__16465__auto__ = (cljs.core._rest[(function (){var G__27061 = x__17109__auto__;
return goog.typeOf(G__27061);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._rest["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj27063 = {};
return obj27063;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__16453__auto__ = coll;
if(and__16453__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__16453__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__17109__auto__ = (((coll == null))?null:coll);
return (function (){var or__16465__auto__ = (cljs.core._next[(function (){var G__27067 = x__17109__auto__;
return goog.typeOf(G__27067);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._next["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj27069 = {};
return obj27069;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__16453__auto__ = o;
if(and__16453__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__16453__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__17109__auto__ = (((o == null))?null:o);
return (function (){var or__16465__auto__ = (cljs.core._lookup[(function (){var G__27075 = x__17109__auto__;
return goog.typeOf(G__27075);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._lookup["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__16453__auto__ = o;
if(and__16453__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__16453__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__17109__auto__ = (((o == null))?null:o);
return (function (){var or__16465__auto__ = (cljs.core._lookup[(function (){var G__27077 = x__17109__auto__;
return goog.typeOf(G__27077);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._lookup["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj27079 = {};
return obj27079;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__16453__auto__ = coll;
if(and__16453__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__16453__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__17109__auto__ = (((coll == null))?null:coll);
return (function (){var or__16465__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__27083 = x__17109__auto__;
return goog.typeOf(G__27083);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__16453__auto__ = coll;
if(and__16453__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__16453__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__17109__auto__ = (((coll == null))?null:coll);
return (function (){var or__16465__auto__ = (cljs.core._assoc[(function (){var G__27087 = x__17109__auto__;
return goog.typeOf(G__27087);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._assoc["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj27089 = {};
return obj27089;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__16453__auto__ = coll;
if(and__16453__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__16453__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__17109__auto__ = (((coll == null))?null:coll);
return (function (){var or__16465__auto__ = (cljs.core._dissoc[(function (){var G__27093 = x__17109__auto__;
return goog.typeOf(G__27093);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._dissoc["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj27095 = {};
return obj27095;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__16453__auto__ = coll;
if(and__16453__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__16453__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__17109__auto__ = (((coll == null))?null:coll);
return (function (){var or__16465__auto__ = (cljs.core._key[(function (){var G__27099 = x__17109__auto__;
return goog.typeOf(G__27099);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._key["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__16453__auto__ = coll;
if(and__16453__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__16453__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__17109__auto__ = (((coll == null))?null:coll);
return (function (){var or__16465__auto__ = (cljs.core._val[(function (){var G__27103 = x__17109__auto__;
return goog.typeOf(G__27103);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._val["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj27105 = {};
return obj27105;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__16453__auto__ = coll;
if(and__16453__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__16453__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__17109__auto__ = (((coll == null))?null:coll);
return (function (){var or__16465__auto__ = (cljs.core._disjoin[(function (){var G__27109 = x__17109__auto__;
return goog.typeOf(G__27109);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._disjoin["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj27111 = {};
return obj27111;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__16453__auto__ = coll;
if(and__16453__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__16453__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__17109__auto__ = (((coll == null))?null:coll);
return (function (){var or__16465__auto__ = (cljs.core._peek[(function (){var G__27115 = x__17109__auto__;
return goog.typeOf(G__27115);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._peek["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__16453__auto__ = coll;
if(and__16453__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__16453__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__17109__auto__ = (((coll == null))?null:coll);
return (function (){var or__16465__auto__ = (cljs.core._pop[(function (){var G__27119 = x__17109__auto__;
return goog.typeOf(G__27119);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._pop["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj27121 = {};
return obj27121;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__16453__auto__ = coll;
if(and__16453__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__16453__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__17109__auto__ = (((coll == null))?null:coll);
return (function (){var or__16465__auto__ = (cljs.core._assoc_n[(function (){var G__27125 = x__17109__auto__;
return goog.typeOf(G__27125);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj27127 = {};
return obj27127;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__16453__auto__ = o;
if(and__16453__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__16453__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__17109__auto__ = (((o == null))?null:o);
return (function (){var or__16465__auto__ = (cljs.core._deref[(function (){var G__27131 = x__17109__auto__;
return goog.typeOf(G__27131);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._deref["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj27133 = {};
return obj27133;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__16453__auto__ = o;
if(and__16453__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__16453__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__17109__auto__ = (((o == null))?null:o);
return (function (){var or__16465__auto__ = (cljs.core._deref_with_timeout[(function (){var G__27137 = x__17109__auto__;
return goog.typeOf(G__27137);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj27139 = {};
return obj27139;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__16453__auto__ = o;
if(and__16453__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__16453__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__17109__auto__ = (((o == null))?null:o);
return (function (){var or__16465__auto__ = (cljs.core._meta[(function (){var G__27143 = x__17109__auto__;
return goog.typeOf(G__27143);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._meta["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj27145 = {};
return obj27145;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__16453__auto__ = o;
if(and__16453__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__16453__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__17109__auto__ = (((o == null))?null:o);
return (function (){var or__16465__auto__ = (cljs.core._with_meta[(function (){var G__27149 = x__17109__auto__;
return goog.typeOf(G__27149);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._with_meta["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj27151 = {};
return obj27151;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__16453__auto__ = coll;
if(and__16453__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__16453__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__17109__auto__ = (((coll == null))?null:coll);
return (function (){var or__16465__auto__ = (cljs.core._reduce[(function (){var G__27157 = x__17109__auto__;
return goog.typeOf(G__27157);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._reduce["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__16453__auto__ = coll;
if(and__16453__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__16453__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__17109__auto__ = (((coll == null))?null:coll);
return (function (){var or__16465__auto__ = (cljs.core._reduce[(function (){var G__27159 = x__17109__auto__;
return goog.typeOf(G__27159);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._reduce["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj27161 = {};
return obj27161;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__16453__auto__ = coll;
if(and__16453__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__16453__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__17109__auto__ = (((coll == null))?null:coll);
return (function (){var or__16465__auto__ = (cljs.core._kv_reduce[(function (){var G__27165 = x__17109__auto__;
return goog.typeOf(G__27165);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj27167 = {};
return obj27167;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__16453__auto__ = o;
if(and__16453__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__16453__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__17109__auto__ = (((o == null))?null:o);
return (function (){var or__16465__auto__ = (cljs.core._equiv[(function (){var G__27171 = x__17109__auto__;
return goog.typeOf(G__27171);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._equiv["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj27173 = {};
return obj27173;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__16453__auto__ = o;
if(and__16453__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__16453__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__17109__auto__ = (((o == null))?null:o);
return (function (){var or__16465__auto__ = (cljs.core._hash[(function (){var G__27177 = x__17109__auto__;
return goog.typeOf(G__27177);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._hash["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj27179 = {};
return obj27179;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__16453__auto__ = o;
if(and__16453__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__16453__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__17109__auto__ = (((o == null))?null:o);
return (function (){var or__16465__auto__ = (cljs.core._seq[(function (){var G__27183 = x__17109__auto__;
return goog.typeOf(G__27183);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._seq["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj27185 = {};
return obj27185;
})();


cljs.core.IList = (function (){var obj27187 = {};
return obj27187;
})();


cljs.core.IRecord = (function (){var obj27189 = {};
return obj27189;
})();


cljs.core.IReversible = (function (){var obj27191 = {};
return obj27191;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__16453__auto__ = coll;
if(and__16453__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__16453__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__17109__auto__ = (((coll == null))?null:coll);
return (function (){var or__16465__auto__ = (cljs.core._rseq[(function (){var G__27195 = x__17109__auto__;
return goog.typeOf(G__27195);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._rseq["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj27197 = {};
return obj27197;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__16453__auto__ = coll;
if(and__16453__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__16453__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__17109__auto__ = (((coll == null))?null:coll);
return (function (){var or__16465__auto__ = (cljs.core._sorted_seq[(function (){var G__27201 = x__17109__auto__;
return goog.typeOf(G__27201);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__16453__auto__ = coll;
if(and__16453__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__16453__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__17109__auto__ = (((coll == null))?null:coll);
return (function (){var or__16465__auto__ = (cljs.core._sorted_seq_from[(function (){var G__27205 = x__17109__auto__;
return goog.typeOf(G__27205);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__16453__auto__ = coll;
if(and__16453__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__16453__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__17109__auto__ = (((coll == null))?null:coll);
return (function (){var or__16465__auto__ = (cljs.core._entry_key[(function (){var G__27209 = x__17109__auto__;
return goog.typeOf(G__27209);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._entry_key["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__16453__auto__ = coll;
if(and__16453__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__16453__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__17109__auto__ = (((coll == null))?null:coll);
return (function (){var or__16465__auto__ = (cljs.core._comparator[(function (){var G__27213 = x__17109__auto__;
return goog.typeOf(G__27213);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._comparator["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj27215 = {};
return obj27215;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__16453__auto__ = writer;
if(and__16453__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__16453__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__17109__auto__ = (((writer == null))?null:writer);
return (function (){var or__16465__auto__ = (cljs.core._write[(function (){var G__27219 = x__17109__auto__;
return goog.typeOf(G__27219);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._write["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__16453__auto__ = writer;
if(and__16453__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__16453__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__17109__auto__ = (((writer == null))?null:writer);
return (function (){var or__16465__auto__ = (cljs.core._flush[(function (){var G__27223 = x__17109__auto__;
return goog.typeOf(G__27223);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._flush["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj27225 = {};
return obj27225;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__16453__auto__ = o;
if(and__16453__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__16453__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__17109__auto__ = (((o == null))?null:o);
return (function (){var or__16465__auto__ = (cljs.core._pr_writer[(function (){var G__27229 = x__17109__auto__;
return goog.typeOf(G__27229);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj27231 = {};
return obj27231;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__16453__auto__ = d;
if(and__16453__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__16453__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__17109__auto__ = (((d == null))?null:d);
return (function (){var or__16465__auto__ = (cljs.core._realized_QMARK_[(function (){var G__27235 = x__17109__auto__;
return goog.typeOf(G__27235);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj27237 = {};
return obj27237;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__16453__auto__ = this$;
if(and__16453__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__16453__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__17109__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16465__auto__ = (cljs.core._notify_watches[(function (){var G__27241 = x__17109__auto__;
return goog.typeOf(G__27241);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__16453__auto__ = this$;
if(and__16453__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__16453__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__17109__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16465__auto__ = (cljs.core._add_watch[(function (){var G__27245 = x__17109__auto__;
return goog.typeOf(G__27245);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._add_watch["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__16453__auto__ = this$;
if(and__16453__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__16453__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__17109__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16465__auto__ = (cljs.core._remove_watch[(function (){var G__27249 = x__17109__auto__;
return goog.typeOf(G__27249);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj27251 = {};
return obj27251;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__16453__auto__ = coll;
if(and__16453__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__16453__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__17109__auto__ = (((coll == null))?null:coll);
return (function (){var or__16465__auto__ = (cljs.core._as_transient[(function (){var G__27255 = x__17109__auto__;
return goog.typeOf(G__27255);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._as_transient["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj27257 = {};
return obj27257;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__16453__auto__ = tcoll;
if(and__16453__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__16453__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__17109__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__16465__auto__ = (cljs.core._conj_BANG_[(function (){var G__27261 = x__17109__auto__;
return goog.typeOf(G__27261);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__16453__auto__ = tcoll;
if(and__16453__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__16453__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__17109__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__16465__auto__ = (cljs.core._persistent_BANG_[(function (){var G__27265 = x__17109__auto__;
return goog.typeOf(G__27265);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj27267 = {};
return obj27267;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__16453__auto__ = tcoll;
if(and__16453__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__16453__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__17109__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__16465__auto__ = (cljs.core._assoc_BANG_[(function (){var G__27271 = x__17109__auto__;
return goog.typeOf(G__27271);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj27273 = {};
return obj27273;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__16453__auto__ = tcoll;
if(and__16453__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__16453__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__17109__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__16465__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__27277 = x__17109__auto__;
return goog.typeOf(G__27277);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj27279 = {};
return obj27279;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__16453__auto__ = tcoll;
if(and__16453__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__16453__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__17109__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__16465__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__27283 = x__17109__auto__;
return goog.typeOf(G__27283);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__16453__auto__ = tcoll;
if(and__16453__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__16453__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__17109__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__16465__auto__ = (cljs.core._pop_BANG_[(function (){var G__27287 = x__17109__auto__;
return goog.typeOf(G__27287);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj27289 = {};
return obj27289;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__16453__auto__ = tcoll;
if(and__16453__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__16453__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__17109__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__16465__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__27293 = x__17109__auto__;
return goog.typeOf(G__27293);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj27295 = {};
return obj27295;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__16453__auto__ = x;
if(and__16453__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__16453__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__17109__auto__ = (((x == null))?null:x);
return (function (){var or__16465__auto__ = (cljs.core._compare[(function (){var G__27299 = x__17109__auto__;
return goog.typeOf(G__27299);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._compare["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj27301 = {};
return obj27301;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__16453__auto__ = coll;
if(and__16453__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__16453__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__17109__auto__ = (((coll == null))?null:coll);
return (function (){var or__16465__auto__ = (cljs.core._drop_first[(function (){var G__27305 = x__17109__auto__;
return goog.typeOf(G__27305);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._drop_first["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj27307 = {};
return obj27307;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__16453__auto__ = coll;
if(and__16453__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__16453__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__17109__auto__ = (((coll == null))?null:coll);
return (function (){var or__16465__auto__ = (cljs.core._chunked_first[(function (){var G__27311 = x__17109__auto__;
return goog.typeOf(G__27311);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__16453__auto__ = coll;
if(and__16453__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__16453__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__17109__auto__ = (((coll == null))?null:coll);
return (function (){var or__16465__auto__ = (cljs.core._chunked_rest[(function (){var G__27315 = x__17109__auto__;
return goog.typeOf(G__27315);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj27317 = {};
return obj27317;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__16453__auto__ = coll;
if(and__16453__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__16453__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__17109__auto__ = (((coll == null))?null:coll);
return (function (){var or__16465__auto__ = (cljs.core._chunked_next[(function (){var G__27321 = x__17109__auto__;
return goog.typeOf(G__27321);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj27323 = {};
return obj27323;
})();

cljs.core._name = (function _name(x){
if((function (){var and__16453__auto__ = x;
if(and__16453__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__16453__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__17109__auto__ = (((x == null))?null:x);
return (function (){var or__16465__auto__ = (cljs.core._name[(function (){var G__27327 = x__17109__auto__;
return goog.typeOf(G__27327);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._name["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__16453__auto__ = x;
if(and__16453__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__16453__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__17109__auto__ = (((x == null))?null:x);
return (function (){var or__16465__auto__ = (cljs.core._namespace[(function (){var G__27331 = x__17109__auto__;
return goog.typeOf(G__27331);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._namespace["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj27333 = {};
return obj27333;
})();


cljs.core.IReset = (function (){var obj27335 = {};
return obj27335;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__16453__auto__ = o;
if(and__16453__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__16453__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__17109__auto__ = (((o == null))?null:o);
return (function (){var or__16465__auto__ = (cljs.core._reset_BANG_[(function (){var G__27339 = x__17109__auto__;
return goog.typeOf(G__27339);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj27341 = {};
return obj27341;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__16453__auto__ = o;
if(and__16453__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__16453__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__17109__auto__ = (((o == null))?null:o);
return (function (){var or__16465__auto__ = (cljs.core._swap_BANG_[(function (){var G__27351 = x__17109__auto__;
return goog.typeOf(G__27351);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__16453__auto__ = o;
if(and__16453__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__16453__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__17109__auto__ = (((o == null))?null:o);
return (function (){var or__16465__auto__ = (cljs.core._swap_BANG_[(function (){var G__27353 = x__17109__auto__;
return goog.typeOf(G__27353);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__16453__auto__ = o;
if(and__16453__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__16453__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__17109__auto__ = (((o == null))?null:o);
return (function (){var or__16465__auto__ = (cljs.core._swap_BANG_[(function (){var G__27355 = x__17109__auto__;
return goog.typeOf(G__27355);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__16453__auto__ = o;
if(and__16453__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__16453__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__17109__auto__ = (((o == null))?null:o);
return (function (){var or__16465__auto__ = (cljs.core._swap_BANG_[(function (){var G__27357 = x__17109__auto__;
return goog.typeOf(G__27357);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj27359 = {};
return obj27359;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__16453__auto__ = o;
if(and__16453__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__16453__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__17109__auto__ = (((o == null))?null:o);
return (function (){var or__16465__auto__ = (cljs.core._vreset_BANG_[(function (){var G__27363 = x__17109__auto__;
return goog.typeOf(G__27363);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj27365 = {};
return obj27365;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__16453__auto__ = coll;
if(and__16453__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__16453__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__17109__auto__ = (((coll == null))?null:coll);
return (function (){var or__16465__auto__ = (cljs.core._iterator[(function (){var G__27369 = x__17109__auto__;
return goog.typeOf(G__27369);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._iterator["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__17052__auto__,writer__17053__auto__,opt__17054__auto__){
return cljs.core._write(writer__17053__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__27372 = (4294967295);
var G__27373 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__27372,G__27373) : Math.imul.call(null,G__27372,G__27373));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__27376 = a;
var G__27377 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__27376,G__27377) : Math.imul.call(null,G__27376,G__27377));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__27378 = (i + (2));
var G__27379 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__27378;
h1 = G__27379;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj27381 = {};
return obj27381;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__27382 = (i + (1));
var G__27383 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__27382;
hash = G__27383;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj27387 = {};
return obj27387;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__27390 = o;
if(G__27390){
var bit__17139__auto__ = (G__27390.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__17139__auto__) || (G__27390.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__27391 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__27391) : Math.floor.call(null,G__27391));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__16453__auto__ = cljs.core.not(a.ns);
if(and__16453__auto__){
return b.ns;
} else {
return and__16453__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__27398 = a.ns;
var G__27399 = b.ns;
return goog.array.defaultCompare(G__27398,G__27399);
})();
if(((0) === nsc)){
var G__27400 = a.name;
var G__27401 = b.name;
return goog.array.defaultCompare(G__27400,G__27401);
} else {
return nsc;
}
}
} else {
var G__27402 = a.name;
var G__27403 = b.name;
return goog.array.defaultCompare(G__27402,G__27403);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__16886__auto__ = self__._hash;
if(!((h__16886__auto__ == null))){
return h__16886__auto__;
} else {
var h__16886__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__16886__auto____$1;

return h__16886__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__27405 = null;
var G__27405__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__27405__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__27405 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__27405__2.call(this,self__,coll);
case 3:
return G__27405__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27405.cljs$core$IFn$_invoke$arity$2 = G__27405__2;
G__27405.cljs$core$IFn$_invoke$arity$3 = G__27405__3;
return G__27405;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args27404){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27404)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__17052__auto__,writer__17053__auto__,opt__17054__auto__){
return cljs.core._write(writer__17053__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__27453 = null;
var G__27453__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__27453__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__27453__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__27453__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__27453__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__27453__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__27453__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__27453__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__27453__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__27453__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__27453__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__27453__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__27453__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__27453__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__27453__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__27453__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__27453__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__27453__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__27453__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__27453__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__27453__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__27453__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__27409 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__27410 = a;
var G__27411 = b;
var G__27412 = c;
var G__27413 = d;
var G__27414 = e;
var G__27415 = f;
var G__27416 = g;
var G__27417 = h;
var G__27418 = i;
var G__27419 = j;
var G__27420 = k;
var G__27421 = l;
var G__27422 = m;
var G__27423 = n;
var G__27424 = o;
var G__27425 = p;
var G__27426 = q;
var G__27427 = r;
var G__27428 = s;
var G__27429 = t;
var G__27430 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__27409,G__27410,G__27411,G__27412,G__27413,G__27414,G__27415,G__27416,G__27417,G__27418,G__27419,G__27420,G__27421,G__27422,G__27423,G__27424,G__27425,G__27426,G__27427,G__27428,G__27429,G__27430) : cljs.core.apply.call(null,G__27409,G__27410,G__27411,G__27412,G__27413,G__27414,G__27415,G__27416,G__27417,G__27418,G__27419,G__27420,G__27421,G__27422,G__27423,G__27424,G__27425,G__27426,G__27427,G__27428,G__27429,G__27430));
});
G__27453 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__27453__1.call(this,self__);
case 2:
return G__27453__2.call(this,self__,a);
case 3:
return G__27453__3.call(this,self__,a,b);
case 4:
return G__27453__4.call(this,self__,a,b,c);
case 5:
return G__27453__5.call(this,self__,a,b,c,d);
case 6:
return G__27453__6.call(this,self__,a,b,c,d,e);
case 7:
return G__27453__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__27453__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__27453__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__27453__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__27453__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__27453__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__27453__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__27453__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__27453__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__27453__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__27453__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__27453__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__27453__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__27453__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__27453__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__27453__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27453.cljs$core$IFn$_invoke$arity$1 = G__27453__1;
G__27453.cljs$core$IFn$_invoke$arity$2 = G__27453__2;
G__27453.cljs$core$IFn$_invoke$arity$3 = G__27453__3;
G__27453.cljs$core$IFn$_invoke$arity$4 = G__27453__4;
G__27453.cljs$core$IFn$_invoke$arity$5 = G__27453__5;
G__27453.cljs$core$IFn$_invoke$arity$6 = G__27453__6;
G__27453.cljs$core$IFn$_invoke$arity$7 = G__27453__7;
G__27453.cljs$core$IFn$_invoke$arity$8 = G__27453__8;
G__27453.cljs$core$IFn$_invoke$arity$9 = G__27453__9;
G__27453.cljs$core$IFn$_invoke$arity$10 = G__27453__10;
G__27453.cljs$core$IFn$_invoke$arity$11 = G__27453__11;
G__27453.cljs$core$IFn$_invoke$arity$12 = G__27453__12;
G__27453.cljs$core$IFn$_invoke$arity$13 = G__27453__13;
G__27453.cljs$core$IFn$_invoke$arity$14 = G__27453__14;
G__27453.cljs$core$IFn$_invoke$arity$15 = G__27453__15;
G__27453.cljs$core$IFn$_invoke$arity$16 = G__27453__16;
G__27453.cljs$core$IFn$_invoke$arity$17 = G__27453__17;
G__27453.cljs$core$IFn$_invoke$arity$18 = G__27453__18;
G__27453.cljs$core$IFn$_invoke$arity$19 = G__27453__19;
G__27453.cljs$core$IFn$_invoke$arity$20 = G__27453__20;
G__27453.cljs$core$IFn$_invoke$arity$21 = G__27453__21;
G__27453.cljs$core$IFn$_invoke$arity$22 = G__27453__22;
return G__27453;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args27408){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27408)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__27431 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__27432 = a;
var G__27433 = b;
var G__27434 = c;
var G__27435 = d;
var G__27436 = e;
var G__27437 = f;
var G__27438 = g;
var G__27439 = h;
var G__27440 = i;
var G__27441 = j;
var G__27442 = k;
var G__27443 = l;
var G__27444 = m;
var G__27445 = n;
var G__27446 = o;
var G__27447 = p;
var G__27448 = q;
var G__27449 = r;
var G__27450 = s;
var G__27451 = t;
var G__27452 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__27431,G__27432,G__27433,G__27434,G__27435,G__27436,G__27437,G__27438,G__27439,G__27440,G__27441,G__27442,G__27443,G__27444,G__27445,G__27446,G__27447,G__27448,G__27449,G__27450,G__27451,G__27452) : cljs.core.apply.call(null,G__27431,G__27432,G__27433,G__27434,G__27435,G__27436,G__27437,G__27438,G__27439,G__27440,G__27441,G__27442,G__27443,G__27444,G__27445,G__27446,G__27447,G__27448,G__27449,G__27450,G__27451,G__27452));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__17052__auto__,writer__17053__auto__,opt__17054__auto__){
return cljs.core._write(writer__17053__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__27455 = x;
if(G__27455){
var bit__17146__auto__ = null;
if(cljs.core.truth_((function (){var or__16465__auto__ = bit__17146__auto__;
if(cljs.core.truth_(or__16465__auto__)){
return or__16465__auto__;
} else {
return G__27455.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__27455.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__27455);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__27455);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__27457 = value;
if(G__27457){
var bit__17146__auto__ = (G__27457.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__17146__auto__) || (G__27457.cljs$core$ICloneable$)){
return true;
} else {
if((!G__27457.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__27457);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__27457);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__27459 = coll;
if(G__27459){
var bit__17139__auto__ = (G__27459.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__17139__auto__) || (G__27459.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__27461 = coll;
if(G__27461){
var bit__17139__auto__ = (G__27461.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__17139__auto__) || (G__27461.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__27463 = coll;
if(G__27463){
var bit__17139__auto__ = (G__27463.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__17139__auto__) || (G__27463.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__27465 = coll;
if(G__27465){
var bit__17139__auto__ = (G__27465.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__17139__auto__) || (G__27465.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__27470__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__27471 = y;
var G__27472 = cljs.core.first(more);
var G__27473 = cljs.core.next(more);
x = G__27471;
y = G__27472;
more = G__27473;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__27470 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__27474__i = 0, G__27474__a = new Array(arguments.length -  2);
while (G__27474__i < G__27474__a.length) {G__27474__a[G__27474__i] = arguments[G__27474__i + 2]; ++G__27474__i;}
  more = new cljs.core.IndexedSeq(G__27474__a,0);
} 
return G__27470__delegate.call(this,x,y,more);};
G__27470.cljs$lang$maxFixedArity = 2;
G__27470.cljs$lang$applyTo = (function (arglist__27475){
var x = cljs.core.first(arglist__27475);
arglist__27475 = cljs.core.next(arglist__27475);
var y = cljs.core.first(arglist__27475);
var more = cljs.core.rest(arglist__27475);
return G__27470__delegate(x,y,more);
});
G__27470.cljs$core$IFn$_invoke$arity$variadic = G__27470__delegate;
return G__27470;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__27476 = null;
if (arguments.length > 2) {
var G__27477__i = 0, G__27477__a = new Array(arguments.length -  2);
while (G__27477__i < G__27477__a.length) {G__27477__a[G__27477__i] = arguments[G__27477__i + 2]; ++G__27477__i;}
G__27476 = new cljs.core.IndexedSeq(G__27477__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__27476);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__17052__auto__,writer__17053__auto__,opt__17054__auto__){
return cljs.core._write(writer__17053__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__27478 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__27478) : cljs.core.es6_iterator_seq.call(null,G__27478));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__17052__auto__,writer__17053__auto__,opt__17054__auto__){
return cljs.core._write(writer__17053__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__27479 = (n + (1));
var G__27480 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__27481 = cljs.core.next(coll__$1);
n = G__27479;
hash_code = G__27480;
coll__$1 = G__27481;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__27482 = (n + (1));
var G__27483 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__27484 = cljs.core.next(coll__$1);
n = G__27482;
hash_code = G__27483;
coll__$1 = G__27484;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__27485 = o;
return goog.getUid(G__27485);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__17052__auto__,writer__17053__auto__,opt__17054__auto__){
return cljs.core._write(writer__17053__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__27487 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27487) : cljs.core.deref.call(null,G__27487));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__27494 = val;
var G__27495 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27494,G__27495) : f.call(null,G__27494,G__27495));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__27500 = nval;
var G__27501 = (n + (1));
val = G__27500;
n = G__27501;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__27496 = val__$1;
var G__27497 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27496,G__27497) : f.call(null,G__27496,G__27497));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__27502 = nval;
var G__27503 = (n + (1));
val__$1 = G__27502;
n = G__27503;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__27498 = val__$1;
var G__27499 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27498,G__27499) : f.call(null,G__27498,G__27499));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__27504 = nval;
var G__27505 = (n + (1));
val__$1 = G__27504;
n = G__27505;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__27512 = val;
var G__27513 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27512,G__27513) : f.call(null,G__27512,G__27513));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__27518 = nval;
var G__27519 = (n + (1));
val = G__27518;
n = G__27519;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__27514 = val__$1;
var G__27515 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27514,G__27515) : f.call(null,G__27514,G__27515));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__27520 = nval;
var G__27521 = (n + (1));
val__$1 = G__27520;
n = G__27521;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__27516 = val__$1;
var G__27517 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27516,G__27517) : f.call(null,G__27516,G__27517));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__27522 = nval;
var G__27523 = (n + (1));
val__$1 = G__27522;
n = G__27523;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__27525 = x;
if(G__27525){
var bit__17146__auto__ = (G__27525.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__17146__auto__) || (G__27525.cljs$core$ICounted$)){
return true;
} else {
if((!G__27525.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__27525);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__27525);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__27527 = x;
if(G__27527){
var bit__17146__auto__ = (G__27527.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__17146__auto__) || (G__27527.cljs$core$IIndexed$)){
return true;
} else {
if((!G__27527.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__27527);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__27527);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__17052__auto__,writer__17053__auto__,opt__17054__auto__){
return cljs.core._write(writer__17053__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__27528 = coll__$1;
var G__27529 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__27528,G__27529) : cljs.core.equiv_sequential.call(null,G__27528,G__27529));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__27530 = o;
var G__27531 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__27530,G__27531) : cljs.core.cons.call(null,G__27530,G__27531));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__17052__auto__,writer__17053__auto__,opt__17054__auto__){
return cljs.core._write(writer__17053__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17443__auto__ = this;
return cljs.core.es6_iterator(this__17443__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__27534 = coll__$1;
var G__27535 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__27534,G__27535) : cljs.core.equiv_sequential.call(null,G__27534,G__27535));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__27536 = cljs.core.List.EMPTY;
var G__27537 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__27536,G__27537) : cljs.core.with_meta.call(null,G__27536,G__27537));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__27538 = f;
var G__27539 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__27538,G__27539) : cljs.core.seq_reduce.call(null,G__27538,G__27539));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__27540 = f;
var G__27541 = start;
var G__27542 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__27540,G__27541,G__27542) : cljs.core.seq_reduce.call(null,G__27540,G__27541,G__27542));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__27543 = o;
var G__27544 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__27543,G__27544) : cljs.core.cons.call(null,G__27543,G__27544));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__17052__auto__,writer__17053__auto__,opt__17054__auto__){
return cljs.core._write(writer__17053__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17443__auto__ = this;
return cljs.core.es6_iterator(this__17443__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__27545 = sn;
s = G__27545;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__27550__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__27551 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__27552 = cljs.core.first(xs);
var G__27553 = cljs.core.next(xs);
coll = G__27551;
x = G__27552;
xs = G__27553;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__27550 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__27554__i = 0, G__27554__a = new Array(arguments.length -  2);
while (G__27554__i < G__27554__a.length) {G__27554__a[G__27554__i] = arguments[G__27554__i + 2]; ++G__27554__i;}
  xs = new cljs.core.IndexedSeq(G__27554__a,0);
} 
return G__27550__delegate.call(this,coll,x,xs);};
G__27550.cljs$lang$maxFixedArity = 2;
G__27550.cljs$lang$applyTo = (function (arglist__27555){
var coll = cljs.core.first(arglist__27555);
arglist__27555 = cljs.core.next(arglist__27555);
var x = cljs.core.first(arglist__27555);
var xs = cljs.core.rest(arglist__27555);
return G__27550__delegate(coll,x,xs);
});
G__27550.cljs$core$IFn$_invoke$arity$variadic = G__27550__delegate;
return G__27550;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__27556 = null;
if (arguments.length > 2) {
var G__27557__i = 0, G__27557__a = new Array(arguments.length -  2);
while (G__27557__i < G__27557__a.length) {G__27557__a[G__27557__i] = arguments[G__27557__i + 2]; ++G__27557__i;}
G__27556 = new cljs.core.IndexedSeq(G__27557__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__27556);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__27558 = cljs.core.next(s);
var G__27559 = (acc + (1));
s = G__27558;
acc = G__27559;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__27561 = coll;
if(G__27561){
var bit__17139__auto__ = (G__27561.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__17139__auto__) || (G__27561.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__27562 = cljs.core.next(coll);
var G__27563 = (n - (1));
coll = G__27562;
n = G__27563;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__27564 = cljs.core.next(coll);
var G__27565 = (n - (1));
var G__27566 = not_found;
coll = G__27564;
n = G__27565;
not_found = G__27566;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__27571 = coll;
if(G__27571){
var bit__17139__auto__ = (G__27571.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__17139__auto__) || (G__27571.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__27572 = coll;
if(G__27572){
var bit__17146__auto__ = (G__27572.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__17146__auto__) || (G__27572.cljs$core$ISeq$)){
return true;
} else {
if((!G__27572.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__27572);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__27572);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__27573 = coll;
if(G__27573){
var bit__17139__auto__ = (G__27573.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__17139__auto__) || (G__27573.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__27574 = coll;
if(G__27574){
var bit__17146__auto__ = (G__27574.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__17146__auto__) || (G__27574.cljs$core$ISeq$)){
return true;
} else {
if((!G__27574.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__27574);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__27574);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__27575 = (n__$1 - (1));
var G__27576 = cljs.core.rest(xs);
n__$1 = G__27575;
xs = G__27576;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__27579 = o;
if(G__27579){
var bit__17139__auto__ = (G__27579.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__17139__auto__) || (G__27579.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__27580 = o;
if(G__27580){
var bit__17139__auto__ = (G__27580.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__17139__auto__) || (G__27580.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__27584__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__27585 = ret;
var G__27586 = cljs.core.first(kvs);
var G__27587 = cljs.core.second(kvs);
var G__27588 = cljs.core.nnext(kvs);
coll = G__27585;
k = G__27586;
v = G__27587;
kvs = G__27588;
continue;
} else {
return ret;
}
break;
}
};
var G__27584 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__27589__i = 0, G__27589__a = new Array(arguments.length -  3);
while (G__27589__i < G__27589__a.length) {G__27589__a[G__27589__i] = arguments[G__27589__i + 3]; ++G__27589__i;}
  kvs = new cljs.core.IndexedSeq(G__27589__a,0);
} 
return G__27584__delegate.call(this,coll,k,v,kvs);};
G__27584.cljs$lang$maxFixedArity = 3;
G__27584.cljs$lang$applyTo = (function (arglist__27590){
var coll = cljs.core.first(arglist__27590);
arglist__27590 = cljs.core.next(arglist__27590);
var k = cljs.core.first(arglist__27590);
arglist__27590 = cljs.core.next(arglist__27590);
var v = cljs.core.first(arglist__27590);
var kvs = cljs.core.rest(arglist__27590);
return G__27584__delegate(coll,k,v,kvs);
});
G__27584.cljs$core$IFn$_invoke$arity$variadic = G__27584__delegate;
return G__27584;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__27591 = null;
if (arguments.length > 3) {
var G__27592__i = 0, G__27592__a = new Array(arguments.length -  3);
while (G__27592__i < G__27592__a.length) {G__27592__a[G__27592__i] = arguments[G__27592__i + 3]; ++G__27592__i;}
G__27591 = new cljs.core.IndexedSeq(G__27592__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__27591);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__27595__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__27596 = ret;
var G__27597 = cljs.core.first(ks);
var G__27598 = cljs.core.next(ks);
coll = G__27596;
k = G__27597;
ks = G__27598;
continue;
} else {
return ret;
}
}
break;
}
};
var G__27595 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__27599__i = 0, G__27599__a = new Array(arguments.length -  2);
while (G__27599__i < G__27599__a.length) {G__27599__a[G__27599__i] = arguments[G__27599__i + 2]; ++G__27599__i;}
  ks = new cljs.core.IndexedSeq(G__27599__a,0);
} 
return G__27595__delegate.call(this,coll,k,ks);};
G__27595.cljs$lang$maxFixedArity = 2;
G__27595.cljs$lang$applyTo = (function (arglist__27600){
var coll = cljs.core.first(arglist__27600);
arglist__27600 = cljs.core.next(arglist__27600);
var k = cljs.core.first(arglist__27600);
var ks = cljs.core.rest(arglist__27600);
return G__27595__delegate(coll,k,ks);
});
G__27595.cljs$core$IFn$_invoke$arity$variadic = G__27595__delegate;
return G__27595;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__27601 = null;
if (arguments.length > 2) {
var G__27602__i = 0, G__27602__a = new Array(arguments.length -  2);
while (G__27602__i < G__27602__a.length) {G__27602__a[G__27602__i] = arguments[G__27602__i + 2]; ++G__27602__i;}
G__27601 = new cljs.core.IndexedSeq(G__27602__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__27601);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__16465__auto__ = (function (){var G__27607 = f;
return goog.isFunction(G__27607);
})();
if(cljs.core.truth_(or__16465__auto__)){
return or__16465__auto__;
} else {
var G__27608 = f;
if(G__27608){
var bit__17146__auto__ = null;
if(cljs.core.truth_((function (){var or__16465__auto____$1 = bit__17146__auto__;
if(cljs.core.truth_(or__16465__auto____$1)){
return or__16465__auto____$1;
} else {
return G__27608.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__27608.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__27608);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__27608);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__28074 = null;
var G__28074__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__28074__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__27610 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__27610) : self__.afn.call(null,G__27610));
});
var G__28074__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__27611 = a;
var G__27612 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__27611,G__27612) : self__.afn.call(null,G__27611,G__27612));
});
var G__28074__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__27613 = a;
var G__27614 = b;
var G__27615 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__27613,G__27614,G__27615) : self__.afn.call(null,G__27613,G__27614,G__27615));
});
var G__28074__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__27616 = a;
var G__27617 = b;
var G__27618 = c;
var G__27619 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__27616,G__27617,G__27618,G__27619) : self__.afn.call(null,G__27616,G__27617,G__27618,G__27619));
});
var G__28074__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__27620 = a;
var G__27621 = b;
var G__27622 = c;
var G__27623 = d;
var G__27624 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__27620,G__27621,G__27622,G__27623,G__27624) : self__.afn.call(null,G__27620,G__27621,G__27622,G__27623,G__27624));
});
var G__28074__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__27625 = a;
var G__27626 = b;
var G__27627 = c;
var G__27628 = d;
var G__27629 = e;
var G__27630 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__27625,G__27626,G__27627,G__27628,G__27629,G__27630) : self__.afn.call(null,G__27625,G__27626,G__27627,G__27628,G__27629,G__27630));
});
var G__28074__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__27631 = a;
var G__27632 = b;
var G__27633 = c;
var G__27634 = d;
var G__27635 = e;
var G__27636 = f;
var G__27637 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__27631,G__27632,G__27633,G__27634,G__27635,G__27636,G__27637) : self__.afn.call(null,G__27631,G__27632,G__27633,G__27634,G__27635,G__27636,G__27637));
});
var G__28074__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__27638 = a;
var G__27639 = b;
var G__27640 = c;
var G__27641 = d;
var G__27642 = e;
var G__27643 = f;
var G__27644 = g;
var G__27645 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__27638,G__27639,G__27640,G__27641,G__27642,G__27643,G__27644,G__27645) : self__.afn.call(null,G__27638,G__27639,G__27640,G__27641,G__27642,G__27643,G__27644,G__27645));
});
var G__28074__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__27646 = a;
var G__27647 = b;
var G__27648 = c;
var G__27649 = d;
var G__27650 = e;
var G__27651 = f;
var G__27652 = g;
var G__27653 = h;
var G__27654 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__27646,G__27647,G__27648,G__27649,G__27650,G__27651,G__27652,G__27653,G__27654) : self__.afn.call(null,G__27646,G__27647,G__27648,G__27649,G__27650,G__27651,G__27652,G__27653,G__27654));
});
var G__28074__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__27655 = a;
var G__27656 = b;
var G__27657 = c;
var G__27658 = d;
var G__27659 = e;
var G__27660 = f;
var G__27661 = g;
var G__27662 = h;
var G__27663 = i;
var G__27664 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__27655,G__27656,G__27657,G__27658,G__27659,G__27660,G__27661,G__27662,G__27663,G__27664) : self__.afn.call(null,G__27655,G__27656,G__27657,G__27658,G__27659,G__27660,G__27661,G__27662,G__27663,G__27664));
});
var G__28074__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__27665 = a;
var G__27666 = b;
var G__27667 = c;
var G__27668 = d;
var G__27669 = e;
var G__27670 = f;
var G__27671 = g;
var G__27672 = h;
var G__27673 = i;
var G__27674 = j;
var G__27675 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__27665,G__27666,G__27667,G__27668,G__27669,G__27670,G__27671,G__27672,G__27673,G__27674,G__27675) : self__.afn.call(null,G__27665,G__27666,G__27667,G__27668,G__27669,G__27670,G__27671,G__27672,G__27673,G__27674,G__27675));
});
var G__28074__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__27676 = a;
var G__27677 = b;
var G__27678 = c;
var G__27679 = d;
var G__27680 = e;
var G__27681 = f;
var G__27682 = g;
var G__27683 = h;
var G__27684 = i;
var G__27685 = j;
var G__27686 = k;
var G__27687 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__27676,G__27677,G__27678,G__27679,G__27680,G__27681,G__27682,G__27683,G__27684,G__27685,G__27686,G__27687) : self__.afn.call(null,G__27676,G__27677,G__27678,G__27679,G__27680,G__27681,G__27682,G__27683,G__27684,G__27685,G__27686,G__27687));
});
var G__28074__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__27688 = a;
var G__27689 = b;
var G__27690 = c;
var G__27691 = d;
var G__27692 = e;
var G__27693 = f;
var G__27694 = g;
var G__27695 = h;
var G__27696 = i;
var G__27697 = j;
var G__27698 = k;
var G__27699 = l;
var G__27700 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__27688,G__27689,G__27690,G__27691,G__27692,G__27693,G__27694,G__27695,G__27696,G__27697,G__27698,G__27699,G__27700) : self__.afn.call(null,G__27688,G__27689,G__27690,G__27691,G__27692,G__27693,G__27694,G__27695,G__27696,G__27697,G__27698,G__27699,G__27700));
});
var G__28074__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__27701 = a;
var G__27702 = b;
var G__27703 = c;
var G__27704 = d;
var G__27705 = e;
var G__27706 = f;
var G__27707 = g;
var G__27708 = h;
var G__27709 = i;
var G__27710 = j;
var G__27711 = k;
var G__27712 = l;
var G__27713 = m;
var G__27714 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__27701,G__27702,G__27703,G__27704,G__27705,G__27706,G__27707,G__27708,G__27709,G__27710,G__27711,G__27712,G__27713,G__27714) : self__.afn.call(null,G__27701,G__27702,G__27703,G__27704,G__27705,G__27706,G__27707,G__27708,G__27709,G__27710,G__27711,G__27712,G__27713,G__27714));
});
var G__28074__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__27715 = a;
var G__27716 = b;
var G__27717 = c;
var G__27718 = d;
var G__27719 = e;
var G__27720 = f;
var G__27721 = g;
var G__27722 = h;
var G__27723 = i;
var G__27724 = j;
var G__27725 = k;
var G__27726 = l;
var G__27727 = m;
var G__27728 = n;
var G__27729 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__27715,G__27716,G__27717,G__27718,G__27719,G__27720,G__27721,G__27722,G__27723,G__27724,G__27725,G__27726,G__27727,G__27728,G__27729) : self__.afn.call(null,G__27715,G__27716,G__27717,G__27718,G__27719,G__27720,G__27721,G__27722,G__27723,G__27724,G__27725,G__27726,G__27727,G__27728,G__27729));
});
var G__28074__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__27730 = a;
var G__27731 = b;
var G__27732 = c;
var G__27733 = d;
var G__27734 = e;
var G__27735 = f;
var G__27736 = g;
var G__27737 = h;
var G__27738 = i;
var G__27739 = j;
var G__27740 = k;
var G__27741 = l;
var G__27742 = m;
var G__27743 = n;
var G__27744 = o;
var G__27745 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__27730,G__27731,G__27732,G__27733,G__27734,G__27735,G__27736,G__27737,G__27738,G__27739,G__27740,G__27741,G__27742,G__27743,G__27744,G__27745) : self__.afn.call(null,G__27730,G__27731,G__27732,G__27733,G__27734,G__27735,G__27736,G__27737,G__27738,G__27739,G__27740,G__27741,G__27742,G__27743,G__27744,G__27745));
});
var G__28074__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__27746 = a;
var G__27747 = b;
var G__27748 = c;
var G__27749 = d;
var G__27750 = e;
var G__27751 = f;
var G__27752 = g;
var G__27753 = h;
var G__27754 = i;
var G__27755 = j;
var G__27756 = k;
var G__27757 = l;
var G__27758 = m;
var G__27759 = n;
var G__27760 = o;
var G__27761 = p;
var G__27762 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__27746,G__27747,G__27748,G__27749,G__27750,G__27751,G__27752,G__27753,G__27754,G__27755,G__27756,G__27757,G__27758,G__27759,G__27760,G__27761,G__27762) : self__.afn.call(null,G__27746,G__27747,G__27748,G__27749,G__27750,G__27751,G__27752,G__27753,G__27754,G__27755,G__27756,G__27757,G__27758,G__27759,G__27760,G__27761,G__27762));
});
var G__28074__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__27763 = a;
var G__27764 = b;
var G__27765 = c;
var G__27766 = d;
var G__27767 = e;
var G__27768 = f;
var G__27769 = g;
var G__27770 = h;
var G__27771 = i;
var G__27772 = j;
var G__27773 = k;
var G__27774 = l;
var G__27775 = m;
var G__27776 = n;
var G__27777 = o;
var G__27778 = p;
var G__27779 = q;
var G__27780 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__27763,G__27764,G__27765,G__27766,G__27767,G__27768,G__27769,G__27770,G__27771,G__27772,G__27773,G__27774,G__27775,G__27776,G__27777,G__27778,G__27779,G__27780) : self__.afn.call(null,G__27763,G__27764,G__27765,G__27766,G__27767,G__27768,G__27769,G__27770,G__27771,G__27772,G__27773,G__27774,G__27775,G__27776,G__27777,G__27778,G__27779,G__27780));
});
var G__28074__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__27781 = a;
var G__27782 = b;
var G__27783 = c;
var G__27784 = d;
var G__27785 = e;
var G__27786 = f;
var G__27787 = g;
var G__27788 = h;
var G__27789 = i;
var G__27790 = j;
var G__27791 = k;
var G__27792 = l;
var G__27793 = m;
var G__27794 = n;
var G__27795 = o;
var G__27796 = p;
var G__27797 = q;
var G__27798 = r;
var G__27799 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__27781,G__27782,G__27783,G__27784,G__27785,G__27786,G__27787,G__27788,G__27789,G__27790,G__27791,G__27792,G__27793,G__27794,G__27795,G__27796,G__27797,G__27798,G__27799) : self__.afn.call(null,G__27781,G__27782,G__27783,G__27784,G__27785,G__27786,G__27787,G__27788,G__27789,G__27790,G__27791,G__27792,G__27793,G__27794,G__27795,G__27796,G__27797,G__27798,G__27799));
});
var G__28074__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__27800 = a;
var G__27801 = b;
var G__27802 = c;
var G__27803 = d;
var G__27804 = e;
var G__27805 = f;
var G__27806 = g;
var G__27807 = h;
var G__27808 = i;
var G__27809 = j;
var G__27810 = k;
var G__27811 = l;
var G__27812 = m;
var G__27813 = n;
var G__27814 = o;
var G__27815 = p;
var G__27816 = q;
var G__27817 = r;
var G__27818 = s;
var G__27819 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__27800,G__27801,G__27802,G__27803,G__27804,G__27805,G__27806,G__27807,G__27808,G__27809,G__27810,G__27811,G__27812,G__27813,G__27814,G__27815,G__27816,G__27817,G__27818,G__27819) : self__.afn.call(null,G__27800,G__27801,G__27802,G__27803,G__27804,G__27805,G__27806,G__27807,G__27808,G__27809,G__27810,G__27811,G__27812,G__27813,G__27814,G__27815,G__27816,G__27817,G__27818,G__27819));
});
var G__28074__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__27820 = self__.afn;
var G__27821 = a;
var G__27822 = b;
var G__27823 = c;
var G__27824 = d;
var G__27825 = e;
var G__27826 = f;
var G__27827 = g;
var G__27828 = h;
var G__27829 = i;
var G__27830 = j;
var G__27831 = k;
var G__27832 = l;
var G__27833 = m;
var G__27834 = n;
var G__27835 = o;
var G__27836 = p;
var G__27837 = q;
var G__27838 = r;
var G__27839 = s;
var G__27840 = t;
var G__27841 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__27820,G__27821,G__27822,G__27823,G__27824,G__27825,G__27826,G__27827,G__27828,G__27829,G__27830,G__27831,G__27832,G__27833,G__27834,G__27835,G__27836,G__27837,G__27838,G__27839,G__27840,G__27841) : cljs.core.apply.call(null,G__27820,G__27821,G__27822,G__27823,G__27824,G__27825,G__27826,G__27827,G__27828,G__27829,G__27830,G__27831,G__27832,G__27833,G__27834,G__27835,G__27836,G__27837,G__27838,G__27839,G__27840,G__27841));
});
G__28074 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__28074__1.call(this,self__);
case 2:
return G__28074__2.call(this,self__,a);
case 3:
return G__28074__3.call(this,self__,a,b);
case 4:
return G__28074__4.call(this,self__,a,b,c);
case 5:
return G__28074__5.call(this,self__,a,b,c,d);
case 6:
return G__28074__6.call(this,self__,a,b,c,d,e);
case 7:
return G__28074__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__28074__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__28074__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__28074__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__28074__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__28074__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__28074__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__28074__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__28074__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__28074__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__28074__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__28074__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__28074__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__28074__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__28074__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__28074__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28074.cljs$core$IFn$_invoke$arity$1 = G__28074__1;
G__28074.cljs$core$IFn$_invoke$arity$2 = G__28074__2;
G__28074.cljs$core$IFn$_invoke$arity$3 = G__28074__3;
G__28074.cljs$core$IFn$_invoke$arity$4 = G__28074__4;
G__28074.cljs$core$IFn$_invoke$arity$5 = G__28074__5;
G__28074.cljs$core$IFn$_invoke$arity$6 = G__28074__6;
G__28074.cljs$core$IFn$_invoke$arity$7 = G__28074__7;
G__28074.cljs$core$IFn$_invoke$arity$8 = G__28074__8;
G__28074.cljs$core$IFn$_invoke$arity$9 = G__28074__9;
G__28074.cljs$core$IFn$_invoke$arity$10 = G__28074__10;
G__28074.cljs$core$IFn$_invoke$arity$11 = G__28074__11;
G__28074.cljs$core$IFn$_invoke$arity$12 = G__28074__12;
G__28074.cljs$core$IFn$_invoke$arity$13 = G__28074__13;
G__28074.cljs$core$IFn$_invoke$arity$14 = G__28074__14;
G__28074.cljs$core$IFn$_invoke$arity$15 = G__28074__15;
G__28074.cljs$core$IFn$_invoke$arity$16 = G__28074__16;
G__28074.cljs$core$IFn$_invoke$arity$17 = G__28074__17;
G__28074.cljs$core$IFn$_invoke$arity$18 = G__28074__18;
G__28074.cljs$core$IFn$_invoke$arity$19 = G__28074__19;
G__28074.cljs$core$IFn$_invoke$arity$20 = G__28074__20;
G__28074.cljs$core$IFn$_invoke$arity$21 = G__28074__21;
G__28074.cljs$core$IFn$_invoke$arity$22 = G__28074__22;
return G__28074;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args27609){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27609)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__27842 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__27842) : self__.afn.call(null,G__27842));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__27843 = a;
var G__27844 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__27843,G__27844) : self__.afn.call(null,G__27843,G__27844));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__27845 = a;
var G__27846 = b;
var G__27847 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__27845,G__27846,G__27847) : self__.afn.call(null,G__27845,G__27846,G__27847));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__27848 = a;
var G__27849 = b;
var G__27850 = c;
var G__27851 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__27848,G__27849,G__27850,G__27851) : self__.afn.call(null,G__27848,G__27849,G__27850,G__27851));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__27852 = a;
var G__27853 = b;
var G__27854 = c;
var G__27855 = d;
var G__27856 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__27852,G__27853,G__27854,G__27855,G__27856) : self__.afn.call(null,G__27852,G__27853,G__27854,G__27855,G__27856));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__27857 = a;
var G__27858 = b;
var G__27859 = c;
var G__27860 = d;
var G__27861 = e;
var G__27862 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__27857,G__27858,G__27859,G__27860,G__27861,G__27862) : self__.afn.call(null,G__27857,G__27858,G__27859,G__27860,G__27861,G__27862));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__27863 = a;
var G__27864 = b;
var G__27865 = c;
var G__27866 = d;
var G__27867 = e;
var G__27868 = f;
var G__27869 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__27863,G__27864,G__27865,G__27866,G__27867,G__27868,G__27869) : self__.afn.call(null,G__27863,G__27864,G__27865,G__27866,G__27867,G__27868,G__27869));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__27870 = a;
var G__27871 = b;
var G__27872 = c;
var G__27873 = d;
var G__27874 = e;
var G__27875 = f;
var G__27876 = g;
var G__27877 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__27870,G__27871,G__27872,G__27873,G__27874,G__27875,G__27876,G__27877) : self__.afn.call(null,G__27870,G__27871,G__27872,G__27873,G__27874,G__27875,G__27876,G__27877));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__27878 = a;
var G__27879 = b;
var G__27880 = c;
var G__27881 = d;
var G__27882 = e;
var G__27883 = f;
var G__27884 = g;
var G__27885 = h;
var G__27886 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__27878,G__27879,G__27880,G__27881,G__27882,G__27883,G__27884,G__27885,G__27886) : self__.afn.call(null,G__27878,G__27879,G__27880,G__27881,G__27882,G__27883,G__27884,G__27885,G__27886));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__27887 = a;
var G__27888 = b;
var G__27889 = c;
var G__27890 = d;
var G__27891 = e;
var G__27892 = f;
var G__27893 = g;
var G__27894 = h;
var G__27895 = i;
var G__27896 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__27887,G__27888,G__27889,G__27890,G__27891,G__27892,G__27893,G__27894,G__27895,G__27896) : self__.afn.call(null,G__27887,G__27888,G__27889,G__27890,G__27891,G__27892,G__27893,G__27894,G__27895,G__27896));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__27897 = a;
var G__27898 = b;
var G__27899 = c;
var G__27900 = d;
var G__27901 = e;
var G__27902 = f;
var G__27903 = g;
var G__27904 = h;
var G__27905 = i;
var G__27906 = j;
var G__27907 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__27897,G__27898,G__27899,G__27900,G__27901,G__27902,G__27903,G__27904,G__27905,G__27906,G__27907) : self__.afn.call(null,G__27897,G__27898,G__27899,G__27900,G__27901,G__27902,G__27903,G__27904,G__27905,G__27906,G__27907));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__27908 = a;
var G__27909 = b;
var G__27910 = c;
var G__27911 = d;
var G__27912 = e;
var G__27913 = f;
var G__27914 = g;
var G__27915 = h;
var G__27916 = i;
var G__27917 = j;
var G__27918 = k;
var G__27919 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__27908,G__27909,G__27910,G__27911,G__27912,G__27913,G__27914,G__27915,G__27916,G__27917,G__27918,G__27919) : self__.afn.call(null,G__27908,G__27909,G__27910,G__27911,G__27912,G__27913,G__27914,G__27915,G__27916,G__27917,G__27918,G__27919));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__27920 = a;
var G__27921 = b;
var G__27922 = c;
var G__27923 = d;
var G__27924 = e;
var G__27925 = f;
var G__27926 = g;
var G__27927 = h;
var G__27928 = i;
var G__27929 = j;
var G__27930 = k;
var G__27931 = l;
var G__27932 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__27920,G__27921,G__27922,G__27923,G__27924,G__27925,G__27926,G__27927,G__27928,G__27929,G__27930,G__27931,G__27932) : self__.afn.call(null,G__27920,G__27921,G__27922,G__27923,G__27924,G__27925,G__27926,G__27927,G__27928,G__27929,G__27930,G__27931,G__27932));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__27933 = a;
var G__27934 = b;
var G__27935 = c;
var G__27936 = d;
var G__27937 = e;
var G__27938 = f;
var G__27939 = g;
var G__27940 = h;
var G__27941 = i;
var G__27942 = j;
var G__27943 = k;
var G__27944 = l;
var G__27945 = m;
var G__27946 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__27933,G__27934,G__27935,G__27936,G__27937,G__27938,G__27939,G__27940,G__27941,G__27942,G__27943,G__27944,G__27945,G__27946) : self__.afn.call(null,G__27933,G__27934,G__27935,G__27936,G__27937,G__27938,G__27939,G__27940,G__27941,G__27942,G__27943,G__27944,G__27945,G__27946));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__27947 = a;
var G__27948 = b;
var G__27949 = c;
var G__27950 = d;
var G__27951 = e;
var G__27952 = f;
var G__27953 = g;
var G__27954 = h;
var G__27955 = i;
var G__27956 = j;
var G__27957 = k;
var G__27958 = l;
var G__27959 = m;
var G__27960 = n;
var G__27961 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__27947,G__27948,G__27949,G__27950,G__27951,G__27952,G__27953,G__27954,G__27955,G__27956,G__27957,G__27958,G__27959,G__27960,G__27961) : self__.afn.call(null,G__27947,G__27948,G__27949,G__27950,G__27951,G__27952,G__27953,G__27954,G__27955,G__27956,G__27957,G__27958,G__27959,G__27960,G__27961));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__27962 = a;
var G__27963 = b;
var G__27964 = c;
var G__27965 = d;
var G__27966 = e;
var G__27967 = f;
var G__27968 = g;
var G__27969 = h;
var G__27970 = i;
var G__27971 = j;
var G__27972 = k;
var G__27973 = l;
var G__27974 = m;
var G__27975 = n;
var G__27976 = o;
var G__27977 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__27962,G__27963,G__27964,G__27965,G__27966,G__27967,G__27968,G__27969,G__27970,G__27971,G__27972,G__27973,G__27974,G__27975,G__27976,G__27977) : self__.afn.call(null,G__27962,G__27963,G__27964,G__27965,G__27966,G__27967,G__27968,G__27969,G__27970,G__27971,G__27972,G__27973,G__27974,G__27975,G__27976,G__27977));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__27978 = a;
var G__27979 = b;
var G__27980 = c;
var G__27981 = d;
var G__27982 = e;
var G__27983 = f;
var G__27984 = g;
var G__27985 = h;
var G__27986 = i;
var G__27987 = j;
var G__27988 = k;
var G__27989 = l;
var G__27990 = m;
var G__27991 = n;
var G__27992 = o;
var G__27993 = p;
var G__27994 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__27978,G__27979,G__27980,G__27981,G__27982,G__27983,G__27984,G__27985,G__27986,G__27987,G__27988,G__27989,G__27990,G__27991,G__27992,G__27993,G__27994) : self__.afn.call(null,G__27978,G__27979,G__27980,G__27981,G__27982,G__27983,G__27984,G__27985,G__27986,G__27987,G__27988,G__27989,G__27990,G__27991,G__27992,G__27993,G__27994));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__27995 = a;
var G__27996 = b;
var G__27997 = c;
var G__27998 = d;
var G__27999 = e;
var G__28000 = f;
var G__28001 = g;
var G__28002 = h;
var G__28003 = i;
var G__28004 = j;
var G__28005 = k;
var G__28006 = l;
var G__28007 = m;
var G__28008 = n;
var G__28009 = o;
var G__28010 = p;
var G__28011 = q;
var G__28012 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__27995,G__27996,G__27997,G__27998,G__27999,G__28000,G__28001,G__28002,G__28003,G__28004,G__28005,G__28006,G__28007,G__28008,G__28009,G__28010,G__28011,G__28012) : self__.afn.call(null,G__27995,G__27996,G__27997,G__27998,G__27999,G__28000,G__28001,G__28002,G__28003,G__28004,G__28005,G__28006,G__28007,G__28008,G__28009,G__28010,G__28011,G__28012));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__28013 = a;
var G__28014 = b;
var G__28015 = c;
var G__28016 = d;
var G__28017 = e;
var G__28018 = f;
var G__28019 = g;
var G__28020 = h;
var G__28021 = i;
var G__28022 = j;
var G__28023 = k;
var G__28024 = l;
var G__28025 = m;
var G__28026 = n;
var G__28027 = o;
var G__28028 = p;
var G__28029 = q;
var G__28030 = r;
var G__28031 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__28013,G__28014,G__28015,G__28016,G__28017,G__28018,G__28019,G__28020,G__28021,G__28022,G__28023,G__28024,G__28025,G__28026,G__28027,G__28028,G__28029,G__28030,G__28031) : self__.afn.call(null,G__28013,G__28014,G__28015,G__28016,G__28017,G__28018,G__28019,G__28020,G__28021,G__28022,G__28023,G__28024,G__28025,G__28026,G__28027,G__28028,G__28029,G__28030,G__28031));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__28032 = a;
var G__28033 = b;
var G__28034 = c;
var G__28035 = d;
var G__28036 = e;
var G__28037 = f;
var G__28038 = g;
var G__28039 = h;
var G__28040 = i;
var G__28041 = j;
var G__28042 = k;
var G__28043 = l;
var G__28044 = m;
var G__28045 = n;
var G__28046 = o;
var G__28047 = p;
var G__28048 = q;
var G__28049 = r;
var G__28050 = s;
var G__28051 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__28032,G__28033,G__28034,G__28035,G__28036,G__28037,G__28038,G__28039,G__28040,G__28041,G__28042,G__28043,G__28044,G__28045,G__28046,G__28047,G__28048,G__28049,G__28050,G__28051) : self__.afn.call(null,G__28032,G__28033,G__28034,G__28035,G__28036,G__28037,G__28038,G__28039,G__28040,G__28041,G__28042,G__28043,G__28044,G__28045,G__28046,G__28047,G__28048,G__28049,G__28050,G__28051));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__28052 = self__.afn;
var G__28053 = a;
var G__28054 = b;
var G__28055 = c;
var G__28056 = d;
var G__28057 = e;
var G__28058 = f;
var G__28059 = g;
var G__28060 = h;
var G__28061 = i;
var G__28062 = j;
var G__28063 = k;
var G__28064 = l;
var G__28065 = m;
var G__28066 = n;
var G__28067 = o;
var G__28068 = p;
var G__28069 = q;
var G__28070 = r;
var G__28071 = s;
var G__28072 = t;
var G__28073 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__28052,G__28053,G__28054,G__28055,G__28056,G__28057,G__28058,G__28059,G__28060,G__28061,G__28062,G__28063,G__28064,G__28065,G__28066,G__28067,G__28068,G__28069,G__28070,G__28071,G__28072,G__28073) : cljs.core.apply.call(null,G__28052,G__28053,G__28054,G__28055,G__28056,G__28057,G__28058,G__28059,G__28060,G__28061,G__28062,G__28063,G__28064,G__28065,G__28066,G__28067,G__28068,G__28069,G__28070,G__28071,G__28072,G__28073));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__17052__auto__,writer__17053__auto__,opt__17054__auto__){
return cljs.core._write(writer__17053__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__28078 = o;
if(G__28078){
var bit__17146__auto__ = (G__28078.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__17146__auto__) || (G__28078.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__28078.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__28078);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__28078);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__16453__auto__ = !((o == null));
if(and__16453__auto__){
var G__28082 = o;
if(G__28082){
var bit__17146__auto__ = (G__28082.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__17146__auto__) || (G__28082.cljs$core$IMeta$)){
return true;
} else {
if((!G__28082.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__28082);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__28082);
}
} else {
return and__16453__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__28085__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__28086 = ret;
var G__28087 = cljs.core.first(ks);
var G__28088 = cljs.core.next(ks);
coll = G__28086;
k = G__28087;
ks = G__28088;
continue;
} else {
return ret;
}
}
break;
}
};
var G__28085 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__28089__i = 0, G__28089__a = new Array(arguments.length -  2);
while (G__28089__i < G__28089__a.length) {G__28089__a[G__28089__i] = arguments[G__28089__i + 2]; ++G__28089__i;}
  ks = new cljs.core.IndexedSeq(G__28089__a,0);
} 
return G__28085__delegate.call(this,coll,k,ks);};
G__28085.cljs$lang$maxFixedArity = 2;
G__28085.cljs$lang$applyTo = (function (arglist__28090){
var coll = cljs.core.first(arglist__28090);
arglist__28090 = cljs.core.next(arglist__28090);
var k = cljs.core.first(arglist__28090);
var ks = cljs.core.rest(arglist__28090);
return G__28085__delegate(coll,k,ks);
});
G__28085.cljs$core$IFn$_invoke$arity$variadic = G__28085__delegate;
return G__28085;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__28091 = null;
if (arguments.length > 2) {
var G__28092__i = 0, G__28092__a = new Array(arguments.length -  2);
while (G__28092__i < G__28092__a.length) {G__28092__a[G__28092__i] = arguments[G__28092__i + 2]; ++G__28092__i;}
G__28091 = new cljs.core.IndexedSeq(G__28092__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__28091);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__28094 = x;
if(G__28094){
var bit__17146__auto__ = (G__28094.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__17146__auto__) || (G__28094.cljs$core$ICollection$)){
return true;
} else {
if((!G__28094.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__28094);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__28094);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__28096 = x;
if(G__28096){
var bit__17146__auto__ = (G__28096.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__17146__auto__) || (G__28096.cljs$core$ISet$)){
return true;
} else {
if((!G__28096.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__28096);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__28096);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__28098 = x;
if(G__28098){
var bit__17146__auto__ = (G__28098.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__17146__auto__) || (G__28098.cljs$core$IAssociative$)){
return true;
} else {
if((!G__28098.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__28098);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__28098);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__28100 = x;
if(G__28100){
var bit__17146__auto__ = (G__28100.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__17146__auto__) || (G__28100.cljs$core$ISequential$)){
return true;
} else {
if((!G__28100.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__28100);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__28100);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__28102 = x;
if(G__28102){
var bit__17146__auto__ = (G__28102.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__17146__auto__) || (G__28102.cljs$core$ISorted$)){
return true;
} else {
if((!G__28102.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__28102);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__28102);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__28104 = x;
if(G__28104){
var bit__17146__auto__ = (G__28104.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__17146__auto__) || (G__28104.cljs$core$IReduce$)){
return true;
} else {
if((!G__28104.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__28104);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__28104);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__28106 = x;
if(G__28106){
var bit__17146__auto__ = (G__28106.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__17146__auto__) || (G__28106.cljs$core$IMap$)){
return true;
} else {
if((!G__28106.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__28106);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__28106);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__28108 = x;
if(G__28108){
var bit__17146__auto__ = (G__28108.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__17146__auto__) || (G__28108.cljs$core$IVector$)){
return true;
} else {
if((!G__28108.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__28108);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__28108);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__28110 = x;
if(G__28110){
var bit__17139__auto__ = (G__28110.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__17139__auto__) || (G__28110.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj28116 = {};
return obj28116;
});
var js_obj__1 = (function() { 
var G__28119__delegate = function (keyvals){
var G__28117 = goog.object.create;
var G__28118 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__28117,G__28118) : cljs.core.apply.call(null,G__28117,G__28118));
};
var G__28119 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__28120__i = 0, G__28120__a = new Array(arguments.length -  0);
while (G__28120__i < G__28120__a.length) {G__28120__a[G__28120__i] = arguments[G__28120__i + 0]; ++G__28120__i;}
  keyvals = new cljs.core.IndexedSeq(G__28120__a,0);
} 
return G__28119__delegate.call(this,keyvals);};
G__28119.cljs$lang$maxFixedArity = 0;
G__28119.cljs$lang$applyTo = (function (arglist__28121){
var keyvals = cljs.core.seq(arglist__28121);
return G__28119__delegate(keyvals);
});
G__28119.cljs$core$IFn$_invoke$arity$variadic = G__28119__delegate;
return G__28119;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__28122 = null;
if (arguments.length > 0) {
var G__28123__i = 0, G__28123__a = new Array(arguments.length -  0);
while (G__28123__i < G__28123__a.length) {G__28123__a[G__28123__i] = arguments[G__28123__i + 0]; ++G__28123__i;}
G__28122 = new cljs.core.IndexedSeq(G__28123__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__28122);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__28126_28128 = obj;
var G__28127_28129 = ((function (G__28126_28128,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__28126_28128,keys))
;
goog.object.forEach(G__28126_28128,G__28127_28129);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__28130 = (i__$1 + (1));
var G__28131 = (j__$1 + (1));
var G__28132 = (len__$1 - (1));
i__$1 = G__28130;
j__$1 = G__28131;
len__$1 = G__28132;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__28133 = (i__$1 - (1));
var G__28134 = (j__$1 - (1));
var G__28135 = (len__$1 - (1));
i__$1 = G__28133;
j__$1 = G__28134;
len__$1 = G__28135;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj28137 = {};
return obj28137;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__28139 = s;
if(G__28139){
var bit__17146__auto__ = (G__28139.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__17146__auto__) || (G__28139.cljs$core$ISeq$)){
return true;
} else {
if((!G__28139.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__28139);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__28139);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__28141 = s;
if(G__28141){
var bit__17146__auto__ = (G__28141.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__17146__auto__) || (G__28141.cljs$core$ISeqable$)){
return true;
} else {
if((!G__28141.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__28141);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__28141);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__16465__auto__ = cljs.core.fn_QMARK_(f);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var G__28145 = f;
if(G__28145){
var bit__17146__auto__ = (G__28145.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__17146__auto__) || (G__28145.cljs$core$IFn$)){
return true;
} else {
if((!G__28145.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__28145);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__28145);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__28158 = n;
return isNaN(G__28158);
})())) && (!((n === Infinity))) && (((function (){var G__28159 = n;
return parseFloat(G__28159);
})() === (function (){var G__28160 = n;
var G__28161 = (10);
return parseInt(G__28160,G__28161);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__28162__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__28163 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__28164 = etc;
s = G__28163;
xs = G__28164;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__28162 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__28165__i = 0, G__28165__a = new Array(arguments.length -  2);
while (G__28165__i < G__28165__a.length) {G__28165__a[G__28165__i] = arguments[G__28165__i + 2]; ++G__28165__i;}
  more = new cljs.core.IndexedSeq(G__28165__a,0);
} 
return G__28162__delegate.call(this,x,y,more);};
G__28162.cljs$lang$maxFixedArity = 2;
G__28162.cljs$lang$applyTo = (function (arglist__28166){
var x = cljs.core.first(arglist__28166);
arglist__28166 = cljs.core.next(arglist__28166);
var y = cljs.core.first(arglist__28166);
var more = cljs.core.rest(arglist__28166);
return G__28162__delegate(x,y,more);
});
G__28162.cljs$core$IFn$_invoke$arity$variadic = G__28162__delegate;
return G__28162;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__28167 = null;
if (arguments.length > 2) {
var G__28168__i = 0, G__28168__a = new Array(arguments.length -  2);
while (G__28168__i < G__28168__a.length) {G__28168__a[G__28168__i] = arguments[G__28168__i + 2]; ++G__28168__i;}
G__28167 = new cljs.core.IndexedSeq(G__28168__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__28167);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__28172 = x;
if(G__28172){
var bit__17139__auto__ = (G__28172.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__17139__auto__) || (G__28172.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__28173 = x;
var G__28174 = y;
return goog.array.defaultCompare(G__28173,G__28174);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__28179 = xs;
var G__28180 = ys;
var G__28181 = len;
var G__28182 = (n + (1));
xs = G__28179;
ys = G__28180;
len = G__28181;
n = G__28182;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__28187 = x;
var G__28188 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28187,G__28188) : f.call(null,G__28187,G__28188));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__28189 = y;
var G__28190 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28189,G__28190) : f.call(null,G__28189,G__28190));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__28196 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__28196) : cljs.core.to_array.call(null,G__28196));
})();
var G__28197_28199 = a;
var G__28198_28200 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__28197_28199,G__28198_28200);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__28206 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__28206) : keyfn.call(null,G__28206));
})(),(function (){var G__28207 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__28207) : keyfn.call(null,G__28207));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__28213 = f;
var G__28214 = cljs.core.first(s);
var G__28215 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__28213,G__28214,G__28215) : cljs.core.reduce.call(null,G__28213,G__28214,G__28215));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__28216 = val__$1;
var G__28217 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28216,G__28217) : f.call(null,G__28216,G__28217));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__28218 = nval;
var G__28219 = cljs.core.next(coll__$1);
val__$1 = G__28218;
coll__$1 = G__28219;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__28223 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__28223) : cljs.core.to_array.call(null,G__28223));
})();
var G__28224_28226 = a;
goog.array.shuffle(G__28224_28226);

var G__28225 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__28225) : cljs.core.vec.call(null,G__28225));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__28229 = coll;
if(G__28229){
var bit__17139__auto__ = (G__28229.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__17139__auto__) || (G__28229.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__28230 = coll;
if(G__28230){
var bit__17139__auto__ = (G__28230.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__17139__auto__) || (G__28230.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__28239 = null;
var G__28239__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__28239__1 = (function (x){
var G__28236 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__28236) : cf.call(null,G__28236));
});
var G__28239__2 = (function (x,y){
var G__28237 = x;
var G__28238 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28237,G__28238) : f.call(null,G__28237,G__28238));
});
G__28239 = function(x,y){
switch(arguments.length){
case 0:
return G__28239__0.call(this);
case 1:
return G__28239__1.call(this,x);
case 2:
return G__28239__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28239.cljs$core$IFn$_invoke$arity$0 = G__28239__0;
G__28239.cljs$core$IFn$_invoke$arity$1 = G__28239__1;
G__28239.cljs$core$IFn$_invoke$arity$2 = G__28239__2;
return G__28239;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__28246 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__28246) : xform.call(null,G__28246));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__28247 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__28247) : f__$1.call(null,G__28247));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__28248__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__28248 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__28249__i = 0, G__28249__a = new Array(arguments.length -  2);
while (G__28249__i < G__28249__a.length) {G__28249__a[G__28249__i] = arguments[G__28249__i + 2]; ++G__28249__i;}
  more = new cljs.core.IndexedSeq(G__28249__a,0);
} 
return G__28248__delegate.call(this,x,y,more);};
G__28248.cljs$lang$maxFixedArity = 2;
G__28248.cljs$lang$applyTo = (function (arglist__28250){
var x = cljs.core.first(arglist__28250);
arglist__28250 = cljs.core.next(arglist__28250);
var y = cljs.core.first(arglist__28250);
var more = cljs.core.rest(arglist__28250);
return G__28248__delegate(x,y,more);
});
G__28248.cljs$core$IFn$_invoke$arity$variadic = G__28248__delegate;
return G__28248;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__28251 = null;
if (arguments.length > 2) {
var G__28252__i = 0, G__28252__a = new Array(arguments.length -  2);
while (G__28252__i < G__28252__a.length) {G__28252__a[G__28252__i] = arguments[G__28252__i + 2]; ++G__28252__i;}
G__28251 = new cljs.core.IndexedSeq(G__28252__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__28251);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__28253__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__28253 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__28254__i = 0, G__28254__a = new Array(arguments.length -  2);
while (G__28254__i < G__28254__a.length) {G__28254__a[G__28254__i] = arguments[G__28254__i + 2]; ++G__28254__i;}
  more = new cljs.core.IndexedSeq(G__28254__a,0);
} 
return G__28253__delegate.call(this,x,y,more);};
G__28253.cljs$lang$maxFixedArity = 2;
G__28253.cljs$lang$applyTo = (function (arglist__28255){
var x = cljs.core.first(arglist__28255);
arglist__28255 = cljs.core.next(arglist__28255);
var y = cljs.core.first(arglist__28255);
var more = cljs.core.rest(arglist__28255);
return G__28253__delegate(x,y,more);
});
G__28253.cljs$core$IFn$_invoke$arity$variadic = G__28253__delegate;
return G__28253;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__28256 = null;
if (arguments.length > 2) {
var G__28257__i = 0, G__28257__a = new Array(arguments.length -  2);
while (G__28257__i < G__28257__a.length) {G__28257__a[G__28257__i] = arguments[G__28257__i + 2]; ++G__28257__i;}
G__28256 = new cljs.core.IndexedSeq(G__28257__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__28256);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__28258__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__28258 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__28259__i = 0, G__28259__a = new Array(arguments.length -  2);
while (G__28259__i < G__28259__a.length) {G__28259__a[G__28259__i] = arguments[G__28259__i + 2]; ++G__28259__i;}
  more = new cljs.core.IndexedSeq(G__28259__a,0);
} 
return G__28258__delegate.call(this,x,y,more);};
G__28258.cljs$lang$maxFixedArity = 2;
G__28258.cljs$lang$applyTo = (function (arglist__28260){
var x = cljs.core.first(arglist__28260);
arglist__28260 = cljs.core.next(arglist__28260);
var y = cljs.core.first(arglist__28260);
var more = cljs.core.rest(arglist__28260);
return G__28258__delegate(x,y,more);
});
G__28258.cljs$core$IFn$_invoke$arity$variadic = G__28258__delegate;
return G__28258;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__28261 = null;
if (arguments.length > 2) {
var G__28262__i = 0, G__28262__a = new Array(arguments.length -  2);
while (G__28262__i < G__28262__a.length) {G__28262__a[G__28262__i] = arguments[G__28262__i + 2]; ++G__28262__i;}
G__28261 = new cljs.core.IndexedSeq(G__28262__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__28261);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__28267__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__28267 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__28268__i = 0, G__28268__a = new Array(arguments.length -  2);
while (G__28268__i < G__28268__a.length) {G__28268__a[G__28268__i] = arguments[G__28268__i + 2]; ++G__28268__i;}
  more = new cljs.core.IndexedSeq(G__28268__a,0);
} 
return G__28267__delegate.call(this,x,y,more);};
G__28267.cljs$lang$maxFixedArity = 2;
G__28267.cljs$lang$applyTo = (function (arglist__28269){
var x = cljs.core.first(arglist__28269);
arglist__28269 = cljs.core.next(arglist__28269);
var y = cljs.core.first(arglist__28269);
var more = cljs.core.rest(arglist__28269);
return G__28267__delegate(x,y,more);
});
G__28267.cljs$core$IFn$_invoke$arity$variadic = G__28267__delegate;
return G__28267;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__28270 = null;
if (arguments.length > 2) {
var G__28271__i = 0, G__28271__a = new Array(arguments.length -  2);
while (G__28271__i < G__28271__a.length) {G__28271__a[G__28271__i] = arguments[G__28271__i + 2]; ++G__28271__i;}
G__28270 = new cljs.core.IndexedSeq(G__28271__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__28270);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__28272__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__28273 = y;
var G__28274 = cljs.core.first(more);
var G__28275 = cljs.core.next(more);
x = G__28273;
y = G__28274;
more = G__28275;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__28272 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__28276__i = 0, G__28276__a = new Array(arguments.length -  2);
while (G__28276__i < G__28276__a.length) {G__28276__a[G__28276__i] = arguments[G__28276__i + 2]; ++G__28276__i;}
  more = new cljs.core.IndexedSeq(G__28276__a,0);
} 
return G__28272__delegate.call(this,x,y,more);};
G__28272.cljs$lang$maxFixedArity = 2;
G__28272.cljs$lang$applyTo = (function (arglist__28277){
var x = cljs.core.first(arglist__28277);
arglist__28277 = cljs.core.next(arglist__28277);
var y = cljs.core.first(arglist__28277);
var more = cljs.core.rest(arglist__28277);
return G__28272__delegate(x,y,more);
});
G__28272.cljs$core$IFn$_invoke$arity$variadic = G__28272__delegate;
return G__28272;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__28278 = null;
if (arguments.length > 2) {
var G__28279__i = 0, G__28279__a = new Array(arguments.length -  2);
while (G__28279__i < G__28279__a.length) {G__28279__a[G__28279__i] = arguments[G__28279__i + 2]; ++G__28279__i;}
G__28278 = new cljs.core.IndexedSeq(G__28279__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__28278);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__28280__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__28281 = y;
var G__28282 = cljs.core.first(more);
var G__28283 = cljs.core.next(more);
x = G__28281;
y = G__28282;
more = G__28283;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__28280 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__28284__i = 0, G__28284__a = new Array(arguments.length -  2);
while (G__28284__i < G__28284__a.length) {G__28284__a[G__28284__i] = arguments[G__28284__i + 2]; ++G__28284__i;}
  more = new cljs.core.IndexedSeq(G__28284__a,0);
} 
return G__28280__delegate.call(this,x,y,more);};
G__28280.cljs$lang$maxFixedArity = 2;
G__28280.cljs$lang$applyTo = (function (arglist__28285){
var x = cljs.core.first(arglist__28285);
arglist__28285 = cljs.core.next(arglist__28285);
var y = cljs.core.first(arglist__28285);
var more = cljs.core.rest(arglist__28285);
return G__28280__delegate(x,y,more);
});
G__28280.cljs$core$IFn$_invoke$arity$variadic = G__28280__delegate;
return G__28280;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__28286 = null;
if (arguments.length > 2) {
var G__28287__i = 0, G__28287__a = new Array(arguments.length -  2);
while (G__28287__i < G__28287__a.length) {G__28287__a[G__28287__i] = arguments[G__28287__i + 2]; ++G__28287__i;}
G__28286 = new cljs.core.IndexedSeq(G__28287__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__28286);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__28288__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__28289 = y;
var G__28290 = cljs.core.first(more);
var G__28291 = cljs.core.next(more);
x = G__28289;
y = G__28290;
more = G__28291;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__28288 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__28292__i = 0, G__28292__a = new Array(arguments.length -  2);
while (G__28292__i < G__28292__a.length) {G__28292__a[G__28292__i] = arguments[G__28292__i + 2]; ++G__28292__i;}
  more = new cljs.core.IndexedSeq(G__28292__a,0);
} 
return G__28288__delegate.call(this,x,y,more);};
G__28288.cljs$lang$maxFixedArity = 2;
G__28288.cljs$lang$applyTo = (function (arglist__28293){
var x = cljs.core.first(arglist__28293);
arglist__28293 = cljs.core.next(arglist__28293);
var y = cljs.core.first(arglist__28293);
var more = cljs.core.rest(arglist__28293);
return G__28288__delegate(x,y,more);
});
G__28288.cljs$core$IFn$_invoke$arity$variadic = G__28288__delegate;
return G__28288;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__28294 = null;
if (arguments.length > 2) {
var G__28295__i = 0, G__28295__a = new Array(arguments.length -  2);
while (G__28295__i < G__28295__a.length) {G__28295__a[G__28295__i] = arguments[G__28295__i + 2]; ++G__28295__i;}
G__28294 = new cljs.core.IndexedSeq(G__28295__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__28294);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__28296__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__28297 = y;
var G__28298 = cljs.core.first(more);
var G__28299 = cljs.core.next(more);
x = G__28297;
y = G__28298;
more = G__28299;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__28296 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__28300__i = 0, G__28300__a = new Array(arguments.length -  2);
while (G__28300__i < G__28300__a.length) {G__28300__a[G__28300__i] = arguments[G__28300__i + 2]; ++G__28300__i;}
  more = new cljs.core.IndexedSeq(G__28300__a,0);
} 
return G__28296__delegate.call(this,x,y,more);};
G__28296.cljs$lang$maxFixedArity = 2;
G__28296.cljs$lang$applyTo = (function (arglist__28301){
var x = cljs.core.first(arglist__28301);
arglist__28301 = cljs.core.next(arglist__28301);
var y = cljs.core.first(arglist__28301);
var more = cljs.core.rest(arglist__28301);
return G__28296__delegate(x,y,more);
});
G__28296.cljs$core$IFn$_invoke$arity$variadic = G__28296__delegate;
return G__28296;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__28302 = null;
if (arguments.length > 2) {
var G__28303__i = 0, G__28303__a = new Array(arguments.length -  2);
while (G__28303__i < G__28303__a.length) {G__28303__a[G__28303__i] = arguments[G__28303__i + 2]; ++G__28303__i;}
G__28302 = new cljs.core.IndexedSeq(G__28303__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__28302);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__16782__auto__ = x;
var y__16783__auto__ = y;
return ((x__16782__auto__ > y__16783__auto__) ? x__16782__auto__ : y__16783__auto__);
});
var max__3 = (function() { 
var G__28304__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__16782__auto__ = x;
var y__16783__auto__ = y;
return ((x__16782__auto__ > y__16783__auto__) ? x__16782__auto__ : y__16783__auto__);
})(),more);
};
var G__28304 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__28305__i = 0, G__28305__a = new Array(arguments.length -  2);
while (G__28305__i < G__28305__a.length) {G__28305__a[G__28305__i] = arguments[G__28305__i + 2]; ++G__28305__i;}
  more = new cljs.core.IndexedSeq(G__28305__a,0);
} 
return G__28304__delegate.call(this,x,y,more);};
G__28304.cljs$lang$maxFixedArity = 2;
G__28304.cljs$lang$applyTo = (function (arglist__28306){
var x = cljs.core.first(arglist__28306);
arglist__28306 = cljs.core.next(arglist__28306);
var y = cljs.core.first(arglist__28306);
var more = cljs.core.rest(arglist__28306);
return G__28304__delegate(x,y,more);
});
G__28304.cljs$core$IFn$_invoke$arity$variadic = G__28304__delegate;
return G__28304;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__28307 = null;
if (arguments.length > 2) {
var G__28308__i = 0, G__28308__a = new Array(arguments.length -  2);
while (G__28308__i < G__28308__a.length) {G__28308__a[G__28308__i] = arguments[G__28308__i + 2]; ++G__28308__i;}
G__28307 = new cljs.core.IndexedSeq(G__28308__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__28307);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__16789__auto__ = x;
var y__16790__auto__ = y;
return ((x__16789__auto__ < y__16790__auto__) ? x__16789__auto__ : y__16790__auto__);
});
var min__3 = (function() { 
var G__28309__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__16789__auto__ = x;
var y__16790__auto__ = y;
return ((x__16789__auto__ < y__16790__auto__) ? x__16789__auto__ : y__16790__auto__);
})(),more);
};
var G__28309 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__28310__i = 0, G__28310__a = new Array(arguments.length -  2);
while (G__28310__i < G__28310__a.length) {G__28310__a[G__28310__i] = arguments[G__28310__i + 2]; ++G__28310__i;}
  more = new cljs.core.IndexedSeq(G__28310__a,0);
} 
return G__28309__delegate.call(this,x,y,more);};
G__28309.cljs$lang$maxFixedArity = 2;
G__28309.cljs$lang$applyTo = (function (arglist__28311){
var x = cljs.core.first(arglist__28311);
arglist__28311 = cljs.core.next(arglist__28311);
var y = cljs.core.first(arglist__28311);
var more = cljs.core.rest(arglist__28311);
return G__28309__delegate(x,y,more);
});
G__28309.cljs$core$IFn$_invoke$arity$variadic = G__28309__delegate;
return G__28309;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__28312 = null;
if (arguments.length > 2) {
var G__28313__i = 0, G__28313__a = new Array(arguments.length -  2);
while (G__28313__i < G__28313__a.length) {G__28313__a[G__28313__i] = arguments[G__28313__i + 2]; ++G__28313__i;}
G__28312 = new cljs.core.IndexedSeq(G__28313__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__28312);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__28314__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__28314 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__28315__i = 0, G__28315__a = new Array(arguments.length -  2);
while (G__28315__i < G__28315__a.length) {G__28315__a[G__28315__i] = arguments[G__28315__i + 2]; ++G__28315__i;}
  more = new cljs.core.IndexedSeq(G__28315__a,0);
} 
return G__28314__delegate.call(this,x,y,more);};
G__28314.cljs$lang$maxFixedArity = 2;
G__28314.cljs$lang$applyTo = (function (arglist__28316){
var x = cljs.core.first(arglist__28316);
arglist__28316 = cljs.core.next(arglist__28316);
var y = cljs.core.first(arglist__28316);
var more = cljs.core.rest(arglist__28316);
return G__28314__delegate(x,y,more);
});
G__28314.cljs$core$IFn$_invoke$arity$variadic = G__28314__delegate;
return G__28314;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__28317 = null;
if (arguments.length > 2) {
var G__28318__i = 0, G__28318__a = new Array(arguments.length -  2);
while (G__28318__i < G__28318__a.length) {G__28318__a[G__28318__i] = arguments[G__28318__i + 2]; ++G__28318__i;}
G__28317 = new cljs.core.IndexedSeq(G__28318__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__28317);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__28319__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__28319 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__28320__i = 0, G__28320__a = new Array(arguments.length -  2);
while (G__28320__i < G__28320__a.length) {G__28320__a[G__28320__i] = arguments[G__28320__i + 2]; ++G__28320__i;}
  more = new cljs.core.IndexedSeq(G__28320__a,0);
} 
return G__28319__delegate.call(this,x,y,more);};
G__28319.cljs$lang$maxFixedArity = 2;
G__28319.cljs$lang$applyTo = (function (arglist__28321){
var x = cljs.core.first(arglist__28321);
arglist__28321 = cljs.core.next(arglist__28321);
var y = cljs.core.first(arglist__28321);
var more = cljs.core.rest(arglist__28321);
return G__28319__delegate(x,y,more);
});
G__28319.cljs$core$IFn$_invoke$arity$variadic = G__28319__delegate;
return G__28319;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__28322 = null;
if (arguments.length > 2) {
var G__28323__i = 0, G__28323__a = new Array(arguments.length -  2);
while (G__28323__i < G__28323__a.length) {G__28323__a[G__28323__i] = arguments[G__28323__i + 2]; ++G__28323__i;}
G__28322 = new cljs.core.IndexedSeq(G__28323__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__28322);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__28328__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__28328 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__28329__i = 0, G__28329__a = new Array(arguments.length -  2);
while (G__28329__i < G__28329__a.length) {G__28329__a[G__28329__i] = arguments[G__28329__i + 2]; ++G__28329__i;}
  more = new cljs.core.IndexedSeq(G__28329__a,0);
} 
return G__28328__delegate.call(this,x,y,more);};
G__28328.cljs$lang$maxFixedArity = 2;
G__28328.cljs$lang$applyTo = (function (arglist__28330){
var x = cljs.core.first(arglist__28330);
arglist__28330 = cljs.core.next(arglist__28330);
var y = cljs.core.first(arglist__28330);
var more = cljs.core.rest(arglist__28330);
return G__28328__delegate(x,y,more);
});
G__28328.cljs$core$IFn$_invoke$arity$variadic = G__28328__delegate;
return G__28328;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__28331 = null;
if (arguments.length > 2) {
var G__28332__i = 0, G__28332__a = new Array(arguments.length -  2);
while (G__28332__i < G__28332__a.length) {G__28332__a[G__28332__i] = arguments[G__28332__i + 2]; ++G__28332__i;}
G__28331 = new cljs.core.IndexedSeq(G__28332__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__28331);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__28333__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__28333 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__28334__i = 0, G__28334__a = new Array(arguments.length -  2);
while (G__28334__i < G__28334__a.length) {G__28334__a[G__28334__i] = arguments[G__28334__i + 2]; ++G__28334__i;}
  more = new cljs.core.IndexedSeq(G__28334__a,0);
} 
return G__28333__delegate.call(this,x,y,more);};
G__28333.cljs$lang$maxFixedArity = 2;
G__28333.cljs$lang$applyTo = (function (arglist__28335){
var x = cljs.core.first(arglist__28335);
arglist__28335 = cljs.core.next(arglist__28335);
var y = cljs.core.first(arglist__28335);
var more = cljs.core.rest(arglist__28335);
return G__28333__delegate(x,y,more);
});
G__28333.cljs$core$IFn$_invoke$arity$variadic = G__28333__delegate;
return G__28333;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__28336 = null;
if (arguments.length > 2) {
var G__28337__i = 0, G__28337__a = new Array(arguments.length -  2);
while (G__28337__i < G__28337__a.length) {G__28337__a[G__28337__i] = arguments[G__28337__i + 2]; ++G__28337__i;}
G__28336 = new cljs.core.IndexedSeq(G__28337__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__28336);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__28338__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__28338 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__28339__i = 0, G__28339__a = new Array(arguments.length -  2);
while (G__28339__i < G__28339__a.length) {G__28339__a[G__28339__i] = arguments[G__28339__i + 2]; ++G__28339__i;}
  more = new cljs.core.IndexedSeq(G__28339__a,0);
} 
return G__28338__delegate.call(this,x,y,more);};
G__28338.cljs$lang$maxFixedArity = 2;
G__28338.cljs$lang$applyTo = (function (arglist__28340){
var x = cljs.core.first(arglist__28340);
arglist__28340 = cljs.core.next(arglist__28340);
var y = cljs.core.first(arglist__28340);
var more = cljs.core.rest(arglist__28340);
return G__28338__delegate(x,y,more);
});
G__28338.cljs$core$IFn$_invoke$arity$variadic = G__28338__delegate;
return G__28338;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__28341 = null;
if (arguments.length > 2) {
var G__28342__i = 0, G__28342__a = new Array(arguments.length -  2);
while (G__28342__i < G__28342__a.length) {G__28342__a[G__28342__i] = arguments[G__28342__i + 2]; ++G__28342__i;}
G__28341 = new cljs.core.IndexedSeq(G__28342__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__28341);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__28345 = x;
var G__28346 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__28345,G__28346) : cljs.core.mod.call(null,G__28345,G__28346));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__28347__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__28347 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__28348__i = 0, G__28348__a = new Array(arguments.length -  2);
while (G__28348__i < G__28348__a.length) {G__28348__a[G__28348__i] = arguments[G__28348__i + 2]; ++G__28348__i;}
  more = new cljs.core.IndexedSeq(G__28348__a,0);
} 
return G__28347__delegate.call(this,x,y,more);};
G__28347.cljs$lang$maxFixedArity = 2;
G__28347.cljs$lang$applyTo = (function (arglist__28349){
var x = cljs.core.first(arglist__28349);
arglist__28349 = cljs.core.next(arglist__28349);
var y = cljs.core.first(arglist__28349);
var more = cljs.core.rest(arglist__28349);
return G__28347__delegate(x,y,more);
});
G__28347.cljs$core$IFn$_invoke$arity$variadic = G__28347__delegate;
return G__28347;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__28350 = null;
if (arguments.length > 2) {
var G__28351__i = 0, G__28351__a = new Array(arguments.length -  2);
while (G__28351__i < G__28351__a.length) {G__28351__a[G__28351__i] = arguments[G__28351__i + 2]; ++G__28351__i;}
G__28350 = new cljs.core.IndexedSeq(G__28351__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__28350);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__28352__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__28352 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__28353__i = 0, G__28353__a = new Array(arguments.length -  2);
while (G__28353__i < G__28353__a.length) {G__28353__a[G__28353__i] = arguments[G__28353__i + 2]; ++G__28353__i;}
  more = new cljs.core.IndexedSeq(G__28353__a,0);
} 
return G__28352__delegate.call(this,x,y,more);};
G__28352.cljs$lang$maxFixedArity = 2;
G__28352.cljs$lang$applyTo = (function (arglist__28354){
var x = cljs.core.first(arglist__28354);
arglist__28354 = cljs.core.next(arglist__28354);
var y = cljs.core.first(arglist__28354);
var more = cljs.core.rest(arglist__28354);
return G__28352__delegate(x,y,more);
});
G__28352.cljs$core$IFn$_invoke$arity$variadic = G__28352__delegate;
return G__28352;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__28355 = null;
if (arguments.length > 2) {
var G__28356__i = 0, G__28356__a = new Array(arguments.length -  2);
while (G__28356__i < G__28356__a.length) {G__28356__a[G__28356__i] = arguments[G__28356__i + 2]; ++G__28356__i;}
G__28355 = new cljs.core.IndexedSeq(G__28356__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__28355);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__28359 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__28359) : Math.floor.call(null,G__28359));
} else {
var G__28360 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__28360) : Math.ceil.call(null,G__28360));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__28361__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__28361 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__28362__i = 0, G__28362__a = new Array(arguments.length -  2);
while (G__28362__i < G__28362__a.length) {G__28362__a[G__28362__i] = arguments[G__28362__i + 2]; ++G__28362__i;}
  more = new cljs.core.IndexedSeq(G__28362__a,0);
} 
return G__28361__delegate.call(this,x,y,more);};
G__28361.cljs$lang$maxFixedArity = 2;
G__28361.cljs$lang$applyTo = (function (arglist__28363){
var x = cljs.core.first(arglist__28363);
arglist__28363 = cljs.core.next(arglist__28363);
var y = cljs.core.first(arglist__28363);
var more = cljs.core.rest(arglist__28363);
return G__28361__delegate(x,y,more);
});
G__28361.cljs$core$IFn$_invoke$arity$variadic = G__28361__delegate;
return G__28361;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__28364 = null;
if (arguments.length > 2) {
var G__28365__i = 0, G__28365__a = new Array(arguments.length -  2);
while (G__28365__i < G__28365__a.length) {G__28365__a[G__28365__i] = arguments[G__28365__i + 2]; ++G__28365__i;}
G__28364 = new cljs.core.IndexedSeq(G__28365__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__28364);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__28366__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__28366 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__28367__i = 0, G__28367__a = new Array(arguments.length -  2);
while (G__28367__i < G__28367__a.length) {G__28367__a[G__28367__i] = arguments[G__28367__i + 2]; ++G__28367__i;}
  more = new cljs.core.IndexedSeq(G__28367__a,0);
} 
return G__28366__delegate.call(this,x,y,more);};
G__28366.cljs$lang$maxFixedArity = 2;
G__28366.cljs$lang$applyTo = (function (arglist__28368){
var x = cljs.core.first(arglist__28368);
arglist__28368 = cljs.core.next(arglist__28368);
var y = cljs.core.first(arglist__28368);
var more = cljs.core.rest(arglist__28368);
return G__28366__delegate(x,y,more);
});
G__28366.cljs$core$IFn$_invoke$arity$variadic = G__28366__delegate;
return G__28366;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__28369 = null;
if (arguments.length > 2) {
var G__28370__i = 0, G__28370__a = new Array(arguments.length -  2);
while (G__28370__i < G__28370__a.length) {G__28370__a[G__28370__i] = arguments[G__28370__i + 2]; ++G__28370__i;}
G__28369 = new cljs.core.IndexedSeq(G__28370__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__28369);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__28371__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__28371 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__28372__i = 0, G__28372__a = new Array(arguments.length -  2);
while (G__28372__i < G__28372__a.length) {G__28372__a[G__28372__i] = arguments[G__28372__i + 2]; ++G__28372__i;}
  more = new cljs.core.IndexedSeq(G__28372__a,0);
} 
return G__28371__delegate.call(this,x,y,more);};
G__28371.cljs$lang$maxFixedArity = 2;
G__28371.cljs$lang$applyTo = (function (arglist__28373){
var x = cljs.core.first(arglist__28373);
arglist__28373 = cljs.core.next(arglist__28373);
var y = cljs.core.first(arglist__28373);
var more = cljs.core.rest(arglist__28373);
return G__28371__delegate(x,y,more);
});
G__28371.cljs$core$IFn$_invoke$arity$variadic = G__28371__delegate;
return G__28371;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__28374 = null;
if (arguments.length > 2) {
var G__28375__i = 0, G__28375__a = new Array(arguments.length -  2);
while (G__28375__i < G__28375__a.length) {G__28375__a[G__28375__i] = arguments[G__28375__i + 2]; ++G__28375__i;}
G__28374 = new cljs.core.IndexedSeq(G__28375__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__28374);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__28376__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__28376 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__28377__i = 0, G__28377__a = new Array(arguments.length -  2);
while (G__28377__i < G__28377__a.length) {G__28377__a[G__28377__i] = arguments[G__28377__i + 2]; ++G__28377__i;}
  more = new cljs.core.IndexedSeq(G__28377__a,0);
} 
return G__28376__delegate.call(this,x,y,more);};
G__28376.cljs$lang$maxFixedArity = 2;
G__28376.cljs$lang$applyTo = (function (arglist__28378){
var x = cljs.core.first(arglist__28378);
arglist__28378 = cljs.core.next(arglist__28378);
var y = cljs.core.first(arglist__28378);
var more = cljs.core.rest(arglist__28378);
return G__28376__delegate(x,y,more);
});
G__28376.cljs$core$IFn$_invoke$arity$variadic = G__28376__delegate;
return G__28376;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__28379 = null;
if (arguments.length > 2) {
var G__28380__i = 0, G__28380__a = new Array(arguments.length -  2);
while (G__28380__i < G__28380__a.length) {G__28380__a[G__28380__i] = arguments[G__28380__i + 2]; ++G__28380__i;}
G__28379 = new cljs.core.IndexedSeq(G__28380__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__28379);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__28385__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__28386 = y;
var G__28387 = cljs.core.first(more);
var G__28388 = cljs.core.next(more);
x = G__28386;
y = G__28387;
more = G__28388;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__28385 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__28389__i = 0, G__28389__a = new Array(arguments.length -  2);
while (G__28389__i < G__28389__a.length) {G__28389__a[G__28389__i] = arguments[G__28389__i + 2]; ++G__28389__i;}
  more = new cljs.core.IndexedSeq(G__28389__a,0);
} 
return G__28385__delegate.call(this,x,y,more);};
G__28385.cljs$lang$maxFixedArity = 2;
G__28385.cljs$lang$applyTo = (function (arglist__28390){
var x = cljs.core.first(arglist__28390);
arglist__28390 = cljs.core.next(arglist__28390);
var y = cljs.core.first(arglist__28390);
var more = cljs.core.rest(arglist__28390);
return G__28385__delegate(x,y,more);
});
G__28385.cljs$core$IFn$_invoke$arity$variadic = G__28385__delegate;
return G__28385;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__28391 = null;
if (arguments.length > 2) {
var G__28392__i = 0, G__28392__a = new Array(arguments.length -  2);
while (G__28392__i < G__28392__a.length) {G__28392__a[G__28392__i] = arguments[G__28392__i + 2]; ++G__28392__i;}
G__28391 = new cljs.core.IndexedSeq(G__28392__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__28391);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__28393 = (n__$1 - (1));
var G__28394 = cljs.core.next(xs);
n__$1 = G__28393;
xs = G__28394;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__28398 = x;
return goog.string.buildString(G__28398);
}
});
var str__2 = (function() { 
var G__28399__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__28400 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__28401 = cljs.core.next(more);
sb = G__28400;
more = G__28401;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__28399 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__28402__i = 0, G__28402__a = new Array(arguments.length -  1);
while (G__28402__i < G__28402__a.length) {G__28402__a[G__28402__i] = arguments[G__28402__i + 1]; ++G__28402__i;}
  ys = new cljs.core.IndexedSeq(G__28402__a,0);
} 
return G__28399__delegate.call(this,x,ys);};
G__28399.cljs$lang$maxFixedArity = 1;
G__28399.cljs$lang$applyTo = (function (arglist__28403){
var x = cljs.core.first(arglist__28403);
var ys = cljs.core.rest(arglist__28403);
return G__28399__delegate(x,ys);
});
G__28399.cljs$core$IFn$_invoke$arity$variadic = G__28399__delegate;
return G__28399;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__28404 = null;
if (arguments.length > 1) {
var G__28405__i = 0, G__28405__a = new Array(arguments.length -  1);
while (G__28405__i < G__28405__a.length) {G__28405__a[G__28405__i] = arguments[G__28405__i + 1]; ++G__28405__i;}
G__28404 = new cljs.core.IndexedSeq(G__28405__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__28404);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__28406 = cljs.core.next(xs);
var G__28407 = cljs.core.next(ys);
xs = G__28406;
ys = G__28407;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__28408 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__28409 = cljs.core.next(s);
res = G__28408;
s = G__28409;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__28414 = ((h + (cljs.core.hash((function (){var G__28412 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__28412) : cljs.core.key.call(null,G__28412));
})()) ^ cljs.core.hash((function (){var G__28413 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__28413) : cljs.core.val.call(null,G__28413));
})()))) % (4503599627370496));
var G__28415 = cljs.core.next(s);
h = G__28414;
s = G__28415;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__28416 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__28417 = cljs.core.next(s__$1);
h = G__28416;
s__$1 = G__28417;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__28428_28438 = cljs.core.seq(fn_map);
var chunk__28429_28439 = null;
var count__28430_28440 = (0);
var i__28431_28441 = (0);
while(true){
if((i__28431_28441 < count__28430_28440)){
var vec__28432_28442 = chunk__28429_28439.cljs$core$IIndexed$_nth$arity$2(null,i__28431_28441);
var key_name_28443 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28432_28442,(0),null);
var f_28444 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28432_28442,(1),null);
var str_name_28445 = (function (){var G__28433 = key_name_28443;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__28433) : cljs.core.name.call(null,G__28433));
})();
(obj[str_name_28445] = f_28444);

var G__28446 = seq__28428_28438;
var G__28447 = chunk__28429_28439;
var G__28448 = count__28430_28440;
var G__28449 = (i__28431_28441 + (1));
seq__28428_28438 = G__28446;
chunk__28429_28439 = G__28447;
count__28430_28440 = G__28448;
i__28431_28441 = G__28449;
continue;
} else {
var temp__4126__auto___28450 = cljs.core.seq(seq__28428_28438);
if(temp__4126__auto___28450){
var seq__28428_28451__$1 = temp__4126__auto___28450;
if(cljs.core.chunked_seq_QMARK_(seq__28428_28451__$1)){
var c__17252__auto___28452 = (function (){var G__28434 = seq__28428_28451__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__28434) : cljs.core.chunk_first.call(null,G__28434));
})();
var G__28453 = (function (){var G__28435 = seq__28428_28451__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__28435) : cljs.core.chunk_rest.call(null,G__28435));
})();
var G__28454 = c__17252__auto___28452;
var G__28455 = cljs.core.count(c__17252__auto___28452);
var G__28456 = (0);
seq__28428_28438 = G__28453;
chunk__28429_28439 = G__28454;
count__28430_28440 = G__28455;
i__28431_28441 = G__28456;
continue;
} else {
var vec__28436_28457 = cljs.core.first(seq__28428_28451__$1);
var key_name_28458 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28436_28457,(0),null);
var f_28459 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28436_28457,(1),null);
var str_name_28460 = (function (){var G__28437 = key_name_28458;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__28437) : cljs.core.name.call(null,G__28437));
})();
(obj[str_name_28460] = f_28459);

var G__28461 = cljs.core.next(seq__28428_28451__$1);
var G__28462 = null;
var G__28463 = (0);
var G__28464 = (0);
seq__28428_28438 = G__28461;
chunk__28429_28439 = G__28462;
count__28430_28440 = G__28463;
i__28431_28441 = G__28464;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16886__auto__ = self__.__hash;
if(!((h__16886__auto__ == null))){
return h__16886__auto__;
} else {
var h__16886__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16886__auto____$1;

return h__16886__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__17052__auto__,writer__17053__auto__,opt__17054__auto__){
return cljs.core._write(writer__17053__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17443__auto__ = this;
return cljs.core.es6_iterator(this__17443__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__17052__auto__,writer__17053__auto__,opt__17054__auto__){
return cljs.core._write(writer__17053__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17443__auto__ = this;
return cljs.core.es6_iterator(this__17443__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__28466 = coll;
if(G__28466){
var bit__17146__auto__ = (G__28466.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__17146__auto__) || (G__28466.cljs$core$IReversible$)){
return true;
} else {
if((!G__28466.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__28466);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__28466);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__28467 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__28467;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__28468 = (i - (1));
var G__28469 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__28468;
r = G__28469;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__28470__i = 0, G__28470__a = new Array(arguments.length -  0);
while (G__28470__i < G__28470__a.length) {G__28470__a[G__28470__i] = arguments[G__28470__i + 0]; ++G__28470__i;}
  xs = new cljs.core.IndexedSeq(G__28470__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__28471){
var xs = cljs.core.seq(arglist__28471);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16886__auto__ = self__.__hash;
if(!((h__16886__auto__ == null))){
return h__16886__auto__;
} else {
var h__16886__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16886__auto____$1;

return h__16886__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__17052__auto__,writer__17053__auto__,opt__17054__auto__){
return cljs.core._write(writer__17053__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17443__auto__ = this;
return cljs.core.es6_iterator(this__17443__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__16465__auto__ = (coll == null);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var G__28475 = coll;
if(G__28475){
var bit__17139__auto__ = (G__28475.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__17139__auto__) || (G__28475.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__28477 = x;
if(G__28477){
var bit__17146__auto__ = (G__28477.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__17146__auto__) || (G__28477.cljs$core$IList$)){
return true;
} else {
if((!G__28477.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__28477);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__28477);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__16453__auto__ = cljs.core.not(a.ns);
if(and__16453__auto__){
return b.ns;
} else {
return and__16453__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__28484 = a.ns;
var G__28485 = b.ns;
return goog.array.defaultCompare(G__28484,G__28485);
})();
if(((0) === nsc)){
var G__28486 = a.name;
var G__28487 = b.name;
return goog.array.defaultCompare(G__28486,G__28487);
} else {
return nsc;
}
}
} else {
var G__28488 = a.name;
var G__28489 = b.name;
return goog.array.defaultCompare(G__28488,G__28489);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__16886__auto__ = self__._hash;
if(!((h__16886__auto__ == null))){
return h__16886__auto__;
} else {
var h__16886__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__16886__auto____$1;

return h__16886__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__28491 = null;
var G__28491__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__28491__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__28491 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__28491__2.call(this,self__,coll);
case 3:
return G__28491__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28491.cljs$core$IFn$_invoke$arity$2 = G__28491__2;
G__28491.cljs$core$IFn$_invoke$arity$3 = G__28491__3;
return G__28491;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args28490){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args28490)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__17052__auto__,writer__17053__auto__,opt__17054__auto__){
return cljs.core._write(writer__17053__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__28493 = x;
if(G__28493){
var bit__17139__auto__ = (G__28493.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__17139__auto__) || (G__28493.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__28495 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__28495) : cljs.core.name.call(null,G__28495));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16886__auto__ = self__.__hash;
if(!((h__16886__auto__ == null))){
return h__16886__auto__;
} else {
var h__16886__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16886__auto____$1;

return h__16886__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__28496 = ls.sval();
ls = G__28496;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__17052__auto__,writer__17053__auto__,opt__17054__auto__){
return cljs.core._write(writer__17053__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17443__auto__ = this;
return cljs.core.es6_iterator(this__17443__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__17052__auto__,writer__17053__auto__,opt__17054__auto__){
return cljs.core._write(writer__17053__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__17052__auto__,writer__17053__auto__,opt__17054__auto__){
return cljs.core._write(writer__17053__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16886__auto__ = self__.__hash;
if(!((h__16886__auto__ == null))){
return h__16886__auto__;
} else {
var h__16886__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16886__auto____$1;

return h__16886__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__17052__auto__,writer__17053__auto__,opt__17054__auto__){
return cljs.core._write(writer__17053__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17443__auto__ = this;
return cljs.core.es6_iterator(this__17443__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__28498 = s;
if(G__28498){
var bit__17139__auto__ = (G__28498.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__17139__auto__) || (G__28498.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__28499 = cljs.core.next(s__$1);
s__$1 = G__28499;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_28500 = (0);
var xs_28501 = cljs.core.seq(coll);
while(true){
if(xs_28501){
(ret[i_28500] = cljs.core.to_array(cljs.core.first(xs_28501)));

var G__28502 = (i_28500 + (1));
var G__28503 = cljs.core.next(xs_28501);
i_28500 = G__28502;
xs_28501 = G__28503;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__28506 = (i + (1));
var G__28507 = cljs.core.next(s__$1);
i = G__28506;
s__$1 = G__28507;
continue;
} else {
return a;
}
break;
}
} else {
var n__17352__auto___28508 = size;
var i_28509 = (0);
while(true){
if((i_28509 < n__17352__auto___28508)){
(a[i_28509] = init_val_or_seq);

var G__28510 = (i_28509 + (1));
i_28509 = G__28510;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__28513 = (i + (1));
var G__28514 = cljs.core.next(s__$1);
i = G__28513;
s__$1 = G__28514;
continue;
} else {
return a;
}
break;
}
} else {
var n__17352__auto___28515 = size;
var i_28516 = (0);
while(true){
if((i_28516 < n__17352__auto___28515)){
(a[i_28516] = init_val_or_seq);

var G__28517 = (i_28516 + (1));
i_28516 = G__28517;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__28520 = (i + (1));
var G__28521 = cljs.core.next(s__$1);
i = G__28520;
s__$1 = G__28521;
continue;
} else {
return a;
}
break;
}
} else {
var n__17352__auto___28522 = size;
var i_28523 = (0);
while(true){
if((i_28523 < n__17352__auto___28522)){
(a[i_28523] = init_val_or_seq);

var G__28524 = (i_28523 + (1));
i_28523 = G__28524;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__28527 = (i + (1));
var G__28528 = cljs.core.next(s__$1);
i = G__28527;
s__$1 = G__28528;
continue;
} else {
return a;
}
break;
}
} else {
var n__17352__auto___28529 = size;
var i_28530 = (0);
while(true){
if((i_28530 < n__17352__auto___28529)){
(a[i_28530] = init_val_or_seq);

var G__28531 = (i_28530 + (1));
i_28530 = G__28531;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__28532 = cljs.core.next(s__$1);
var G__28533 = (i - (1));
var G__28534 = (sum + (1));
s__$1 = G__28532;
i = G__28533;
sum = G__28534;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__28554__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__28554 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__28555__i = 0, G__28555__a = new Array(arguments.length -  2);
while (G__28555__i < G__28555__a.length) {G__28555__a[G__28555__i] = arguments[G__28555__i + 2]; ++G__28555__i;}
  zs = new cljs.core.IndexedSeq(G__28555__a,0);
} 
return G__28554__delegate.call(this,x,y,zs);};
G__28554.cljs$lang$maxFixedArity = 2;
G__28554.cljs$lang$applyTo = (function (arglist__28556){
var x = cljs.core.first(arglist__28556);
arglist__28556 = cljs.core.next(arglist__28556);
var y = cljs.core.first(arglist__28556);
var zs = cljs.core.rest(arglist__28556);
return G__28554__delegate(x,y,zs);
});
G__28554.cljs$core$IFn$_invoke$arity$variadic = G__28554__delegate;
return G__28554;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__28557 = null;
if (arguments.length > 2) {
var G__28558__i = 0, G__28558__a = new Array(arguments.length -  2);
while (G__28558__i < G__28558__a.length) {G__28558__a[G__28558__i] = arguments[G__28558__i + 2]; ++G__28558__i;}
G__28557 = new cljs.core.IndexedSeq(G__28558__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__28557);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__28559__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__28559 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__28560__i = 0, G__28560__a = new Array(arguments.length -  4);
while (G__28560__i < G__28560__a.length) {G__28560__a[G__28560__i] = arguments[G__28560__i + 4]; ++G__28560__i;}
  more = new cljs.core.IndexedSeq(G__28560__a,0);
} 
return G__28559__delegate.call(this,a,b,c,d,more);};
G__28559.cljs$lang$maxFixedArity = 4;
G__28559.cljs$lang$applyTo = (function (arglist__28561){
var a = cljs.core.first(arglist__28561);
arglist__28561 = cljs.core.next(arglist__28561);
var b = cljs.core.first(arglist__28561);
arglist__28561 = cljs.core.next(arglist__28561);
var c = cljs.core.first(arglist__28561);
arglist__28561 = cljs.core.next(arglist__28561);
var d = cljs.core.first(arglist__28561);
var more = cljs.core.rest(arglist__28561);
return G__28559__delegate(a,b,c,d,more);
});
G__28559.cljs$core$IFn$_invoke$arity$variadic = G__28559__delegate;
return G__28559;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__28562 = null;
if (arguments.length > 4) {
var G__28563__i = 0, G__28563__a = new Array(arguments.length -  4);
while (G__28563__i < G__28563__a.length) {G__28563__a[G__28563__i] = arguments[G__28563__i + 4]; ++G__28563__i;}
G__28562 = new cljs.core.IndexedSeq(G__28563__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__28562);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__28564__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__28565 = ntcoll;
var G__28566 = cljs.core.first(vals);
var G__28567 = cljs.core.next(vals);
tcoll = G__28565;
val = G__28566;
vals = G__28567;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__28564 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__28568__i = 0, G__28568__a = new Array(arguments.length -  2);
while (G__28568__i < G__28568__a.length) {G__28568__a[G__28568__i] = arguments[G__28568__i + 2]; ++G__28568__i;}
  vals = new cljs.core.IndexedSeq(G__28568__a,0);
} 
return G__28564__delegate.call(this,tcoll,val,vals);};
G__28564.cljs$lang$maxFixedArity = 2;
G__28564.cljs$lang$applyTo = (function (arglist__28569){
var tcoll = cljs.core.first(arglist__28569);
arglist__28569 = cljs.core.next(arglist__28569);
var val = cljs.core.first(arglist__28569);
var vals = cljs.core.rest(arglist__28569);
return G__28564__delegate(tcoll,val,vals);
});
G__28564.cljs$core$IFn$_invoke$arity$variadic = G__28564__delegate;
return G__28564;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__28570 = null;
if (arguments.length > 2) {
var G__28571__i = 0, G__28571__a = new Array(arguments.length -  2);
while (G__28571__i < G__28571__a.length) {G__28571__a[G__28571__i] = arguments[G__28571__i + 2]; ++G__28571__i;}
G__28570 = new cljs.core.IndexedSeq(G__28571__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__28570);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__28572__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__28573 = ntcoll;
var G__28574 = cljs.core.first(kvs);
var G__28575 = cljs.core.second(kvs);
var G__28576 = cljs.core.nnext(kvs);
tcoll = G__28573;
key = G__28574;
val = G__28575;
kvs = G__28576;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__28572 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__28577__i = 0, G__28577__a = new Array(arguments.length -  3);
while (G__28577__i < G__28577__a.length) {G__28577__a[G__28577__i] = arguments[G__28577__i + 3]; ++G__28577__i;}
  kvs = new cljs.core.IndexedSeq(G__28577__a,0);
} 
return G__28572__delegate.call(this,tcoll,key,val,kvs);};
G__28572.cljs$lang$maxFixedArity = 3;
G__28572.cljs$lang$applyTo = (function (arglist__28578){
var tcoll = cljs.core.first(arglist__28578);
arglist__28578 = cljs.core.next(arglist__28578);
var key = cljs.core.first(arglist__28578);
arglist__28578 = cljs.core.next(arglist__28578);
var val = cljs.core.first(arglist__28578);
var kvs = cljs.core.rest(arglist__28578);
return G__28572__delegate(tcoll,key,val,kvs);
});
G__28572.cljs$core$IFn$_invoke$arity$variadic = G__28572__delegate;
return G__28572;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__28579 = null;
if (arguments.length > 3) {
var G__28580__i = 0, G__28580__a = new Array(arguments.length -  3);
while (G__28580__i < G__28580__a.length) {G__28580__a[G__28580__i] = arguments[G__28580__i + 3]; ++G__28580__i;}
G__28579 = new cljs.core.IndexedSeq(G__28580__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__28579);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__28581__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__28582 = ntcoll;
var G__28583 = cljs.core.first(ks);
var G__28584 = cljs.core.next(ks);
tcoll = G__28582;
key = G__28583;
ks = G__28584;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__28581 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__28585__i = 0, G__28585__a = new Array(arguments.length -  2);
while (G__28585__i < G__28585__a.length) {G__28585__a[G__28585__i] = arguments[G__28585__i + 2]; ++G__28585__i;}
  ks = new cljs.core.IndexedSeq(G__28585__a,0);
} 
return G__28581__delegate.call(this,tcoll,key,ks);};
G__28581.cljs$lang$maxFixedArity = 2;
G__28581.cljs$lang$applyTo = (function (arglist__28586){
var tcoll = cljs.core.first(arglist__28586);
arglist__28586 = cljs.core.next(arglist__28586);
var key = cljs.core.first(arglist__28586);
var ks = cljs.core.rest(arglist__28586);
return G__28581__delegate(tcoll,key,ks);
});
G__28581.cljs$core$IFn$_invoke$arity$variadic = G__28581__delegate;
return G__28581;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__28587 = null;
if (arguments.length > 2) {
var G__28588__i = 0, G__28588__a = new Array(arguments.length -  2);
while (G__28588__i < G__28588__a.length) {G__28588__a[G__28588__i] = arguments[G__28588__i + 2]; ++G__28588__i;}
G__28587 = new cljs.core.IndexedSeq(G__28588__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__28587);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__28589__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__28590 = ntcoll;
var G__28591 = cljs.core.first(vals);
var G__28592 = cljs.core.next(vals);
tcoll = G__28590;
val = G__28591;
vals = G__28592;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__28589 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__28593__i = 0, G__28593__a = new Array(arguments.length -  2);
while (G__28593__i < G__28593__a.length) {G__28593__a[G__28593__i] = arguments[G__28593__i + 2]; ++G__28593__i;}
  vals = new cljs.core.IndexedSeq(G__28593__a,0);
} 
return G__28589__delegate.call(this,tcoll,val,vals);};
G__28589.cljs$lang$maxFixedArity = 2;
G__28589.cljs$lang$applyTo = (function (arglist__28594){
var tcoll = cljs.core.first(arglist__28594);
arglist__28594 = cljs.core.next(arglist__28594);
var val = cljs.core.first(arglist__28594);
var vals = cljs.core.rest(arglist__28594);
return G__28589__delegate(tcoll,val,vals);
});
G__28589.cljs$core$IFn$_invoke$arity$variadic = G__28589__delegate;
return G__28589;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__28595 = null;
if (arguments.length > 2) {
var G__28596__i = 0, G__28596__a = new Array(arguments.length -  2);
while (G__28596__i < G__28596__a.length) {G__28596__a[G__28596__i] = arguments[G__28596__i + 2]; ++G__28596__i;}
G__28595 = new cljs.core.IndexedSeq(G__28596__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__28595);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a17396 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a17396);
} else {
var G__28807 = a17396;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28807) : f.call(null,G__28807));
}
} else {
var b17397 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a17396,b17397);
} else {
var G__28808 = a17396;
var G__28809 = b17397;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28808,G__28809) : f.call(null,G__28808,G__28809));
}
} else {
var c17398 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a17396,b17397,c17398);
} else {
var G__28810 = a17396;
var G__28811 = b17397;
var G__28812 = c17398;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__28810,G__28811,G__28812) : f.call(null,G__28810,G__28811,G__28812));
}
} else {
var d17399 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a17396,b17397,c17398,d17399);
} else {
var G__28813 = a17396;
var G__28814 = b17397;
var G__28815 = c17398;
var G__28816 = d17399;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__28813,G__28814,G__28815,G__28816) : f.call(null,G__28813,G__28814,G__28815,G__28816));
}
} else {
var e17400 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a17396,b17397,c17398,d17399,e17400);
} else {
var G__28817 = a17396;
var G__28818 = b17397;
var G__28819 = c17398;
var G__28820 = d17399;
var G__28821 = e17400;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__28817,G__28818,G__28819,G__28820,G__28821) : f.call(null,G__28817,G__28818,G__28819,G__28820,G__28821));
}
} else {
var f17401 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a17396,b17397,c17398,d17399,e17400,f17401);
} else {
var G__28822 = a17396;
var G__28823 = b17397;
var G__28824 = c17398;
var G__28825 = d17399;
var G__28826 = e17400;
var G__28827 = f17401;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__28822,G__28823,G__28824,G__28825,G__28826,G__28827) : f.call(null,G__28822,G__28823,G__28824,G__28825,G__28826,G__28827));
}
} else {
var g17402 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a17396,b17397,c17398,d17399,e17400,f17401,g17402);
} else {
var G__28828 = a17396;
var G__28829 = b17397;
var G__28830 = c17398;
var G__28831 = d17399;
var G__28832 = e17400;
var G__28833 = f17401;
var G__28834 = g17402;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__28828,G__28829,G__28830,G__28831,G__28832,G__28833,G__28834) : f.call(null,G__28828,G__28829,G__28830,G__28831,G__28832,G__28833,G__28834));
}
} else {
var h17403 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a17396,b17397,c17398,d17399,e17400,f17401,g17402,h17403);
} else {
var G__28835 = a17396;
var G__28836 = b17397;
var G__28837 = c17398;
var G__28838 = d17399;
var G__28839 = e17400;
var G__28840 = f17401;
var G__28841 = g17402;
var G__28842 = h17403;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__28835,G__28836,G__28837,G__28838,G__28839,G__28840,G__28841,G__28842) : f.call(null,G__28835,G__28836,G__28837,G__28838,G__28839,G__28840,G__28841,G__28842));
}
} else {
var i17404 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a17396,b17397,c17398,d17399,e17400,f17401,g17402,h17403,i17404);
} else {
var G__28843 = a17396;
var G__28844 = b17397;
var G__28845 = c17398;
var G__28846 = d17399;
var G__28847 = e17400;
var G__28848 = f17401;
var G__28849 = g17402;
var G__28850 = h17403;
var G__28851 = i17404;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__28843,G__28844,G__28845,G__28846,G__28847,G__28848,G__28849,G__28850,G__28851) : f.call(null,G__28843,G__28844,G__28845,G__28846,G__28847,G__28848,G__28849,G__28850,G__28851));
}
} else {
var j17405 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a17396,b17397,c17398,d17399,e17400,f17401,g17402,h17403,i17404,j17405);
} else {
var G__28852 = a17396;
var G__28853 = b17397;
var G__28854 = c17398;
var G__28855 = d17399;
var G__28856 = e17400;
var G__28857 = f17401;
var G__28858 = g17402;
var G__28859 = h17403;
var G__28860 = i17404;
var G__28861 = j17405;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__28852,G__28853,G__28854,G__28855,G__28856,G__28857,G__28858,G__28859,G__28860,G__28861) : f.call(null,G__28852,G__28853,G__28854,G__28855,G__28856,G__28857,G__28858,G__28859,G__28860,G__28861));
}
} else {
var k17406 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a17396,b17397,c17398,d17399,e17400,f17401,g17402,h17403,i17404,j17405,k17406);
} else {
var G__28862 = a17396;
var G__28863 = b17397;
var G__28864 = c17398;
var G__28865 = d17399;
var G__28866 = e17400;
var G__28867 = f17401;
var G__28868 = g17402;
var G__28869 = h17403;
var G__28870 = i17404;
var G__28871 = j17405;
var G__28872 = k17406;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__28862,G__28863,G__28864,G__28865,G__28866,G__28867,G__28868,G__28869,G__28870,G__28871,G__28872) : f.call(null,G__28862,G__28863,G__28864,G__28865,G__28866,G__28867,G__28868,G__28869,G__28870,G__28871,G__28872));
}
} else {
var l17407 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a17396,b17397,c17398,d17399,e17400,f17401,g17402,h17403,i17404,j17405,k17406,l17407);
} else {
var G__28873 = a17396;
var G__28874 = b17397;
var G__28875 = c17398;
var G__28876 = d17399;
var G__28877 = e17400;
var G__28878 = f17401;
var G__28879 = g17402;
var G__28880 = h17403;
var G__28881 = i17404;
var G__28882 = j17405;
var G__28883 = k17406;
var G__28884 = l17407;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__28873,G__28874,G__28875,G__28876,G__28877,G__28878,G__28879,G__28880,G__28881,G__28882,G__28883,G__28884) : f.call(null,G__28873,G__28874,G__28875,G__28876,G__28877,G__28878,G__28879,G__28880,G__28881,G__28882,G__28883,G__28884));
}
} else {
var m17408 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a17396,b17397,c17398,d17399,e17400,f17401,g17402,h17403,i17404,j17405,k17406,l17407,m17408);
} else {
var G__28885 = a17396;
var G__28886 = b17397;
var G__28887 = c17398;
var G__28888 = d17399;
var G__28889 = e17400;
var G__28890 = f17401;
var G__28891 = g17402;
var G__28892 = h17403;
var G__28893 = i17404;
var G__28894 = j17405;
var G__28895 = k17406;
var G__28896 = l17407;
var G__28897 = m17408;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__28885,G__28886,G__28887,G__28888,G__28889,G__28890,G__28891,G__28892,G__28893,G__28894,G__28895,G__28896,G__28897) : f.call(null,G__28885,G__28886,G__28887,G__28888,G__28889,G__28890,G__28891,G__28892,G__28893,G__28894,G__28895,G__28896,G__28897));
}
} else {
var n17409 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a17396,b17397,c17398,d17399,e17400,f17401,g17402,h17403,i17404,j17405,k17406,l17407,m17408,n17409);
} else {
var G__28898 = a17396;
var G__28899 = b17397;
var G__28900 = c17398;
var G__28901 = d17399;
var G__28902 = e17400;
var G__28903 = f17401;
var G__28904 = g17402;
var G__28905 = h17403;
var G__28906 = i17404;
var G__28907 = j17405;
var G__28908 = k17406;
var G__28909 = l17407;
var G__28910 = m17408;
var G__28911 = n17409;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__28898,G__28899,G__28900,G__28901,G__28902,G__28903,G__28904,G__28905,G__28906,G__28907,G__28908,G__28909,G__28910,G__28911) : f.call(null,G__28898,G__28899,G__28900,G__28901,G__28902,G__28903,G__28904,G__28905,G__28906,G__28907,G__28908,G__28909,G__28910,G__28911));
}
} else {
var o17410 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a17396,b17397,c17398,d17399,e17400,f17401,g17402,h17403,i17404,j17405,k17406,l17407,m17408,n17409,o17410);
} else {
var G__28912 = a17396;
var G__28913 = b17397;
var G__28914 = c17398;
var G__28915 = d17399;
var G__28916 = e17400;
var G__28917 = f17401;
var G__28918 = g17402;
var G__28919 = h17403;
var G__28920 = i17404;
var G__28921 = j17405;
var G__28922 = k17406;
var G__28923 = l17407;
var G__28924 = m17408;
var G__28925 = n17409;
var G__28926 = o17410;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__28912,G__28913,G__28914,G__28915,G__28916,G__28917,G__28918,G__28919,G__28920,G__28921,G__28922,G__28923,G__28924,G__28925,G__28926) : f.call(null,G__28912,G__28913,G__28914,G__28915,G__28916,G__28917,G__28918,G__28919,G__28920,G__28921,G__28922,G__28923,G__28924,G__28925,G__28926));
}
} else {
var p17411 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a17396,b17397,c17398,d17399,e17400,f17401,g17402,h17403,i17404,j17405,k17406,l17407,m17408,n17409,o17410,p17411);
} else {
var G__28927 = a17396;
var G__28928 = b17397;
var G__28929 = c17398;
var G__28930 = d17399;
var G__28931 = e17400;
var G__28932 = f17401;
var G__28933 = g17402;
var G__28934 = h17403;
var G__28935 = i17404;
var G__28936 = j17405;
var G__28937 = k17406;
var G__28938 = l17407;
var G__28939 = m17408;
var G__28940 = n17409;
var G__28941 = o17410;
var G__28942 = p17411;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__28927,G__28928,G__28929,G__28930,G__28931,G__28932,G__28933,G__28934,G__28935,G__28936,G__28937,G__28938,G__28939,G__28940,G__28941,G__28942) : f.call(null,G__28927,G__28928,G__28929,G__28930,G__28931,G__28932,G__28933,G__28934,G__28935,G__28936,G__28937,G__28938,G__28939,G__28940,G__28941,G__28942));
}
} else {
var q17412 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a17396,b17397,c17398,d17399,e17400,f17401,g17402,h17403,i17404,j17405,k17406,l17407,m17408,n17409,o17410,p17411,q17412);
} else {
var G__28943 = a17396;
var G__28944 = b17397;
var G__28945 = c17398;
var G__28946 = d17399;
var G__28947 = e17400;
var G__28948 = f17401;
var G__28949 = g17402;
var G__28950 = h17403;
var G__28951 = i17404;
var G__28952 = j17405;
var G__28953 = k17406;
var G__28954 = l17407;
var G__28955 = m17408;
var G__28956 = n17409;
var G__28957 = o17410;
var G__28958 = p17411;
var G__28959 = q17412;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__28943,G__28944,G__28945,G__28946,G__28947,G__28948,G__28949,G__28950,G__28951,G__28952,G__28953,G__28954,G__28955,G__28956,G__28957,G__28958,G__28959) : f.call(null,G__28943,G__28944,G__28945,G__28946,G__28947,G__28948,G__28949,G__28950,G__28951,G__28952,G__28953,G__28954,G__28955,G__28956,G__28957,G__28958,G__28959));
}
} else {
var r17413 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a17396,b17397,c17398,d17399,e17400,f17401,g17402,h17403,i17404,j17405,k17406,l17407,m17408,n17409,o17410,p17411,q17412,r17413);
} else {
var G__28960 = a17396;
var G__28961 = b17397;
var G__28962 = c17398;
var G__28963 = d17399;
var G__28964 = e17400;
var G__28965 = f17401;
var G__28966 = g17402;
var G__28967 = h17403;
var G__28968 = i17404;
var G__28969 = j17405;
var G__28970 = k17406;
var G__28971 = l17407;
var G__28972 = m17408;
var G__28973 = n17409;
var G__28974 = o17410;
var G__28975 = p17411;
var G__28976 = q17412;
var G__28977 = r17413;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__28960,G__28961,G__28962,G__28963,G__28964,G__28965,G__28966,G__28967,G__28968,G__28969,G__28970,G__28971,G__28972,G__28973,G__28974,G__28975,G__28976,G__28977) : f.call(null,G__28960,G__28961,G__28962,G__28963,G__28964,G__28965,G__28966,G__28967,G__28968,G__28969,G__28970,G__28971,G__28972,G__28973,G__28974,G__28975,G__28976,G__28977));
}
} else {
var s17414 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a17396,b17397,c17398,d17399,e17400,f17401,g17402,h17403,i17404,j17405,k17406,l17407,m17408,n17409,o17410,p17411,q17412,r17413,s17414);
} else {
var G__28978 = a17396;
var G__28979 = b17397;
var G__28980 = c17398;
var G__28981 = d17399;
var G__28982 = e17400;
var G__28983 = f17401;
var G__28984 = g17402;
var G__28985 = h17403;
var G__28986 = i17404;
var G__28987 = j17405;
var G__28988 = k17406;
var G__28989 = l17407;
var G__28990 = m17408;
var G__28991 = n17409;
var G__28992 = o17410;
var G__28993 = p17411;
var G__28994 = q17412;
var G__28995 = r17413;
var G__28996 = s17414;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__28978,G__28979,G__28980,G__28981,G__28982,G__28983,G__28984,G__28985,G__28986,G__28987,G__28988,G__28989,G__28990,G__28991,G__28992,G__28993,G__28994,G__28995,G__28996) : f.call(null,G__28978,G__28979,G__28980,G__28981,G__28982,G__28983,G__28984,G__28985,G__28986,G__28987,G__28988,G__28989,G__28990,G__28991,G__28992,G__28993,G__28994,G__28995,G__28996));
}
} else {
var t17415 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a17396,b17397,c17398,d17399,e17400,f17401,g17402,h17403,i17404,j17405,k17406,l17407,m17408,n17409,o17410,p17411,q17412,r17413,s17414,t17415);
} else {
var G__28997 = a17396;
var G__28998 = b17397;
var G__28999 = c17398;
var G__29000 = d17399;
var G__29001 = e17400;
var G__29002 = f17401;
var G__29003 = g17402;
var G__29004 = h17403;
var G__29005 = i17404;
var G__29006 = j17405;
var G__29007 = k17406;
var G__29008 = l17407;
var G__29009 = m17408;
var G__29010 = n17409;
var G__29011 = o17410;
var G__29012 = p17411;
var G__29013 = q17412;
var G__29014 = r17413;
var G__29015 = s17414;
var G__29016 = t17415;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__28997,G__28998,G__28999,G__29000,G__29001,G__29002,G__29003,G__29004,G__29005,G__29006,G__29007,G__29008,G__29009,G__29010,G__29011,G__29012,G__29013,G__29014,G__29015,G__29016) : f.call(null,G__28997,G__28998,G__28999,G__29000,G__29001,G__29002,G__29003,G__29004,G__29005,G__29006,G__29007,G__29008,G__29009,G__29010,G__29011,G__29012,G__29013,G__29014,G__29015,G__29016));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__29017__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__29017 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__29018__i = 0, G__29018__a = new Array(arguments.length -  5);
while (G__29018__i < G__29018__a.length) {G__29018__a[G__29018__i] = arguments[G__29018__i + 5]; ++G__29018__i;}
  args = new cljs.core.IndexedSeq(G__29018__a,0);
} 
return G__29017__delegate.call(this,f,a,b,c,d,args);};
G__29017.cljs$lang$maxFixedArity = 5;
G__29017.cljs$lang$applyTo = (function (arglist__29019){
var f = cljs.core.first(arglist__29019);
arglist__29019 = cljs.core.next(arglist__29019);
var a = cljs.core.first(arglist__29019);
arglist__29019 = cljs.core.next(arglist__29019);
var b = cljs.core.first(arglist__29019);
arglist__29019 = cljs.core.next(arglist__29019);
var c = cljs.core.first(arglist__29019);
arglist__29019 = cljs.core.next(arglist__29019);
var d = cljs.core.first(arglist__29019);
var args = cljs.core.rest(arglist__29019);
return G__29017__delegate(f,a,b,c,d,args);
});
G__29017.cljs$core$IFn$_invoke$arity$variadic = G__29017__delegate;
return G__29017;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__29020 = null;
if (arguments.length > 5) {
var G__29021__i = 0, G__29021__a = new Array(arguments.length -  5);
while (G__29021__i < G__29021__a.length) {G__29021__a[G__29021__i] = arguments[G__29021__i + 5]; ++G__29021__i;}
G__29020 = new cljs.core.IndexedSeq(G__29021__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__29020);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__29037 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29037) : f.call(null,G__29037));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__29038 = cljs.core.meta(obj);
var G__29039 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29038,G__29039) : f.call(null,G__29038,G__29039));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__29040 = cljs.core.meta(obj);
var G__29041 = a;
var G__29042 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__29040,G__29041,G__29042) : f.call(null,G__29040,G__29041,G__29042));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__29043 = cljs.core.meta(obj);
var G__29044 = a;
var G__29045 = b;
var G__29046 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__29043,G__29044,G__29045,G__29046) : f.call(null,G__29043,G__29044,G__29045,G__29046));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__29047 = cljs.core.meta(obj);
var G__29048 = a;
var G__29049 = b;
var G__29050 = c;
var G__29051 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__29047,G__29048,G__29049,G__29050,G__29051) : f.call(null,G__29047,G__29048,G__29049,G__29050,G__29051));
})());
});
var vary_meta__7 = (function() { 
var G__29052__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__29052 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__29053__i = 0, G__29053__a = new Array(arguments.length -  6);
while (G__29053__i < G__29053__a.length) {G__29053__a[G__29053__i] = arguments[G__29053__i + 6]; ++G__29053__i;}
  args = new cljs.core.IndexedSeq(G__29053__a,0);
} 
return G__29052__delegate.call(this,obj,f,a,b,c,d,args);};
G__29052.cljs$lang$maxFixedArity = 6;
G__29052.cljs$lang$applyTo = (function (arglist__29054){
var obj = cljs.core.first(arglist__29054);
arglist__29054 = cljs.core.next(arglist__29054);
var f = cljs.core.first(arglist__29054);
arglist__29054 = cljs.core.next(arglist__29054);
var a = cljs.core.first(arglist__29054);
arglist__29054 = cljs.core.next(arglist__29054);
var b = cljs.core.first(arglist__29054);
arglist__29054 = cljs.core.next(arglist__29054);
var c = cljs.core.first(arglist__29054);
arglist__29054 = cljs.core.next(arglist__29054);
var d = cljs.core.first(arglist__29054);
var args = cljs.core.rest(arglist__29054);
return G__29052__delegate(obj,f,a,b,c,d,args);
});
G__29052.cljs$core$IFn$_invoke$arity$variadic = G__29052__delegate;
return G__29052;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__29055 = null;
if (arguments.length > 6) {
var G__29056__i = 0, G__29056__a = new Array(arguments.length -  6);
while (G__29056__i < G__29056__a.length) {G__29056__a[G__29056__i] = arguments[G__29056__i + 6]; ++G__29056__i;}
G__29055 = new cljs.core.IndexedSeq(G__29056__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__29055);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__29057__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__29057 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__29058__i = 0, G__29058__a = new Array(arguments.length -  2);
while (G__29058__i < G__29058__a.length) {G__29058__a[G__29058__i] = arguments[G__29058__i + 2]; ++G__29058__i;}
  more = new cljs.core.IndexedSeq(G__29058__a,0);
} 
return G__29057__delegate.call(this,x,y,more);};
G__29057.cljs$lang$maxFixedArity = 2;
G__29057.cljs$lang$applyTo = (function (arglist__29059){
var x = cljs.core.first(arglist__29059);
arglist__29059 = cljs.core.next(arglist__29059);
var y = cljs.core.first(arglist__29059);
var more = cljs.core.rest(arglist__29059);
return G__29057__delegate(x,y,more);
});
G__29057.cljs$core$IFn$_invoke$arity$variadic = G__29057__delegate;
return G__29057;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__29060 = null;
if (arguments.length > 2) {
var G__29061__i = 0, G__29061__a = new Array(arguments.length -  2);
while (G__29061__i < G__29061__a.length) {G__29061__a[G__29061__i] = arguments[G__29061__i + 2]; ++G__29061__i;}
G__29060 = new cljs.core.IndexedSeq(G__29061__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__29060);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t29065 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t29065 = (function (nil_iter,meta29066){
this.nil_iter = nil_iter;
this.meta29066 = meta29066;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t29065.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t29065.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t29065.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t29065.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_29067){
var self__ = this;
var _29067__$1 = this;
return self__.meta29066;
});

cljs.core.t29065.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_29067,meta29066__$1){
var self__ = this;
var _29067__$1 = this;
return (new cljs.core.t29065(self__.nil_iter,meta29066__$1));
});

cljs.core.t29065.cljs$lang$type = true;

cljs.core.t29065.cljs$lang$ctorStr = "cljs.core/t29065";

cljs.core.t29065.cljs$lang$ctorPrWriter = (function (this__17052__auto__,writer__17053__auto__,opt__17054__auto__){
return cljs.core._write(writer__17053__auto__,"cljs.core/t29065");
});

cljs.core.__GT_t29065 = (function __GT_t29065(nil_iter__$1,meta29066){
return (new cljs.core.t29065(nil_iter__$1,meta29066));
});

}

return (new cljs.core.t29065(nil_iter,cljs.core.PersistentArrayMap.EMPTY));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__17052__auto__,writer__17053__auto__,opt__17054__auto__){
return cljs.core._write(writer__17053__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__17052__auto__,writer__17053__auto__,opt__17054__auto__){
return cljs.core._write(writer__17053__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__17052__auto__,writer__17053__auto__,opt__17054__auto__){
return cljs.core._write(writer__17053__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__16453__auto__ = !((lt.stepper == null));
if(and__16453__auto__){
return self__.iter.hasNext();
} else {
return and__16453__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__29068 = lt;
var G__29069 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__29068,G__29069) : self__.xform.call(null,G__29068,G__29069));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__29070 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__29070) : self__.xform.call(null,G__29070));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__17052__auto__,writer__17053__auto__,opt__17054__auto__){
return cljs.core._write(writer__17053__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__29072 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__29072) : xform.call(null,G__29072));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__29074 = cljs.core.next(iters__$1);
iters__$1 = G__29074;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__17352__auto___29075 = self__.iters.length;
var i_29076 = (0);
while(true){
if((i_29076 < n__17352__auto___29075)){
(self__.nexts[i_29076] = (self__.iters[i_29076]).next());

var G__29077 = (i_29076 + (1));
i_29076 = G__29077;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__16453__auto__ = !((lt.stepper == null));
if(and__16453__auto__){
return this$.hasNext();
} else {
return and__16453__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__29073 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__29073) : self__.xform.call(null,G__29073));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__17052__auto__,writer__17053__auto__,opt__17054__auto__){
return cljs.core._write(writer__17053__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__29082 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__29082) : xform.call(null,G__29082));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__17052__auto__,writer__17053__auto__,opt__17054__auto__){
return cljs.core._write(writer__17053__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17443__auto__ = this;
return cljs.core.es6_iterator(this__17443__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__29083_29087 = cljs.core.seq(colls);
var chunk__29084_29088 = null;
var count__29085_29089 = (0);
var i__29086_29090 = (0);
while(true){
if((i__29086_29090 < count__29085_29089)){
var coll_29091 = chunk__29084_29088.cljs$core$IIndexed$_nth$arity$2(null,i__29086_29090);
iters.push(cljs.core.iter(coll_29091));

var G__29092 = seq__29083_29087;
var G__29093 = chunk__29084_29088;
var G__29094 = count__29085_29089;
var G__29095 = (i__29086_29090 + (1));
seq__29083_29087 = G__29092;
chunk__29084_29088 = G__29093;
count__29085_29089 = G__29094;
i__29086_29090 = G__29095;
continue;
} else {
var temp__4126__auto___29096 = cljs.core.seq(seq__29083_29087);
if(temp__4126__auto___29096){
var seq__29083_29097__$1 = temp__4126__auto___29096;
if(cljs.core.chunked_seq_QMARK_(seq__29083_29097__$1)){
var c__17252__auto___29098 = cljs.core.chunk_first(seq__29083_29097__$1);
var G__29099 = cljs.core.chunk_rest(seq__29083_29097__$1);
var G__29100 = c__17252__auto___29098;
var G__29101 = cljs.core.count(c__17252__auto___29098);
var G__29102 = (0);
seq__29083_29087 = G__29099;
chunk__29084_29088 = G__29100;
count__29085_29089 = G__29101;
i__29086_29090 = G__29102;
continue;
} else {
var coll_29103 = cljs.core.first(seq__29083_29097__$1);
iters.push(cljs.core.iter(coll_29103));

var G__29104 = cljs.core.next(seq__29083_29097__$1);
var G__29105 = null;
var G__29106 = (0);
var G__29107 = (0);
seq__29083_29087 = G__29104;
chunk__29084_29088 = G__29105;
count__29085_29089 = G__29106;
i__29086_29090 = G__29107;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__16465__auto__ = cljs.core.seq(coll);
if(or__16465__auto__){
return or__16465__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__29108__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__29108 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__29109__i = 0, G__29109__a = new Array(arguments.length -  2);
while (G__29109__i < G__29109__a.length) {G__29109__a[G__29109__i] = arguments[G__29109__i + 2]; ++G__29109__i;}
  colls = new cljs.core.IndexedSeq(G__29109__a,0);
} 
return G__29108__delegate.call(this,xform,coll,colls);};
G__29108.cljs$lang$maxFixedArity = 2;
G__29108.cljs$lang$applyTo = (function (arglist__29110){
var xform = cljs.core.first(arglist__29110);
arglist__29110 = cljs.core.next(arglist__29110);
var coll = cljs.core.first(arglist__29110);
var colls = cljs.core.rest(arglist__29110);
return G__29108__delegate(xform,coll,colls);
});
G__29108.cljs$core$IFn$_invoke$arity$variadic = G__29108__delegate;
return G__29108;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__29111 = null;
if (arguments.length > 2) {
var G__29112__i = 0, G__29112__a = new Array(arguments.length -  2);
while (G__29112__i < G__29112__a.length) {G__29112__a[G__29112__i] = arguments[G__29112__i + 2]; ++G__29112__i;}
G__29111 = new cljs.core.IndexedSeq(G__29112__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__29111);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__29114 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__29114) : pred.call(null,G__29114));
})())){
var G__29115 = pred;
var G__29116 = cljs.core.next(coll);
pred = G__29115;
coll = G__29116;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__16465__auto__ = (function (){var G__29120 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__29120) : pred.call(null,G__29120));
})();
if(cljs.core.truth_(or__16465__auto__)){
return or__16465__auto__;
} else {
var G__29121 = pred;
var G__29122 = cljs.core.next(coll);
pred = G__29121;
coll = G__29122;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__29129 = null;
var G__29129__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__29129__1 = (function (x){
return cljs.core.not((function (){var G__29126 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29126) : f.call(null,G__29126));
})());
});
var G__29129__2 = (function (x,y){
return cljs.core.not((function (){var G__29127 = x;
var G__29128 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29127,G__29128) : f.call(null,G__29127,G__29128));
})());
});
var G__29129__3 = (function() { 
var G__29130__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__29130 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__29131__i = 0, G__29131__a = new Array(arguments.length -  2);
while (G__29131__i < G__29131__a.length) {G__29131__a[G__29131__i] = arguments[G__29131__i + 2]; ++G__29131__i;}
  zs = new cljs.core.IndexedSeq(G__29131__a,0);
} 
return G__29130__delegate.call(this,x,y,zs);};
G__29130.cljs$lang$maxFixedArity = 2;
G__29130.cljs$lang$applyTo = (function (arglist__29132){
var x = cljs.core.first(arglist__29132);
arglist__29132 = cljs.core.next(arglist__29132);
var y = cljs.core.first(arglist__29132);
var zs = cljs.core.rest(arglist__29132);
return G__29130__delegate(x,y,zs);
});
G__29130.cljs$core$IFn$_invoke$arity$variadic = G__29130__delegate;
return G__29130;
})()
;
G__29129 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__29129__0.call(this);
case 1:
return G__29129__1.call(this,x);
case 2:
return G__29129__2.call(this,x,y);
default:
var G__29133 = null;
if (arguments.length > 2) {
var G__29134__i = 0, G__29134__a = new Array(arguments.length -  2);
while (G__29134__i < G__29134__a.length) {G__29134__a[G__29134__i] = arguments[G__29134__i + 2]; ++G__29134__i;}
G__29133 = new cljs.core.IndexedSeq(G__29134__a,0);
}
return G__29129__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__29133);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29129.cljs$lang$maxFixedArity = 2;
G__29129.cljs$lang$applyTo = G__29129__3.cljs$lang$applyTo;
G__29129.cljs$core$IFn$_invoke$arity$0 = G__29129__0;
G__29129.cljs$core$IFn$_invoke$arity$1 = G__29129__1;
G__29129.cljs$core$IFn$_invoke$arity$2 = G__29129__2;
G__29129.cljs$core$IFn$_invoke$arity$variadic = G__29129__3.cljs$core$IFn$_invoke$arity$variadic;
return G__29129;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__29135__delegate = function (args){
return x;
};
var G__29135 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__29136__i = 0, G__29136__a = new Array(arguments.length -  0);
while (G__29136__i < G__29136__a.length) {G__29136__a[G__29136__i] = arguments[G__29136__i + 0]; ++G__29136__i;}
  args = new cljs.core.IndexedSeq(G__29136__a,0);
} 
return G__29135__delegate.call(this,args);};
G__29135.cljs$lang$maxFixedArity = 0;
G__29135.cljs$lang$applyTo = (function (arglist__29137){
var args = cljs.core.seq(arglist__29137);
return G__29135__delegate(args);
});
G__29135.cljs$core$IFn$_invoke$arity$variadic = G__29135__delegate;
return G__29135;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__29192 = null;
var G__29192__0 = (function (){
var G__29165 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29165) : f.call(null,G__29165));
});
var G__29192__1 = (function (x){
var G__29166 = (function (){var G__29167 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__29167) : g.call(null,G__29167));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29166) : f.call(null,G__29166));
});
var G__29192__2 = (function (x,y){
var G__29168 = (function (){var G__29169 = x;
var G__29170 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__29169,G__29170) : g.call(null,G__29169,G__29170));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29168) : f.call(null,G__29168));
});
var G__29192__3 = (function (x,y,z){
var G__29171 = (function (){var G__29172 = x;
var G__29173 = y;
var G__29174 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__29172,G__29173,G__29174) : g.call(null,G__29172,G__29173,G__29174));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29171) : f.call(null,G__29171));
});
var G__29192__4 = (function() { 
var G__29193__delegate = function (x,y,z,args){
var G__29175 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29175) : f.call(null,G__29175));
};
var G__29193 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__29194__i = 0, G__29194__a = new Array(arguments.length -  3);
while (G__29194__i < G__29194__a.length) {G__29194__a[G__29194__i] = arguments[G__29194__i + 3]; ++G__29194__i;}
  args = new cljs.core.IndexedSeq(G__29194__a,0);
} 
return G__29193__delegate.call(this,x,y,z,args);};
G__29193.cljs$lang$maxFixedArity = 3;
G__29193.cljs$lang$applyTo = (function (arglist__29195){
var x = cljs.core.first(arglist__29195);
arglist__29195 = cljs.core.next(arglist__29195);
var y = cljs.core.first(arglist__29195);
arglist__29195 = cljs.core.next(arglist__29195);
var z = cljs.core.first(arglist__29195);
var args = cljs.core.rest(arglist__29195);
return G__29193__delegate(x,y,z,args);
});
G__29193.cljs$core$IFn$_invoke$arity$variadic = G__29193__delegate;
return G__29193;
})()
;
G__29192 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__29192__0.call(this);
case 1:
return G__29192__1.call(this,x);
case 2:
return G__29192__2.call(this,x,y);
case 3:
return G__29192__3.call(this,x,y,z);
default:
var G__29196 = null;
if (arguments.length > 3) {
var G__29197__i = 0, G__29197__a = new Array(arguments.length -  3);
while (G__29197__i < G__29197__a.length) {G__29197__a[G__29197__i] = arguments[G__29197__i + 3]; ++G__29197__i;}
G__29196 = new cljs.core.IndexedSeq(G__29197__a,0);
}
return G__29192__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__29196);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29192.cljs$lang$maxFixedArity = 3;
G__29192.cljs$lang$applyTo = G__29192__4.cljs$lang$applyTo;
G__29192.cljs$core$IFn$_invoke$arity$0 = G__29192__0;
G__29192.cljs$core$IFn$_invoke$arity$1 = G__29192__1;
G__29192.cljs$core$IFn$_invoke$arity$2 = G__29192__2;
G__29192.cljs$core$IFn$_invoke$arity$3 = G__29192__3;
G__29192.cljs$core$IFn$_invoke$arity$variadic = G__29192__4.cljs$core$IFn$_invoke$arity$variadic;
return G__29192;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__29198 = null;
var G__29198__0 = (function (){
var G__29176 = (function (){var G__29177 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__29177) : g.call(null,G__29177));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29176) : f.call(null,G__29176));
});
var G__29198__1 = (function (x){
var G__29178 = (function (){var G__29179 = (function (){var G__29180 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__29180) : h.call(null,G__29180));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__29179) : g.call(null,G__29179));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29178) : f.call(null,G__29178));
});
var G__29198__2 = (function (x,y){
var G__29181 = (function (){var G__29182 = (function (){var G__29183 = x;
var G__29184 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__29183,G__29184) : h.call(null,G__29183,G__29184));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__29182) : g.call(null,G__29182));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29181) : f.call(null,G__29181));
});
var G__29198__3 = (function (x,y,z){
var G__29185 = (function (){var G__29186 = (function (){var G__29187 = x;
var G__29188 = y;
var G__29189 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__29187,G__29188,G__29189) : h.call(null,G__29187,G__29188,G__29189));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__29186) : g.call(null,G__29186));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29185) : f.call(null,G__29185));
});
var G__29198__4 = (function() { 
var G__29199__delegate = function (x,y,z,args){
var G__29190 = (function (){var G__29191 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__29191) : g.call(null,G__29191));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29190) : f.call(null,G__29190));
};
var G__29199 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__29200__i = 0, G__29200__a = new Array(arguments.length -  3);
while (G__29200__i < G__29200__a.length) {G__29200__a[G__29200__i] = arguments[G__29200__i + 3]; ++G__29200__i;}
  args = new cljs.core.IndexedSeq(G__29200__a,0);
} 
return G__29199__delegate.call(this,x,y,z,args);};
G__29199.cljs$lang$maxFixedArity = 3;
G__29199.cljs$lang$applyTo = (function (arglist__29201){
var x = cljs.core.first(arglist__29201);
arglist__29201 = cljs.core.next(arglist__29201);
var y = cljs.core.first(arglist__29201);
arglist__29201 = cljs.core.next(arglist__29201);
var z = cljs.core.first(arglist__29201);
var args = cljs.core.rest(arglist__29201);
return G__29199__delegate(x,y,z,args);
});
G__29199.cljs$core$IFn$_invoke$arity$variadic = G__29199__delegate;
return G__29199;
})()
;
G__29198 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__29198__0.call(this);
case 1:
return G__29198__1.call(this,x);
case 2:
return G__29198__2.call(this,x,y);
case 3:
return G__29198__3.call(this,x,y,z);
default:
var G__29202 = null;
if (arguments.length > 3) {
var G__29203__i = 0, G__29203__a = new Array(arguments.length -  3);
while (G__29203__i < G__29203__a.length) {G__29203__a[G__29203__i] = arguments[G__29203__i + 3]; ++G__29203__i;}
G__29202 = new cljs.core.IndexedSeq(G__29203__a,0);
}
return G__29198__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__29202);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29198.cljs$lang$maxFixedArity = 3;
G__29198.cljs$lang$applyTo = G__29198__4.cljs$lang$applyTo;
G__29198.cljs$core$IFn$_invoke$arity$0 = G__29198__0;
G__29198.cljs$core$IFn$_invoke$arity$1 = G__29198__1;
G__29198.cljs$core$IFn$_invoke$arity$2 = G__29198__2;
G__29198.cljs$core$IFn$_invoke$arity$3 = G__29198__3;
G__29198.cljs$core$IFn$_invoke$arity$variadic = G__29198__4.cljs$core$IFn$_invoke$arity$variadic;
return G__29198;
})()
});
var comp__4 = (function() { 
var G__29204__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__29205__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__29206 = cljs.core.first(fs__$2).call(null,ret);
var G__29207 = cljs.core.next(fs__$2);
ret = G__29206;
fs__$2 = G__29207;
continue;
} else {
return ret;
}
break;
}
};
var G__29205 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__29208__i = 0, G__29208__a = new Array(arguments.length -  0);
while (G__29208__i < G__29208__a.length) {G__29208__a[G__29208__i] = arguments[G__29208__i + 0]; ++G__29208__i;}
  args = new cljs.core.IndexedSeq(G__29208__a,0);
} 
return G__29205__delegate.call(this,args);};
G__29205.cljs$lang$maxFixedArity = 0;
G__29205.cljs$lang$applyTo = (function (arglist__29209){
var args = cljs.core.seq(arglist__29209);
return G__29205__delegate(args);
});
G__29205.cljs$core$IFn$_invoke$arity$variadic = G__29205__delegate;
return G__29205;
})()
;
;})(fs__$1))
};
var G__29204 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__29210__i = 0, G__29210__a = new Array(arguments.length -  3);
while (G__29210__i < G__29210__a.length) {G__29210__a[G__29210__i] = arguments[G__29210__i + 3]; ++G__29210__i;}
  fs = new cljs.core.IndexedSeq(G__29210__a,0);
} 
return G__29204__delegate.call(this,f1,f2,f3,fs);};
G__29204.cljs$lang$maxFixedArity = 3;
G__29204.cljs$lang$applyTo = (function (arglist__29211){
var f1 = cljs.core.first(arglist__29211);
arglist__29211 = cljs.core.next(arglist__29211);
var f2 = cljs.core.first(arglist__29211);
arglist__29211 = cljs.core.next(arglist__29211);
var f3 = cljs.core.first(arglist__29211);
var fs = cljs.core.rest(arglist__29211);
return G__29204__delegate(f1,f2,f3,fs);
});
G__29204.cljs$core$IFn$_invoke$arity$variadic = G__29204__delegate;
return G__29204;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__29212 = null;
if (arguments.length > 3) {
var G__29213__i = 0, G__29213__a = new Array(arguments.length -  3);
while (G__29213__i < G__29213__a.length) {G__29213__a[G__29213__i] = arguments[G__29213__i + 3]; ++G__29213__i;}
G__29212 = new cljs.core.IndexedSeq(G__29213__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__29212);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__29298 = null;
var G__29298__0 = (function (){
var G__29256 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29256) : f.call(null,G__29256));
});
var G__29298__1 = (function (x){
var G__29257 = arg1;
var G__29258 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29257,G__29258) : f.call(null,G__29257,G__29258));
});
var G__29298__2 = (function (x,y){
var G__29259 = arg1;
var G__29260 = x;
var G__29261 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__29259,G__29260,G__29261) : f.call(null,G__29259,G__29260,G__29261));
});
var G__29298__3 = (function (x,y,z){
var G__29262 = arg1;
var G__29263 = x;
var G__29264 = y;
var G__29265 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__29262,G__29263,G__29264,G__29265) : f.call(null,G__29262,G__29263,G__29264,G__29265));
});
var G__29298__4 = (function() { 
var G__29299__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__29299 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__29300__i = 0, G__29300__a = new Array(arguments.length -  3);
while (G__29300__i < G__29300__a.length) {G__29300__a[G__29300__i] = arguments[G__29300__i + 3]; ++G__29300__i;}
  args = new cljs.core.IndexedSeq(G__29300__a,0);
} 
return G__29299__delegate.call(this,x,y,z,args);};
G__29299.cljs$lang$maxFixedArity = 3;
G__29299.cljs$lang$applyTo = (function (arglist__29301){
var x = cljs.core.first(arglist__29301);
arglist__29301 = cljs.core.next(arglist__29301);
var y = cljs.core.first(arglist__29301);
arglist__29301 = cljs.core.next(arglist__29301);
var z = cljs.core.first(arglist__29301);
var args = cljs.core.rest(arglist__29301);
return G__29299__delegate(x,y,z,args);
});
G__29299.cljs$core$IFn$_invoke$arity$variadic = G__29299__delegate;
return G__29299;
})()
;
G__29298 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__29298__0.call(this);
case 1:
return G__29298__1.call(this,x);
case 2:
return G__29298__2.call(this,x,y);
case 3:
return G__29298__3.call(this,x,y,z);
default:
var G__29302 = null;
if (arguments.length > 3) {
var G__29303__i = 0, G__29303__a = new Array(arguments.length -  3);
while (G__29303__i < G__29303__a.length) {G__29303__a[G__29303__i] = arguments[G__29303__i + 3]; ++G__29303__i;}
G__29302 = new cljs.core.IndexedSeq(G__29303__a,0);
}
return G__29298__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__29302);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29298.cljs$lang$maxFixedArity = 3;
G__29298.cljs$lang$applyTo = G__29298__4.cljs$lang$applyTo;
G__29298.cljs$core$IFn$_invoke$arity$0 = G__29298__0;
G__29298.cljs$core$IFn$_invoke$arity$1 = G__29298__1;
G__29298.cljs$core$IFn$_invoke$arity$2 = G__29298__2;
G__29298.cljs$core$IFn$_invoke$arity$3 = G__29298__3;
G__29298.cljs$core$IFn$_invoke$arity$variadic = G__29298__4.cljs$core$IFn$_invoke$arity$variadic;
return G__29298;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__29304 = null;
var G__29304__0 = (function (){
var G__29266 = arg1;
var G__29267 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29266,G__29267) : f.call(null,G__29266,G__29267));
});
var G__29304__1 = (function (x){
var G__29268 = arg1;
var G__29269 = arg2;
var G__29270 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__29268,G__29269,G__29270) : f.call(null,G__29268,G__29269,G__29270));
});
var G__29304__2 = (function (x,y){
var G__29271 = arg1;
var G__29272 = arg2;
var G__29273 = x;
var G__29274 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__29271,G__29272,G__29273,G__29274) : f.call(null,G__29271,G__29272,G__29273,G__29274));
});
var G__29304__3 = (function (x,y,z){
var G__29275 = arg1;
var G__29276 = arg2;
var G__29277 = x;
var G__29278 = y;
var G__29279 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__29275,G__29276,G__29277,G__29278,G__29279) : f.call(null,G__29275,G__29276,G__29277,G__29278,G__29279));
});
var G__29304__4 = (function() { 
var G__29305__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__29305 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__29306__i = 0, G__29306__a = new Array(arguments.length -  3);
while (G__29306__i < G__29306__a.length) {G__29306__a[G__29306__i] = arguments[G__29306__i + 3]; ++G__29306__i;}
  args = new cljs.core.IndexedSeq(G__29306__a,0);
} 
return G__29305__delegate.call(this,x,y,z,args);};
G__29305.cljs$lang$maxFixedArity = 3;
G__29305.cljs$lang$applyTo = (function (arglist__29307){
var x = cljs.core.first(arglist__29307);
arglist__29307 = cljs.core.next(arglist__29307);
var y = cljs.core.first(arglist__29307);
arglist__29307 = cljs.core.next(arglist__29307);
var z = cljs.core.first(arglist__29307);
var args = cljs.core.rest(arglist__29307);
return G__29305__delegate(x,y,z,args);
});
G__29305.cljs$core$IFn$_invoke$arity$variadic = G__29305__delegate;
return G__29305;
})()
;
G__29304 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__29304__0.call(this);
case 1:
return G__29304__1.call(this,x);
case 2:
return G__29304__2.call(this,x,y);
case 3:
return G__29304__3.call(this,x,y,z);
default:
var G__29308 = null;
if (arguments.length > 3) {
var G__29309__i = 0, G__29309__a = new Array(arguments.length -  3);
while (G__29309__i < G__29309__a.length) {G__29309__a[G__29309__i] = arguments[G__29309__i + 3]; ++G__29309__i;}
G__29308 = new cljs.core.IndexedSeq(G__29309__a,0);
}
return G__29304__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__29308);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29304.cljs$lang$maxFixedArity = 3;
G__29304.cljs$lang$applyTo = G__29304__4.cljs$lang$applyTo;
G__29304.cljs$core$IFn$_invoke$arity$0 = G__29304__0;
G__29304.cljs$core$IFn$_invoke$arity$1 = G__29304__1;
G__29304.cljs$core$IFn$_invoke$arity$2 = G__29304__2;
G__29304.cljs$core$IFn$_invoke$arity$3 = G__29304__3;
G__29304.cljs$core$IFn$_invoke$arity$variadic = G__29304__4.cljs$core$IFn$_invoke$arity$variadic;
return G__29304;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__29310 = null;
var G__29310__0 = (function (){
var G__29280 = arg1;
var G__29281 = arg2;
var G__29282 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__29280,G__29281,G__29282) : f.call(null,G__29280,G__29281,G__29282));
});
var G__29310__1 = (function (x){
var G__29283 = arg1;
var G__29284 = arg2;
var G__29285 = arg3;
var G__29286 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__29283,G__29284,G__29285,G__29286) : f.call(null,G__29283,G__29284,G__29285,G__29286));
});
var G__29310__2 = (function (x,y){
var G__29287 = arg1;
var G__29288 = arg2;
var G__29289 = arg3;
var G__29290 = x;
var G__29291 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__29287,G__29288,G__29289,G__29290,G__29291) : f.call(null,G__29287,G__29288,G__29289,G__29290,G__29291));
});
var G__29310__3 = (function (x,y,z){
var G__29292 = arg1;
var G__29293 = arg2;
var G__29294 = arg3;
var G__29295 = x;
var G__29296 = y;
var G__29297 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__29292,G__29293,G__29294,G__29295,G__29296,G__29297) : f.call(null,G__29292,G__29293,G__29294,G__29295,G__29296,G__29297));
});
var G__29310__4 = (function() { 
var G__29311__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__29311 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__29312__i = 0, G__29312__a = new Array(arguments.length -  3);
while (G__29312__i < G__29312__a.length) {G__29312__a[G__29312__i] = arguments[G__29312__i + 3]; ++G__29312__i;}
  args = new cljs.core.IndexedSeq(G__29312__a,0);
} 
return G__29311__delegate.call(this,x,y,z,args);};
G__29311.cljs$lang$maxFixedArity = 3;
G__29311.cljs$lang$applyTo = (function (arglist__29313){
var x = cljs.core.first(arglist__29313);
arglist__29313 = cljs.core.next(arglist__29313);
var y = cljs.core.first(arglist__29313);
arglist__29313 = cljs.core.next(arglist__29313);
var z = cljs.core.first(arglist__29313);
var args = cljs.core.rest(arglist__29313);
return G__29311__delegate(x,y,z,args);
});
G__29311.cljs$core$IFn$_invoke$arity$variadic = G__29311__delegate;
return G__29311;
})()
;
G__29310 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__29310__0.call(this);
case 1:
return G__29310__1.call(this,x);
case 2:
return G__29310__2.call(this,x,y);
case 3:
return G__29310__3.call(this,x,y,z);
default:
var G__29314 = null;
if (arguments.length > 3) {
var G__29315__i = 0, G__29315__a = new Array(arguments.length -  3);
while (G__29315__i < G__29315__a.length) {G__29315__a[G__29315__i] = arguments[G__29315__i + 3]; ++G__29315__i;}
G__29314 = new cljs.core.IndexedSeq(G__29315__a,0);
}
return G__29310__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__29314);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29310.cljs$lang$maxFixedArity = 3;
G__29310.cljs$lang$applyTo = G__29310__4.cljs$lang$applyTo;
G__29310.cljs$core$IFn$_invoke$arity$0 = G__29310__0;
G__29310.cljs$core$IFn$_invoke$arity$1 = G__29310__1;
G__29310.cljs$core$IFn$_invoke$arity$2 = G__29310__2;
G__29310.cljs$core$IFn$_invoke$arity$3 = G__29310__3;
G__29310.cljs$core$IFn$_invoke$arity$variadic = G__29310__4.cljs$core$IFn$_invoke$arity$variadic;
return G__29310;
})()
});
var partial__5 = (function() { 
var G__29316__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__29317__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__29317 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__29318__i = 0, G__29318__a = new Array(arguments.length -  0);
while (G__29318__i < G__29318__a.length) {G__29318__a[G__29318__i] = arguments[G__29318__i + 0]; ++G__29318__i;}
  args = new cljs.core.IndexedSeq(G__29318__a,0);
} 
return G__29317__delegate.call(this,args);};
G__29317.cljs$lang$maxFixedArity = 0;
G__29317.cljs$lang$applyTo = (function (arglist__29319){
var args = cljs.core.seq(arglist__29319);
return G__29317__delegate(args);
});
G__29317.cljs$core$IFn$_invoke$arity$variadic = G__29317__delegate;
return G__29317;
})()
;
};
var G__29316 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__29320__i = 0, G__29320__a = new Array(arguments.length -  4);
while (G__29320__i < G__29320__a.length) {G__29320__a[G__29320__i] = arguments[G__29320__i + 4]; ++G__29320__i;}
  more = new cljs.core.IndexedSeq(G__29320__a,0);
} 
return G__29316__delegate.call(this,f,arg1,arg2,arg3,more);};
G__29316.cljs$lang$maxFixedArity = 4;
G__29316.cljs$lang$applyTo = (function (arglist__29321){
var f = cljs.core.first(arglist__29321);
arglist__29321 = cljs.core.next(arglist__29321);
var arg1 = cljs.core.first(arglist__29321);
arglist__29321 = cljs.core.next(arglist__29321);
var arg2 = cljs.core.first(arglist__29321);
arglist__29321 = cljs.core.next(arglist__29321);
var arg3 = cljs.core.first(arglist__29321);
var more = cljs.core.rest(arglist__29321);
return G__29316__delegate(f,arg1,arg2,arg3,more);
});
G__29316.cljs$core$IFn$_invoke$arity$variadic = G__29316__delegate;
return G__29316;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__29322 = null;
if (arguments.length > 4) {
var G__29323__i = 0, G__29323__a = new Array(arguments.length -  4);
while (G__29323__i < G__29323__a.length) {G__29323__a[G__29323__i] = arguments[G__29323__i + 4]; ++G__29323__i;}
G__29322 = new cljs.core.IndexedSeq(G__29323__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__29322);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__29356 = null;
var G__29356__1 = (function (a){
var G__29340 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29340) : f.call(null,G__29340));
});
var G__29356__2 = (function (a,b){
var G__29341 = (((a == null))?x:a);
var G__29342 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29341,G__29342) : f.call(null,G__29341,G__29342));
});
var G__29356__3 = (function (a,b,c){
var G__29343 = (((a == null))?x:a);
var G__29344 = b;
var G__29345 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__29343,G__29344,G__29345) : f.call(null,G__29343,G__29344,G__29345));
});
var G__29356__4 = (function() { 
var G__29357__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__29357 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__29358__i = 0, G__29358__a = new Array(arguments.length -  3);
while (G__29358__i < G__29358__a.length) {G__29358__a[G__29358__i] = arguments[G__29358__i + 3]; ++G__29358__i;}
  ds = new cljs.core.IndexedSeq(G__29358__a,0);
} 
return G__29357__delegate.call(this,a,b,c,ds);};
G__29357.cljs$lang$maxFixedArity = 3;
G__29357.cljs$lang$applyTo = (function (arglist__29359){
var a = cljs.core.first(arglist__29359);
arglist__29359 = cljs.core.next(arglist__29359);
var b = cljs.core.first(arglist__29359);
arglist__29359 = cljs.core.next(arglist__29359);
var c = cljs.core.first(arglist__29359);
var ds = cljs.core.rest(arglist__29359);
return G__29357__delegate(a,b,c,ds);
});
G__29357.cljs$core$IFn$_invoke$arity$variadic = G__29357__delegate;
return G__29357;
})()
;
G__29356 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__29356__1.call(this,a);
case 2:
return G__29356__2.call(this,a,b);
case 3:
return G__29356__3.call(this,a,b,c);
default:
var G__29360 = null;
if (arguments.length > 3) {
var G__29361__i = 0, G__29361__a = new Array(arguments.length -  3);
while (G__29361__i < G__29361__a.length) {G__29361__a[G__29361__i] = arguments[G__29361__i + 3]; ++G__29361__i;}
G__29360 = new cljs.core.IndexedSeq(G__29361__a,0);
}
return G__29356__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__29360);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29356.cljs$lang$maxFixedArity = 3;
G__29356.cljs$lang$applyTo = G__29356__4.cljs$lang$applyTo;
G__29356.cljs$core$IFn$_invoke$arity$1 = G__29356__1;
G__29356.cljs$core$IFn$_invoke$arity$2 = G__29356__2;
G__29356.cljs$core$IFn$_invoke$arity$3 = G__29356__3;
G__29356.cljs$core$IFn$_invoke$arity$variadic = G__29356__4.cljs$core$IFn$_invoke$arity$variadic;
return G__29356;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__29362 = null;
var G__29362__2 = (function (a,b){
var G__29346 = (((a == null))?x:a);
var G__29347 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29346,G__29347) : f.call(null,G__29346,G__29347));
});
var G__29362__3 = (function (a,b,c){
var G__29348 = (((a == null))?x:a);
var G__29349 = (((b == null))?y:b);
var G__29350 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__29348,G__29349,G__29350) : f.call(null,G__29348,G__29349,G__29350));
});
var G__29362__4 = (function() { 
var G__29363__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__29363 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__29364__i = 0, G__29364__a = new Array(arguments.length -  3);
while (G__29364__i < G__29364__a.length) {G__29364__a[G__29364__i] = arguments[G__29364__i + 3]; ++G__29364__i;}
  ds = new cljs.core.IndexedSeq(G__29364__a,0);
} 
return G__29363__delegate.call(this,a,b,c,ds);};
G__29363.cljs$lang$maxFixedArity = 3;
G__29363.cljs$lang$applyTo = (function (arglist__29365){
var a = cljs.core.first(arglist__29365);
arglist__29365 = cljs.core.next(arglist__29365);
var b = cljs.core.first(arglist__29365);
arglist__29365 = cljs.core.next(arglist__29365);
var c = cljs.core.first(arglist__29365);
var ds = cljs.core.rest(arglist__29365);
return G__29363__delegate(a,b,c,ds);
});
G__29363.cljs$core$IFn$_invoke$arity$variadic = G__29363__delegate;
return G__29363;
})()
;
G__29362 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__29362__2.call(this,a,b);
case 3:
return G__29362__3.call(this,a,b,c);
default:
var G__29366 = null;
if (arguments.length > 3) {
var G__29367__i = 0, G__29367__a = new Array(arguments.length -  3);
while (G__29367__i < G__29367__a.length) {G__29367__a[G__29367__i] = arguments[G__29367__i + 3]; ++G__29367__i;}
G__29366 = new cljs.core.IndexedSeq(G__29367__a,0);
}
return G__29362__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__29366);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29362.cljs$lang$maxFixedArity = 3;
G__29362.cljs$lang$applyTo = G__29362__4.cljs$lang$applyTo;
G__29362.cljs$core$IFn$_invoke$arity$2 = G__29362__2;
G__29362.cljs$core$IFn$_invoke$arity$3 = G__29362__3;
G__29362.cljs$core$IFn$_invoke$arity$variadic = G__29362__4.cljs$core$IFn$_invoke$arity$variadic;
return G__29362;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__29368 = null;
var G__29368__2 = (function (a,b){
var G__29351 = (((a == null))?x:a);
var G__29352 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29351,G__29352) : f.call(null,G__29351,G__29352));
});
var G__29368__3 = (function (a,b,c){
var G__29353 = (((a == null))?x:a);
var G__29354 = (((b == null))?y:b);
var G__29355 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__29353,G__29354,G__29355) : f.call(null,G__29353,G__29354,G__29355));
});
var G__29368__4 = (function() { 
var G__29369__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__29369 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__29370__i = 0, G__29370__a = new Array(arguments.length -  3);
while (G__29370__i < G__29370__a.length) {G__29370__a[G__29370__i] = arguments[G__29370__i + 3]; ++G__29370__i;}
  ds = new cljs.core.IndexedSeq(G__29370__a,0);
} 
return G__29369__delegate.call(this,a,b,c,ds);};
G__29369.cljs$lang$maxFixedArity = 3;
G__29369.cljs$lang$applyTo = (function (arglist__29371){
var a = cljs.core.first(arglist__29371);
arglist__29371 = cljs.core.next(arglist__29371);
var b = cljs.core.first(arglist__29371);
arglist__29371 = cljs.core.next(arglist__29371);
var c = cljs.core.first(arglist__29371);
var ds = cljs.core.rest(arglist__29371);
return G__29369__delegate(a,b,c,ds);
});
G__29369.cljs$core$IFn$_invoke$arity$variadic = G__29369__delegate;
return G__29369;
})()
;
G__29368 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__29368__2.call(this,a,b);
case 3:
return G__29368__3.call(this,a,b,c);
default:
var G__29372 = null;
if (arguments.length > 3) {
var G__29373__i = 0, G__29373__a = new Array(arguments.length -  3);
while (G__29373__i < G__29373__a.length) {G__29373__a[G__29373__i] = arguments[G__29373__i + 3]; ++G__29373__i;}
G__29372 = new cljs.core.IndexedSeq(G__29373__a,0);
}
return G__29368__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__29372);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29368.cljs$lang$maxFixedArity = 3;
G__29368.cljs$lang$applyTo = G__29368__4.cljs$lang$applyTo;
G__29368.cljs$core$IFn$_invoke$arity$2 = G__29368__2;
G__29368.cljs$core$IFn$_invoke$arity$3 = G__29368__3;
G__29368.cljs$core$IFn$_invoke$arity$variadic = G__29368__4.cljs$core$IFn$_invoke$arity$variadic;
return G__29368;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__29404 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__29404) : cljs.core.volatile_BANG_.call(null,G__29404));
})();
return ((function (i){
return (function() {
var G__29434 = null;
var G__29434__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__29434__1 = (function (result){
var G__29405 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__29405) : rf.call(null,G__29405));
});
var G__29434__2 = (function (result,input){
var G__29406 = result;
var G__29407 = (function (){var G__29408 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__29409 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29408,G__29409) : f.call(null,G__29408,G__29409));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__29406,G__29407) : rf.call(null,G__29406,G__29407));
});
G__29434 = function(result,input){
switch(arguments.length){
case 0:
return G__29434__0.call(this);
case 1:
return G__29434__1.call(this,result);
case 2:
return G__29434__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29434.cljs$core$IFn$_invoke$arity$0 = G__29434__0;
G__29434.cljs$core$IFn$_invoke$arity$1 = G__29434__1;
G__29434.cljs$core$IFn$_invoke$arity$2 = G__29434__2;
return G__29434;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__17352__auto___29435 = size;
var i_29436 = (0);
while(true){
if((i_29436 < n__17352__auto___29435)){
cljs.core.chunk_append(b,(function (){var G__29430 = (idx + i_29436);
var G__29431 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_29436);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29430,G__29431) : f.call(null,G__29430,G__29431));
})());

var G__29437 = (i_29436 + (1));
i_29436 = G__29437;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__29432 = idx;
var G__29433 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29432,G__29433) : f.call(null,G__29432,G__29433));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__29456 = null;
var G__29456__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__29456__1 = (function (result){
var G__29450 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__29450) : rf.call(null,G__29450));
});
var G__29456__2 = (function (result,input){
var v = (function (){var G__29451 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29451) : f.call(null,G__29451));
})();
if((v == null)){
return result;
} else {
var G__29452 = result;
var G__29453 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__29452,G__29453) : rf.call(null,G__29452,G__29453));
}
});
G__29456 = function(result,input){
switch(arguments.length){
case 0:
return G__29456__0.call(this);
case 1:
return G__29456__1.call(this,result);
case 2:
return G__29456__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29456.cljs$core$IFn$_invoke$arity$0 = G__29456__0;
G__29456.cljs$core$IFn$_invoke$arity$1 = G__29456__1;
G__29456.cljs$core$IFn$_invoke$arity$2 = G__29456__2;
return G__29456;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__17352__auto___29457 = size;
var i_29458 = (0);
while(true){
if((i_29458 < n__17352__auto___29457)){
var x_29459 = (function (){var G__29454 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_29458);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29454) : f.call(null,G__29454));
})();
if((x_29459 == null)){
} else {
cljs.core.chunk_append(b,x_29459);
}

var G__29460 = (i_29458 + (1));
i_29458 = G__29460;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__29455 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29455) : f.call(null,G__29455));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__29461 = this$__$1;
return goog.getUid(G__29461);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__29462 = cljs.core.seq(self__.watches);
var chunk__29463 = null;
var count__29464 = (0);
var i__29465 = (0);
while(true){
if((i__29465 < count__29464)){
var vec__29466 = chunk__29463.cljs$core$IIndexed$_nth$arity$2(null,i__29465);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29466,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29466,(1),null);
var G__29467_29476 = key;
var G__29468_29477 = this$__$1;
var G__29469_29478 = oldval;
var G__29470_29479 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__29467_29476,G__29468_29477,G__29469_29478,G__29470_29479) : f.call(null,G__29467_29476,G__29468_29477,G__29469_29478,G__29470_29479));

var G__29480 = seq__29462;
var G__29481 = chunk__29463;
var G__29482 = count__29464;
var G__29483 = (i__29465 + (1));
seq__29462 = G__29480;
chunk__29463 = G__29481;
count__29464 = G__29482;
i__29465 = G__29483;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__29462);
if(temp__4126__auto__){
var seq__29462__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__29462__$1)){
var c__17252__auto__ = cljs.core.chunk_first(seq__29462__$1);
var G__29484 = cljs.core.chunk_rest(seq__29462__$1);
var G__29485 = c__17252__auto__;
var G__29486 = cljs.core.count(c__17252__auto__);
var G__29487 = (0);
seq__29462 = G__29484;
chunk__29463 = G__29485;
count__29464 = G__29486;
i__29465 = G__29487;
continue;
} else {
var vec__29471 = cljs.core.first(seq__29462__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29471,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29471,(1),null);
var G__29472_29488 = key;
var G__29473_29489 = this$__$1;
var G__29474_29490 = oldval;
var G__29475_29491 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__29472_29488,G__29473_29489,G__29474_29490,G__29475_29491) : f.call(null,G__29472_29488,G__29473_29489,G__29474_29490,G__29475_29491));

var G__29492 = cljs.core.next(seq__29462__$1);
var G__29493 = null;
var G__29494 = (0);
var G__29495 = (0);
seq__29462 = G__29492;
chunk__29463 = G__29493;
count__29464 = G__29494;
i__29465 = G__29495;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__17052__auto__,writer__17053__auto__,opt__17054__auto__){
return cljs.core._write(writer__17053__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__29499__delegate = function (x,p__29496){
var map__29498 = p__29496;
var map__29498__$1 = ((cljs.core.seq_QMARK_(map__29498))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__29498):map__29498);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29498__$1,cljs.core.constant$keyword$8);
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29498__$1,cljs.core.constant$keyword$3);
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__29499 = function (x,var_args){
var p__29496 = null;
if (arguments.length > 1) {
var G__29500__i = 0, G__29500__a = new Array(arguments.length -  1);
while (G__29500__i < G__29500__a.length) {G__29500__a[G__29500__i] = arguments[G__29500__i + 1]; ++G__29500__i;}
  p__29496 = new cljs.core.IndexedSeq(G__29500__a,0);
} 
return G__29499__delegate.call(this,x,p__29496);};
G__29499.cljs$lang$maxFixedArity = 1;
G__29499.cljs$lang$applyTo = (function (arglist__29501){
var x = cljs.core.first(arglist__29501);
var p__29496 = cljs.core.rest(arglist__29501);
return G__29499__delegate(x,p__29496);
});
G__29499.cljs$core$IFn$_invoke$arity$variadic = G__29499__delegate;
return G__29499;
})()
;
atom = function(x,var_args){
var p__29496 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__29502 = null;
if (arguments.length > 1) {
var G__29503__i = 0, G__29503__a = new Array(arguments.length -  1);
while (G__29503__i < G__29503__a.length) {G__29503__a[G__29503__i] = arguments[G__29503__i + 1]; ++G__29503__i;}
G__29502 = new cljs.core.IndexedSeq(G__29503__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__29502);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__29506 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__29506) : validate.call(null,G__29506));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__29507 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__29507) : cljs.core.pr_str.call(null,G__29507));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__29514 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29514) : f.call(null,G__29514));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__29515 = a.state;
var G__29516 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29515,G__29516) : f.call(null,G__29515,G__29516));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__29517 = a.state;
var G__29518 = x;
var G__29519 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__29517,G__29518,G__29519) : f.call(null,G__29517,G__29518,G__29519));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__29520__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__29520 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__29521__i = 0, G__29521__a = new Array(arguments.length -  4);
while (G__29521__i < G__29521__a.length) {G__29521__a[G__29521__i] = arguments[G__29521__i + 4]; ++G__29521__i;}
  more = new cljs.core.IndexedSeq(G__29521__a,0);
} 
return G__29520__delegate.call(this,a,f,x,y,more);};
G__29520.cljs$lang$maxFixedArity = 4;
G__29520.cljs$lang$applyTo = (function (arglist__29522){
var a = cljs.core.first(arglist__29522);
arglist__29522 = cljs.core.next(arglist__29522);
var f = cljs.core.first(arglist__29522);
arglist__29522 = cljs.core.next(arglist__29522);
var x = cljs.core.first(arglist__29522);
arglist__29522 = cljs.core.next(arglist__29522);
var y = cljs.core.first(arglist__29522);
var more = cljs.core.rest(arglist__29522);
return G__29520__delegate(a,f,x,y,more);
});
G__29520.cljs$core$IFn$_invoke$arity$variadic = G__29520__delegate;
return G__29520;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__29523 = null;
if (arguments.length > 4) {
var G__29524__i = 0, G__29524__a = new Array(arguments.length -  4);
while (G__29524__i < G__29524__a.length) {G__29524__a[G__29524__i] = arguments[G__29524__i + 4]; ++G__29524__i;}
G__29523 = new cljs.core.IndexedSeq(G__29524__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__29523);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__17052__auto__,writer__17053__auto__,opt__17054__auto__){
return cljs.core._write(writer__17053__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__29591 = null;
var G__29591__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__29591__1 = (function (result){
var G__29558 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__29558) : rf.call(null,G__29558));
});
var G__29591__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__29559 = i;
var G__29560 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29559,G__29560) : f.call(null,G__29559,G__29560));
})();
if((v == null)){
return result;
} else {
var G__29561 = result;
var G__29562 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__29561,G__29562) : rf.call(null,G__29561,G__29562));
}
});
G__29591 = function(result,input){
switch(arguments.length){
case 0:
return G__29591__0.call(this);
case 1:
return G__29591__1.call(this,result);
case 2:
return G__29591__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29591.cljs$core$IFn$_invoke$arity$0 = G__29591__0;
G__29591.cljs$core$IFn$_invoke$arity$1 = G__29591__1;
G__29591.cljs$core$IFn$_invoke$arity$2 = G__29591__2;
return G__29591;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__17352__auto___29592 = size;
var i_29593 = (0);
while(true){
if((i_29593 < n__17352__auto___29592)){
var x_29594 = (function (){var G__29587 = (idx + i_29593);
var G__29588 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_29593);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29587,G__29588) : f.call(null,G__29587,G__29588));
})();
if((x_29594 == null)){
} else {
cljs.core.chunk_append(b,x_29594);
}

var G__29595 = (i_29593 + (1));
i_29593 = G__29595;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__29589 = idx;
var G__29590 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29589,G__29590) : f.call(null,G__29589,G__29590));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__29809 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__29809) : p.call(null,G__29809));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__16453__auto__ = (function (){var G__29811 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__29811) : p.call(null,G__29811));
})();
if(cljs.core.truth_(and__16453__auto__)){
var G__29812 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__29812) : p.call(null,G__29812));
} else {
return and__16453__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__16453__auto__ = (function (){var G__29814 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__29814) : p.call(null,G__29814));
})();
if(cljs.core.truth_(and__16453__auto__)){
var and__16453__auto____$1 = (function (){var G__29816 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__29816) : p.call(null,G__29816));
})();
if(cljs.core.truth_(and__16453__auto____$1)){
var G__29817 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__29817) : p.call(null,G__29817));
} else {
return and__16453__auto____$1;
}
} else {
return and__16453__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__29986__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__29986 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__29987__i = 0, G__29987__a = new Array(arguments.length -  3);
while (G__29987__i < G__29987__a.length) {G__29987__a[G__29987__i] = arguments[G__29987__i + 3]; ++G__29987__i;}
  args = new cljs.core.IndexedSeq(G__29987__a,0);
} 
return G__29986__delegate.call(this,x,y,z,args);};
G__29986.cljs$lang$maxFixedArity = 3;
G__29986.cljs$lang$applyTo = (function (arglist__29988){
var x = cljs.core.first(arglist__29988);
arglist__29988 = cljs.core.next(arglist__29988);
var y = cljs.core.first(arglist__29988);
arglist__29988 = cljs.core.next(arglist__29988);
var z = cljs.core.first(arglist__29988);
var args = cljs.core.rest(arglist__29988);
return G__29986__delegate(x,y,z,args);
});
G__29986.cljs$core$IFn$_invoke$arity$variadic = G__29986__delegate;
return G__29986;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__29989 = null;
if (arguments.length > 3) {
var G__29990__i = 0, G__29990__a = new Array(arguments.length -  3);
while (G__29990__i < G__29990__a.length) {G__29990__a[G__29990__i] = arguments[G__29990__i + 3]; ++G__29990__i;}
G__29989 = new cljs.core.IndexedSeq(G__29990__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__29989);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__16453__auto__ = (function (){var G__29849 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__29849) : p1.call(null,G__29849));
})();
if(cljs.core.truth_(and__16453__auto__)){
var G__29850 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__29850) : p2.call(null,G__29850));
} else {
return and__16453__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__16453__auto__ = (function (){var G__29852 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__29852) : p1.call(null,G__29852));
})();
if(cljs.core.truth_(and__16453__auto__)){
var and__16453__auto____$1 = (function (){var G__29854 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__29854) : p1.call(null,G__29854));
})();
if(cljs.core.truth_(and__16453__auto____$1)){
var and__16453__auto____$2 = (function (){var G__29856 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__29856) : p2.call(null,G__29856));
})();
if(cljs.core.truth_(and__16453__auto____$2)){
var G__29857 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__29857) : p2.call(null,G__29857));
} else {
return and__16453__auto____$2;
}
} else {
return and__16453__auto____$1;
}
} else {
return and__16453__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__16453__auto__ = (function (){var G__29859 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__29859) : p1.call(null,G__29859));
})();
if(cljs.core.truth_(and__16453__auto__)){
var and__16453__auto____$1 = (function (){var G__29861 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__29861) : p1.call(null,G__29861));
})();
if(cljs.core.truth_(and__16453__auto____$1)){
var and__16453__auto____$2 = (function (){var G__29863 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__29863) : p1.call(null,G__29863));
})();
if(cljs.core.truth_(and__16453__auto____$2)){
var and__16453__auto____$3 = (function (){var G__29865 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__29865) : p2.call(null,G__29865));
})();
if(cljs.core.truth_(and__16453__auto____$3)){
var and__16453__auto____$4 = (function (){var G__29867 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__29867) : p2.call(null,G__29867));
})();
if(cljs.core.truth_(and__16453__auto____$4)){
var G__29868 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__29868) : p2.call(null,G__29868));
} else {
return and__16453__auto____$4;
}
} else {
return and__16453__auto____$3;
}
} else {
return and__16453__auto____$2;
}
} else {
return and__16453__auto____$1;
}
} else {
return and__16453__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__29991__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__29596_SHARP_){
var and__16453__auto__ = (function (){var G__29873 = p1__29596_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__29873) : p1.call(null,G__29873));
})();
if(cljs.core.truth_(and__16453__auto__)){
var G__29874 = p1__29596_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__29874) : p2.call(null,G__29874));
} else {
return and__16453__auto__;
}
}),args)));
};
var G__29991 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__29992__i = 0, G__29992__a = new Array(arguments.length -  3);
while (G__29992__i < G__29992__a.length) {G__29992__a[G__29992__i] = arguments[G__29992__i + 3]; ++G__29992__i;}
  args = new cljs.core.IndexedSeq(G__29992__a,0);
} 
return G__29991__delegate.call(this,x,y,z,args);};
G__29991.cljs$lang$maxFixedArity = 3;
G__29991.cljs$lang$applyTo = (function (arglist__29993){
var x = cljs.core.first(arglist__29993);
arglist__29993 = cljs.core.next(arglist__29993);
var y = cljs.core.first(arglist__29993);
arglist__29993 = cljs.core.next(arglist__29993);
var z = cljs.core.first(arglist__29993);
var args = cljs.core.rest(arglist__29993);
return G__29991__delegate(x,y,z,args);
});
G__29991.cljs$core$IFn$_invoke$arity$variadic = G__29991__delegate;
return G__29991;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__29994 = null;
if (arguments.length > 3) {
var G__29995__i = 0, G__29995__a = new Array(arguments.length -  3);
while (G__29995__i < G__29995__a.length) {G__29995__a[G__29995__i] = arguments[G__29995__i + 3]; ++G__29995__i;}
G__29994 = new cljs.core.IndexedSeq(G__29995__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__29994);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__16453__auto__ = (function (){var G__29920 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__29920) : p1.call(null,G__29920));
})();
if(cljs.core.truth_(and__16453__auto__)){
var and__16453__auto____$1 = (function (){var G__29922 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__29922) : p2.call(null,G__29922));
})();
if(cljs.core.truth_(and__16453__auto____$1)){
var G__29923 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__29923) : p3.call(null,G__29923));
} else {
return and__16453__auto____$1;
}
} else {
return and__16453__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__16453__auto__ = (function (){var G__29925 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__29925) : p1.call(null,G__29925));
})();
if(cljs.core.truth_(and__16453__auto__)){
var and__16453__auto____$1 = (function (){var G__29927 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__29927) : p2.call(null,G__29927));
})();
if(cljs.core.truth_(and__16453__auto____$1)){
var and__16453__auto____$2 = (function (){var G__29929 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__29929) : p3.call(null,G__29929));
})();
if(cljs.core.truth_(and__16453__auto____$2)){
var and__16453__auto____$3 = (function (){var G__29931 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__29931) : p1.call(null,G__29931));
})();
if(cljs.core.truth_(and__16453__auto____$3)){
var and__16453__auto____$4 = (function (){var G__29933 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__29933) : p2.call(null,G__29933));
})();
if(cljs.core.truth_(and__16453__auto____$4)){
var G__29934 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__29934) : p3.call(null,G__29934));
} else {
return and__16453__auto____$4;
}
} else {
return and__16453__auto____$3;
}
} else {
return and__16453__auto____$2;
}
} else {
return and__16453__auto____$1;
}
} else {
return and__16453__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__16453__auto__ = (function (){var G__29936 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__29936) : p1.call(null,G__29936));
})();
if(cljs.core.truth_(and__16453__auto__)){
var and__16453__auto____$1 = (function (){var G__29938 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__29938) : p2.call(null,G__29938));
})();
if(cljs.core.truth_(and__16453__auto____$1)){
var and__16453__auto____$2 = (function (){var G__29940 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__29940) : p3.call(null,G__29940));
})();
if(cljs.core.truth_(and__16453__auto____$2)){
var and__16453__auto____$3 = (function (){var G__29942 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__29942) : p1.call(null,G__29942));
})();
if(cljs.core.truth_(and__16453__auto____$3)){
var and__16453__auto____$4 = (function (){var G__29944 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__29944) : p2.call(null,G__29944));
})();
if(cljs.core.truth_(and__16453__auto____$4)){
var and__16453__auto____$5 = (function (){var G__29946 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__29946) : p3.call(null,G__29946));
})();
if(cljs.core.truth_(and__16453__auto____$5)){
var and__16453__auto____$6 = (function (){var G__29948 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__29948) : p1.call(null,G__29948));
})();
if(cljs.core.truth_(and__16453__auto____$6)){
var and__16453__auto____$7 = (function (){var G__29950 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__29950) : p2.call(null,G__29950));
})();
if(cljs.core.truth_(and__16453__auto____$7)){
var G__29951 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__29951) : p3.call(null,G__29951));
} else {
return and__16453__auto____$7;
}
} else {
return and__16453__auto____$6;
}
} else {
return and__16453__auto____$5;
}
} else {
return and__16453__auto____$4;
}
} else {
return and__16453__auto____$3;
}
} else {
return and__16453__auto____$2;
}
} else {
return and__16453__auto____$1;
}
} else {
return and__16453__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__29996__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__29597_SHARP_){
var and__16453__auto__ = (function (){var G__29958 = p1__29597_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__29958) : p1.call(null,G__29958));
})();
if(cljs.core.truth_(and__16453__auto__)){
var and__16453__auto____$1 = (function (){var G__29960 = p1__29597_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__29960) : p2.call(null,G__29960));
})();
if(cljs.core.truth_(and__16453__auto____$1)){
var G__29961 = p1__29597_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__29961) : p3.call(null,G__29961));
} else {
return and__16453__auto____$1;
}
} else {
return and__16453__auto__;
}
}),args)));
};
var G__29996 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__29997__i = 0, G__29997__a = new Array(arguments.length -  3);
while (G__29997__i < G__29997__a.length) {G__29997__a[G__29997__i] = arguments[G__29997__i + 3]; ++G__29997__i;}
  args = new cljs.core.IndexedSeq(G__29997__a,0);
} 
return G__29996__delegate.call(this,x,y,z,args);};
G__29996.cljs$lang$maxFixedArity = 3;
G__29996.cljs$lang$applyTo = (function (arglist__29998){
var x = cljs.core.first(arglist__29998);
arglist__29998 = cljs.core.next(arglist__29998);
var y = cljs.core.first(arglist__29998);
arglist__29998 = cljs.core.next(arglist__29998);
var z = cljs.core.first(arglist__29998);
var args = cljs.core.rest(arglist__29998);
return G__29996__delegate(x,y,z,args);
});
G__29996.cljs$core$IFn$_invoke$arity$variadic = G__29996__delegate;
return G__29996;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__29999 = null;
if (arguments.length > 3) {
var G__30000__i = 0, G__30000__a = new Array(arguments.length -  3);
while (G__30000__i < G__30000__a.length) {G__30000__a[G__30000__i] = arguments[G__30000__i + 3]; ++G__30000__i;}
G__29999 = new cljs.core.IndexedSeq(G__30000__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__29999);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__30001__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__29598_SHARP_){
var G__29977 = x;
return (p1__29598_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__29598_SHARP_.cljs$core$IFn$_invoke$arity$1(G__29977) : p1__29598_SHARP_.call(null,G__29977));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__29599_SHARP_){
var and__16453__auto__ = (function (){var G__29979 = x;
return (p1__29599_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__29599_SHARP_.cljs$core$IFn$_invoke$arity$1(G__29979) : p1__29599_SHARP_.call(null,G__29979));
})();
if(cljs.core.truth_(and__16453__auto__)){
var G__29980 = y;
return (p1__29599_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__29599_SHARP_.cljs$core$IFn$_invoke$arity$1(G__29980) : p1__29599_SHARP_.call(null,G__29980));
} else {
return and__16453__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__29600_SHARP_){
var and__16453__auto__ = (function (){var G__29982 = x;
return (p1__29600_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__29600_SHARP_.cljs$core$IFn$_invoke$arity$1(G__29982) : p1__29600_SHARP_.call(null,G__29982));
})();
if(cljs.core.truth_(and__16453__auto__)){
var and__16453__auto____$1 = (function (){var G__29984 = y;
return (p1__29600_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__29600_SHARP_.cljs$core$IFn$_invoke$arity$1(G__29984) : p1__29600_SHARP_.call(null,G__29984));
})();
if(cljs.core.truth_(and__16453__auto____$1)){
var G__29985 = z;
return (p1__29600_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__29600_SHARP_.cljs$core$IFn$_invoke$arity$1(G__29985) : p1__29600_SHARP_.call(null,G__29985));
} else {
return and__16453__auto____$1;
}
} else {
return and__16453__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__30002__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__29601_SHARP_){
return cljs.core.every_QMARK_(p1__29601_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__30002 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__30003__i = 0, G__30003__a = new Array(arguments.length -  3);
while (G__30003__i < G__30003__a.length) {G__30003__a[G__30003__i] = arguments[G__30003__i + 3]; ++G__30003__i;}
  args = new cljs.core.IndexedSeq(G__30003__a,0);
} 
return G__30002__delegate.call(this,x,y,z,args);};
G__30002.cljs$lang$maxFixedArity = 3;
G__30002.cljs$lang$applyTo = (function (arglist__30004){
var x = cljs.core.first(arglist__30004);
arglist__30004 = cljs.core.next(arglist__30004);
var y = cljs.core.first(arglist__30004);
arglist__30004 = cljs.core.next(arglist__30004);
var z = cljs.core.first(arglist__30004);
var args = cljs.core.rest(arglist__30004);
return G__30002__delegate(x,y,z,args);
});
G__30002.cljs$core$IFn$_invoke$arity$variadic = G__30002__delegate;
return G__30002;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__30005 = null;
if (arguments.length > 3) {
var G__30006__i = 0, G__30006__a = new Array(arguments.length -  3);
while (G__30006__i < G__30006__a.length) {G__30006__a[G__30006__i] = arguments[G__30006__i + 3]; ++G__30006__i;}
G__30005 = new cljs.core.IndexedSeq(G__30006__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__30005);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__30001 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__30007__i = 0, G__30007__a = new Array(arguments.length -  3);
while (G__30007__i < G__30007__a.length) {G__30007__a[G__30007__i] = arguments[G__30007__i + 3]; ++G__30007__i;}
  ps = new cljs.core.IndexedSeq(G__30007__a,0);
} 
return G__30001__delegate.call(this,p1,p2,p3,ps);};
G__30001.cljs$lang$maxFixedArity = 3;
G__30001.cljs$lang$applyTo = (function (arglist__30008){
var p1 = cljs.core.first(arglist__30008);
arglist__30008 = cljs.core.next(arglist__30008);
var p2 = cljs.core.first(arglist__30008);
arglist__30008 = cljs.core.next(arglist__30008);
var p3 = cljs.core.first(arglist__30008);
var ps = cljs.core.rest(arglist__30008);
return G__30001__delegate(p1,p2,p3,ps);
});
G__30001.cljs$core$IFn$_invoke$arity$variadic = G__30001__delegate;
return G__30001;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__30009 = null;
if (arguments.length > 3) {
var G__30010__i = 0, G__30010__a = new Array(arguments.length -  3);
while (G__30010__i < G__30010__a.length) {G__30010__a[G__30010__i] = arguments[G__30010__i + 3]; ++G__30010__i;}
G__30009 = new cljs.core.IndexedSeq(G__30010__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__30009);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__30216 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__30216) : p.call(null,G__30216));
});
var sp1__2 = (function (x,y){
var or__16465__auto__ = (function (){var G__30218 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__30218) : p.call(null,G__30218));
})();
if(cljs.core.truth_(or__16465__auto__)){
return or__16465__auto__;
} else {
var G__30219 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__30219) : p.call(null,G__30219));
}
});
var sp1__3 = (function (x,y,z){
var or__16465__auto__ = (function (){var G__30221 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__30221) : p.call(null,G__30221));
})();
if(cljs.core.truth_(or__16465__auto__)){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (function (){var G__30223 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__30223) : p.call(null,G__30223));
})();
if(cljs.core.truth_(or__16465__auto____$1)){
return or__16465__auto____$1;
} else {
var G__30224 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__30224) : p.call(null,G__30224));
}
}
});
var sp1__4 = (function() { 
var G__30385__delegate = function (x,y,z,args){
var or__16465__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__16465__auto__)){
return or__16465__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__30385 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__30386__i = 0, G__30386__a = new Array(arguments.length -  3);
while (G__30386__i < G__30386__a.length) {G__30386__a[G__30386__i] = arguments[G__30386__i + 3]; ++G__30386__i;}
  args = new cljs.core.IndexedSeq(G__30386__a,0);
} 
return G__30385__delegate.call(this,x,y,z,args);};
G__30385.cljs$lang$maxFixedArity = 3;
G__30385.cljs$lang$applyTo = (function (arglist__30387){
var x = cljs.core.first(arglist__30387);
arglist__30387 = cljs.core.next(arglist__30387);
var y = cljs.core.first(arglist__30387);
arglist__30387 = cljs.core.next(arglist__30387);
var z = cljs.core.first(arglist__30387);
var args = cljs.core.rest(arglist__30387);
return G__30385__delegate(x,y,z,args);
});
G__30385.cljs$core$IFn$_invoke$arity$variadic = G__30385__delegate;
return G__30385;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__30388 = null;
if (arguments.length > 3) {
var G__30389__i = 0, G__30389__a = new Array(arguments.length -  3);
while (G__30389__i < G__30389__a.length) {G__30389__a[G__30389__i] = arguments[G__30389__i + 3]; ++G__30389__i;}
G__30388 = new cljs.core.IndexedSeq(G__30389__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__30388);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__16465__auto__ = (function (){var G__30256 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30256) : p1.call(null,G__30256));
})();
if(cljs.core.truth_(or__16465__auto__)){
return or__16465__auto__;
} else {
var G__30257 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30257) : p2.call(null,G__30257));
}
});
var sp2__2 = (function (x,y){
var or__16465__auto__ = (function (){var G__30259 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30259) : p1.call(null,G__30259));
})();
if(cljs.core.truth_(or__16465__auto__)){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (function (){var G__30261 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30261) : p1.call(null,G__30261));
})();
if(cljs.core.truth_(or__16465__auto____$1)){
return or__16465__auto____$1;
} else {
var or__16465__auto____$2 = (function (){var G__30263 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30263) : p2.call(null,G__30263));
})();
if(cljs.core.truth_(or__16465__auto____$2)){
return or__16465__auto____$2;
} else {
var G__30264 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30264) : p2.call(null,G__30264));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__16465__auto__ = (function (){var G__30266 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30266) : p1.call(null,G__30266));
})();
if(cljs.core.truth_(or__16465__auto__)){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (function (){var G__30268 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30268) : p1.call(null,G__30268));
})();
if(cljs.core.truth_(or__16465__auto____$1)){
return or__16465__auto____$1;
} else {
var or__16465__auto____$2 = (function (){var G__30270 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30270) : p1.call(null,G__30270));
})();
if(cljs.core.truth_(or__16465__auto____$2)){
return or__16465__auto____$2;
} else {
var or__16465__auto____$3 = (function (){var G__30272 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30272) : p2.call(null,G__30272));
})();
if(cljs.core.truth_(or__16465__auto____$3)){
return or__16465__auto____$3;
} else {
var or__16465__auto____$4 = (function (){var G__30274 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30274) : p2.call(null,G__30274));
})();
if(cljs.core.truth_(or__16465__auto____$4)){
return or__16465__auto____$4;
} else {
var G__30275 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30275) : p2.call(null,G__30275));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__30390__delegate = function (x,y,z,args){
var or__16465__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__16465__auto__)){
return or__16465__auto__;
} else {
return cljs.core.some(((function (or__16465__auto__){
return (function (p1__30011_SHARP_){
var or__16465__auto____$1 = (function (){var G__30277 = p1__30011_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30277) : p1.call(null,G__30277));
})();
if(cljs.core.truth_(or__16465__auto____$1)){
return or__16465__auto____$1;
} else {
var G__30278 = p1__30011_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30278) : p2.call(null,G__30278));
}
});})(or__16465__auto__))
,args);
}
};
var G__30390 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__30391__i = 0, G__30391__a = new Array(arguments.length -  3);
while (G__30391__i < G__30391__a.length) {G__30391__a[G__30391__i] = arguments[G__30391__i + 3]; ++G__30391__i;}
  args = new cljs.core.IndexedSeq(G__30391__a,0);
} 
return G__30390__delegate.call(this,x,y,z,args);};
G__30390.cljs$lang$maxFixedArity = 3;
G__30390.cljs$lang$applyTo = (function (arglist__30392){
var x = cljs.core.first(arglist__30392);
arglist__30392 = cljs.core.next(arglist__30392);
var y = cljs.core.first(arglist__30392);
arglist__30392 = cljs.core.next(arglist__30392);
var z = cljs.core.first(arglist__30392);
var args = cljs.core.rest(arglist__30392);
return G__30390__delegate(x,y,z,args);
});
G__30390.cljs$core$IFn$_invoke$arity$variadic = G__30390__delegate;
return G__30390;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__30393 = null;
if (arguments.length > 3) {
var G__30394__i = 0, G__30394__a = new Array(arguments.length -  3);
while (G__30394__i < G__30394__a.length) {G__30394__a[G__30394__i] = arguments[G__30394__i + 3]; ++G__30394__i;}
G__30393 = new cljs.core.IndexedSeq(G__30394__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__30393);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__16465__auto__ = (function (){var G__30324 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30324) : p1.call(null,G__30324));
})();
if(cljs.core.truth_(or__16465__auto__)){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (function (){var G__30326 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30326) : p2.call(null,G__30326));
})();
if(cljs.core.truth_(or__16465__auto____$1)){
return or__16465__auto____$1;
} else {
var G__30327 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__30327) : p3.call(null,G__30327));
}
}
});
var sp3__2 = (function (x,y){
var or__16465__auto__ = (function (){var G__30329 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30329) : p1.call(null,G__30329));
})();
if(cljs.core.truth_(or__16465__auto__)){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (function (){var G__30331 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30331) : p2.call(null,G__30331));
})();
if(cljs.core.truth_(or__16465__auto____$1)){
return or__16465__auto____$1;
} else {
var or__16465__auto____$2 = (function (){var G__30333 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__30333) : p3.call(null,G__30333));
})();
if(cljs.core.truth_(or__16465__auto____$2)){
return or__16465__auto____$2;
} else {
var or__16465__auto____$3 = (function (){var G__30335 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30335) : p1.call(null,G__30335));
})();
if(cljs.core.truth_(or__16465__auto____$3)){
return or__16465__auto____$3;
} else {
var or__16465__auto____$4 = (function (){var G__30337 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30337) : p2.call(null,G__30337));
})();
if(cljs.core.truth_(or__16465__auto____$4)){
return or__16465__auto____$4;
} else {
var G__30338 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__30338) : p3.call(null,G__30338));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__16465__auto__ = (function (){var G__30340 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30340) : p1.call(null,G__30340));
})();
if(cljs.core.truth_(or__16465__auto__)){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (function (){var G__30342 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30342) : p2.call(null,G__30342));
})();
if(cljs.core.truth_(or__16465__auto____$1)){
return or__16465__auto____$1;
} else {
var or__16465__auto____$2 = (function (){var G__30344 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__30344) : p3.call(null,G__30344));
})();
if(cljs.core.truth_(or__16465__auto____$2)){
return or__16465__auto____$2;
} else {
var or__16465__auto____$3 = (function (){var G__30346 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30346) : p1.call(null,G__30346));
})();
if(cljs.core.truth_(or__16465__auto____$3)){
return or__16465__auto____$3;
} else {
var or__16465__auto____$4 = (function (){var G__30348 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30348) : p2.call(null,G__30348));
})();
if(cljs.core.truth_(or__16465__auto____$4)){
return or__16465__auto____$4;
} else {
var or__16465__auto____$5 = (function (){var G__30350 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__30350) : p3.call(null,G__30350));
})();
if(cljs.core.truth_(or__16465__auto____$5)){
return or__16465__auto____$5;
} else {
var or__16465__auto____$6 = (function (){var G__30352 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30352) : p1.call(null,G__30352));
})();
if(cljs.core.truth_(or__16465__auto____$6)){
return or__16465__auto____$6;
} else {
var or__16465__auto____$7 = (function (){var G__30354 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30354) : p2.call(null,G__30354));
})();
if(cljs.core.truth_(or__16465__auto____$7)){
return or__16465__auto____$7;
} else {
var G__30355 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__30355) : p3.call(null,G__30355));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__30395__delegate = function (x,y,z,args){
var or__16465__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__16465__auto__)){
return or__16465__auto__;
} else {
return cljs.core.some(((function (or__16465__auto__){
return (function (p1__30012_SHARP_){
var or__16465__auto____$1 = (function (){var G__30357 = p1__30012_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30357) : p1.call(null,G__30357));
})();
if(cljs.core.truth_(or__16465__auto____$1)){
return or__16465__auto____$1;
} else {
var or__16465__auto____$2 = (function (){var G__30359 = p1__30012_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30359) : p2.call(null,G__30359));
})();
if(cljs.core.truth_(or__16465__auto____$2)){
return or__16465__auto____$2;
} else {
var G__30360 = p1__30012_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__30360) : p3.call(null,G__30360));
}
}
});})(or__16465__auto__))
,args);
}
};
var G__30395 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__30396__i = 0, G__30396__a = new Array(arguments.length -  3);
while (G__30396__i < G__30396__a.length) {G__30396__a[G__30396__i] = arguments[G__30396__i + 3]; ++G__30396__i;}
  args = new cljs.core.IndexedSeq(G__30396__a,0);
} 
return G__30395__delegate.call(this,x,y,z,args);};
G__30395.cljs$lang$maxFixedArity = 3;
G__30395.cljs$lang$applyTo = (function (arglist__30397){
var x = cljs.core.first(arglist__30397);
arglist__30397 = cljs.core.next(arglist__30397);
var y = cljs.core.first(arglist__30397);
arglist__30397 = cljs.core.next(arglist__30397);
var z = cljs.core.first(arglist__30397);
var args = cljs.core.rest(arglist__30397);
return G__30395__delegate(x,y,z,args);
});
G__30395.cljs$core$IFn$_invoke$arity$variadic = G__30395__delegate;
return G__30395;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__30398 = null;
if (arguments.length > 3) {
var G__30399__i = 0, G__30399__a = new Array(arguments.length -  3);
while (G__30399__i < G__30399__a.length) {G__30399__a[G__30399__i] = arguments[G__30399__i + 3]; ++G__30399__i;}
G__30398 = new cljs.core.IndexedSeq(G__30399__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__30398);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__30400__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__30013_SHARP_){
var G__30376 = x;
return (p1__30013_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__30013_SHARP_.cljs$core$IFn$_invoke$arity$1(G__30376) : p1__30013_SHARP_.call(null,G__30376));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__30014_SHARP_){
var or__16465__auto__ = (function (){var G__30378 = x;
return (p1__30014_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__30014_SHARP_.cljs$core$IFn$_invoke$arity$1(G__30378) : p1__30014_SHARP_.call(null,G__30378));
})();
if(cljs.core.truth_(or__16465__auto__)){
return or__16465__auto__;
} else {
var G__30379 = y;
return (p1__30014_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__30014_SHARP_.cljs$core$IFn$_invoke$arity$1(G__30379) : p1__30014_SHARP_.call(null,G__30379));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__30015_SHARP_){
var or__16465__auto__ = (function (){var G__30381 = x;
return (p1__30015_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__30015_SHARP_.cljs$core$IFn$_invoke$arity$1(G__30381) : p1__30015_SHARP_.call(null,G__30381));
})();
if(cljs.core.truth_(or__16465__auto__)){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (function (){var G__30383 = y;
return (p1__30015_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__30015_SHARP_.cljs$core$IFn$_invoke$arity$1(G__30383) : p1__30015_SHARP_.call(null,G__30383));
})();
if(cljs.core.truth_(or__16465__auto____$1)){
return or__16465__auto____$1;
} else {
var G__30384 = z;
return (p1__30015_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__30015_SHARP_.cljs$core$IFn$_invoke$arity$1(G__30384) : p1__30015_SHARP_.call(null,G__30384));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__30401__delegate = function (x,y,z,args){
var or__16465__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__16465__auto__)){
return or__16465__auto__;
} else {
return cljs.core.some(((function (or__16465__auto__,ps__$1){
return (function (p1__30016_SHARP_){
return cljs.core.some(p1__30016_SHARP_,args);
});})(or__16465__auto__,ps__$1))
,ps__$1);
}
};
var G__30401 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__30402__i = 0, G__30402__a = new Array(arguments.length -  3);
while (G__30402__i < G__30402__a.length) {G__30402__a[G__30402__i] = arguments[G__30402__i + 3]; ++G__30402__i;}
  args = new cljs.core.IndexedSeq(G__30402__a,0);
} 
return G__30401__delegate.call(this,x,y,z,args);};
G__30401.cljs$lang$maxFixedArity = 3;
G__30401.cljs$lang$applyTo = (function (arglist__30403){
var x = cljs.core.first(arglist__30403);
arglist__30403 = cljs.core.next(arglist__30403);
var y = cljs.core.first(arglist__30403);
arglist__30403 = cljs.core.next(arglist__30403);
var z = cljs.core.first(arglist__30403);
var args = cljs.core.rest(arglist__30403);
return G__30401__delegate(x,y,z,args);
});
G__30401.cljs$core$IFn$_invoke$arity$variadic = G__30401__delegate;
return G__30401;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__30404 = null;
if (arguments.length > 3) {
var G__30405__i = 0, G__30405__a = new Array(arguments.length -  3);
while (G__30405__i < G__30405__a.length) {G__30405__a[G__30405__i] = arguments[G__30405__i + 3]; ++G__30405__i;}
G__30404 = new cljs.core.IndexedSeq(G__30405__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__30404);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__30400 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__30406__i = 0, G__30406__a = new Array(arguments.length -  3);
while (G__30406__i < G__30406__a.length) {G__30406__a[G__30406__i] = arguments[G__30406__i + 3]; ++G__30406__i;}
  ps = new cljs.core.IndexedSeq(G__30406__a,0);
} 
return G__30400__delegate.call(this,p1,p2,p3,ps);};
G__30400.cljs$lang$maxFixedArity = 3;
G__30400.cljs$lang$applyTo = (function (arglist__30407){
var p1 = cljs.core.first(arglist__30407);
arglist__30407 = cljs.core.next(arglist__30407);
var p2 = cljs.core.first(arglist__30407);
arglist__30407 = cljs.core.next(arglist__30407);
var p3 = cljs.core.first(arglist__30407);
var ps = cljs.core.rest(arglist__30407);
return G__30400__delegate(p1,p2,p3,ps);
});
G__30400.cljs$core$IFn$_invoke$arity$variadic = G__30400__delegate;
return G__30400;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__30408 = null;
if (arguments.length > 3) {
var G__30409__i = 0, G__30409__a = new Array(arguments.length -  3);
while (G__30409__i < G__30409__a.length) {G__30409__a[G__30409__i] = arguments[G__30409__i + 3]; ++G__30409__i;}
G__30408 = new cljs.core.IndexedSeq(G__30409__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__30408);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__30464 = null;
var G__30464__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__30464__1 = (function (result){
var G__30450 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__30450) : rf.call(null,G__30450));
});
var G__30464__2 = (function (result,input){
var G__30451 = result;
var G__30452 = (function (){var G__30453 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__30453) : f.call(null,G__30453));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__30451,G__30452) : rf.call(null,G__30451,G__30452));
});
var G__30464__3 = (function() { 
var G__30465__delegate = function (result,input,inputs){
var G__30454 = result;
var G__30455 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__30454,G__30455) : rf.call(null,G__30454,G__30455));
};
var G__30465 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__30466__i = 0, G__30466__a = new Array(arguments.length -  2);
while (G__30466__i < G__30466__a.length) {G__30466__a[G__30466__i] = arguments[G__30466__i + 2]; ++G__30466__i;}
  inputs = new cljs.core.IndexedSeq(G__30466__a,0);
} 
return G__30465__delegate.call(this,result,input,inputs);};
G__30465.cljs$lang$maxFixedArity = 2;
G__30465.cljs$lang$applyTo = (function (arglist__30467){
var result = cljs.core.first(arglist__30467);
arglist__30467 = cljs.core.next(arglist__30467);
var input = cljs.core.first(arglist__30467);
var inputs = cljs.core.rest(arglist__30467);
return G__30465__delegate(result,input,inputs);
});
G__30465.cljs$core$IFn$_invoke$arity$variadic = G__30465__delegate;
return G__30465;
})()
;
G__30464 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__30464__0.call(this);
case 1:
return G__30464__1.call(this,result);
case 2:
return G__30464__2.call(this,result,input);
default:
var G__30468 = null;
if (arguments.length > 2) {
var G__30469__i = 0, G__30469__a = new Array(arguments.length -  2);
while (G__30469__i < G__30469__a.length) {G__30469__a[G__30469__i] = arguments[G__30469__i + 2]; ++G__30469__i;}
G__30468 = new cljs.core.IndexedSeq(G__30469__a,0);
}
return G__30464__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__30468);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30464.cljs$lang$maxFixedArity = 2;
G__30464.cljs$lang$applyTo = G__30464__3.cljs$lang$applyTo;
G__30464.cljs$core$IFn$_invoke$arity$0 = G__30464__0;
G__30464.cljs$core$IFn$_invoke$arity$1 = G__30464__1;
G__30464.cljs$core$IFn$_invoke$arity$2 = G__30464__2;
G__30464.cljs$core$IFn$_invoke$arity$variadic = G__30464__3.cljs$core$IFn$_invoke$arity$variadic;
return G__30464;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__17352__auto___30470 = size;
var i_30471 = (0);
while(true){
if((i_30471 < n__17352__auto___30470)){
cljs.core.chunk_append(b,(function (){var G__30456 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_30471);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__30456) : f.call(null,G__30456));
})());

var G__30472 = (i_30471 + (1));
i_30471 = G__30472;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__30457 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__30457) : f.call(null,G__30457));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__30458 = cljs.core.first(s1);
var G__30459 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30458,G__30459) : f.call(null,G__30458,G__30459));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__30460 = cljs.core.first(s1);
var G__30461 = cljs.core.first(s2);
var G__30462 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__30460,G__30461,G__30462) : f.call(null,G__30460,G__30461,G__30462));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__30473__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__30410_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__30410_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__30473 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__30474__i = 0, G__30474__a = new Array(arguments.length -  4);
while (G__30474__i < G__30474__a.length) {G__30474__a[G__30474__i] = arguments[G__30474__i + 4]; ++G__30474__i;}
  colls = new cljs.core.IndexedSeq(G__30474__a,0);
} 
return G__30473__delegate.call(this,f,c1,c2,c3,colls);};
G__30473.cljs$lang$maxFixedArity = 4;
G__30473.cljs$lang$applyTo = (function (arglist__30475){
var f = cljs.core.first(arglist__30475);
arglist__30475 = cljs.core.next(arglist__30475);
var c1 = cljs.core.first(arglist__30475);
arglist__30475 = cljs.core.next(arglist__30475);
var c2 = cljs.core.first(arglist__30475);
arglist__30475 = cljs.core.next(arglist__30475);
var c3 = cljs.core.first(arglist__30475);
var colls = cljs.core.rest(arglist__30475);
return G__30473__delegate(f,c1,c2,c3,colls);
});
G__30473.cljs$core$IFn$_invoke$arity$variadic = G__30473__delegate;
return G__30473;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__30476 = null;
if (arguments.length > 4) {
var G__30477__i = 0, G__30477__a = new Array(arguments.length -  4);
while (G__30477__i < G__30477__a.length) {G__30477__a[G__30477__i] = arguments[G__30477__i + 4]; ++G__30477__i;}
G__30476 = new cljs.core.IndexedSeq(G__30477__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__30476);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__30486 = null;
var G__30486__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__30486__1 = (function (result){
var G__30483 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__30483) : rf.call(null,G__30483));
});
var G__30486__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__30484 = result;
var G__30485 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__30484,G__30485) : rf.call(null,G__30484,G__30485));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__30486 = function(result,input){
switch(arguments.length){
case 0:
return G__30486__0.call(this);
case 1:
return G__30486__1.call(this,result);
case 2:
return G__30486__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30486.cljs$core$IFn$_invoke$arity$0 = G__30486__0;
G__30486.cljs$core$IFn$_invoke$arity$1 = G__30486__1;
G__30486.cljs$core$IFn$_invoke$arity$2 = G__30486__2;
return G__30486;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__30493 = null;
var G__30493__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__30493__1 = (function (result){
var G__30490 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__30490) : rf.call(null,G__30490));
});
var G__30493__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__30491 = result;
var G__30492 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__30491,G__30492) : rf.call(null,G__30491,G__30492));
}
});
G__30493 = function(result,input){
switch(arguments.length){
case 0:
return G__30493__0.call(this);
case 1:
return G__30493__1.call(this,result);
case 2:
return G__30493__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30493.cljs$core$IFn$_invoke$arity$0 = G__30493__0;
G__30493.cljs$core$IFn$_invoke$arity$1 = G__30493__1;
G__30493.cljs$core$IFn$_invoke$arity$2 = G__30493__2;
return G__30493;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__30494 = (n__$1 - (1));
var G__30495 = cljs.core.rest(s);
n__$1 = G__30494;
coll__$1 = G__30495;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__30498 = cljs.core.next(s);
var G__30499 = cljs.core.next(lead);
s = G__30498;
lead = G__30499;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__30512 = null;
var G__30512__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__30512__1 = (function (result){
var G__30506 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__30506) : rf.call(null,G__30506));
});
var G__30512__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__16453__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__16453__auto__)){
var G__30507 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__30507) : pred.call(null,G__30507));
} else {
return and__16453__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__30508 = result;
var G__30509 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__30508,G__30509) : rf.call(null,G__30508,G__30509));
}
});
G__30512 = function(result,input){
switch(arguments.length){
case 0:
return G__30512__0.call(this);
case 1:
return G__30512__1.call(this,result);
case 2:
return G__30512__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30512.cljs$core$IFn$_invoke$arity$0 = G__30512__0;
G__30512.cljs$core$IFn$_invoke$arity$1 = G__30512__1;
G__30512.cljs$core$IFn$_invoke$arity$2 = G__30512__2;
return G__30512;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__16453__auto__ = s;
if(and__16453__auto__){
var G__30511 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__30511) : pred__$1.call(null,G__30511));
} else {
return and__16453__auto__;
}
})())){
var G__30513 = pred__$1;
var G__30514 = cljs.core.rest(s);
pred__$1 = G__30513;
coll__$1 = G__30514;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__30523 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__30523) : f.call(null,G__30523));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__30526__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__30526 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__30527__i = 0, G__30527__a = new Array(arguments.length -  2);
while (G__30527__i < G__30527__a.length) {G__30527__a[G__30527__i] = arguments[G__30527__i + 2]; ++G__30527__i;}
  colls = new cljs.core.IndexedSeq(G__30527__a,0);
} 
return G__30526__delegate.call(this,c1,c2,colls);};
G__30526.cljs$lang$maxFixedArity = 2;
G__30526.cljs$lang$applyTo = (function (arglist__30528){
var c1 = cljs.core.first(arglist__30528);
arglist__30528 = cljs.core.next(arglist__30528);
var c2 = cljs.core.first(arglist__30528);
var colls = cljs.core.rest(arglist__30528);
return G__30526__delegate(c1,c2,colls);
});
G__30526.cljs$core$IFn$_invoke$arity$variadic = G__30526__delegate;
return G__30526;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__30529 = null;
if (arguments.length > 2) {
var G__30530__i = 0, G__30530__a = new Array(arguments.length -  2);
while (G__30530__i < G__30530__a.length) {G__30530__a[G__30530__i] = arguments[G__30530__i + 2]; ++G__30530__i;}
G__30529 = new cljs.core.IndexedSeq(G__30530__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__30529);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__30545 = null;
var G__30545__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__30545__1 = (function (result){
var G__30538 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__30538) : rf.call(null,G__30538));
});
var G__30545__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__30539 = result;
var G__30540 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__30539,G__30540) : rf.call(null,G__30539,G__30540));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__30541 = sepr;
var G__30542 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__30541,G__30542) : rf.call(null,G__30541,G__30542));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__30543 = result;
var G__30544 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__30543,G__30544) : rf.call(null,G__30543,G__30544));
}
});
G__30545 = function(result,input){
switch(arguments.length){
case 0:
return G__30545__0.call(this);
case 1:
return G__30545__1.call(this,result);
case 2:
return G__30545__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30545.cljs$core$IFn$_invoke$arity$0 = G__30545__0;
G__30545.cljs$core$IFn$_invoke$arity$1 = G__30545__1;
G__30545.cljs$core$IFn$_invoke$arity$2 = G__30545__2;
return G__30545;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__30554__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__30554 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__30555__i = 0, G__30555__a = new Array(arguments.length -  1);
while (G__30555__i < G__30555__a.length) {G__30555__a[G__30555__i] = arguments[G__30555__i + 1]; ++G__30555__i;}
  colls = new cljs.core.IndexedSeq(G__30555__a,0);
} 
return G__30554__delegate.call(this,f,colls);};
G__30554.cljs$lang$maxFixedArity = 1;
G__30554.cljs$lang$applyTo = (function (arglist__30556){
var f = cljs.core.first(arglist__30556);
var colls = cljs.core.rest(arglist__30556);
return G__30554__delegate(f,colls);
});
G__30554.cljs$core$IFn$_invoke$arity$variadic = G__30554__delegate;
return G__30554;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__30557 = null;
if (arguments.length > 1) {
var G__30558__i = 0, G__30558__a = new Array(arguments.length -  1);
while (G__30558__i < G__30558__a.length) {G__30558__a[G__30558__i] = arguments[G__30558__i + 1]; ++G__30558__i;}
G__30557 = new cljs.core.IndexedSeq(G__30558__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__30557);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__30577 = null;
var G__30577__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__30577__1 = (function (result){
var G__30571 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__30571) : rf.call(null,G__30571));
});
var G__30577__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__30572 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__30572) : pred.call(null,G__30572));
})())){
var G__30573 = result;
var G__30574 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__30573,G__30574) : rf.call(null,G__30573,G__30574));
} else {
return result;
}
});
G__30577 = function(result,input){
switch(arguments.length){
case 0:
return G__30577__0.call(this);
case 1:
return G__30577__1.call(this,result);
case 2:
return G__30577__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30577.cljs$core$IFn$_invoke$arity$0 = G__30577__0;
G__30577.cljs$core$IFn$_invoke$arity$1 = G__30577__1;
G__30577.cljs$core$IFn$_invoke$arity$2 = G__30577__2;
return G__30577;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__17352__auto___30578 = size;
var i_30579 = (0);
while(true){
if((i_30579 < n__17352__auto___30578)){
if(cljs.core.truth_((function (){var G__30575 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_30579);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__30575) : pred.call(null,G__30575));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_30579));
} else {
}

var G__30580 = (i_30579 + (1));
i_30579 = G__30580;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__30576 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__30576) : pred.call(null,G__30576));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__30587 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__30587) : branch_QMARK_.call(null,G__30587));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__30588 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__30588) : children.call(null,G__30588));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__30589_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__30589_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__30592 = to;
if(G__30592){
var bit__17139__auto__ = (G__30592.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__17139__auto__) || (G__30592.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__30593 = to;
if(G__30593){
var bit__17139__auto__ = (G__30593.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__17139__auto__) || (G__30593.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__30595 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__30595) : f.call(null,G__30595));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__30596__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__30596 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__30597__i = 0, G__30597__a = new Array(arguments.length -  4);
while (G__30597__i < G__30597__a.length) {G__30597__a[G__30597__i] = arguments[G__30597__i + 4]; ++G__30597__i;}
  colls = new cljs.core.IndexedSeq(G__30597__a,0);
} 
return G__30596__delegate.call(this,f,c1,c2,c3,colls);};
G__30596.cljs$lang$maxFixedArity = 4;
G__30596.cljs$lang$applyTo = (function (arglist__30598){
var f = cljs.core.first(arglist__30598);
arglist__30598 = cljs.core.next(arglist__30598);
var c1 = cljs.core.first(arglist__30598);
arglist__30598 = cljs.core.next(arglist__30598);
var c2 = cljs.core.first(arglist__30598);
arglist__30598 = cljs.core.next(arglist__30598);
var c3 = cljs.core.first(arglist__30598);
var colls = cljs.core.rest(arglist__30598);
return G__30596__delegate(f,c1,c2,c3,colls);
});
G__30596.cljs$core$IFn$_invoke$arity$variadic = G__30596__delegate;
return G__30596;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__30599 = null;
if (arguments.length > 4) {
var G__30600__i = 0, G__30600__a = new Array(arguments.length -  4);
while (G__30600__i < G__30600__a.length) {G__30600__a[G__30600__i] = arguments[G__30600__i + 4]; ++G__30600__i;}
G__30599 = new cljs.core.IndexedSeq(G__30600__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__30599);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__30602 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__30602) : pred.call(null,G__30602));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__30617 = m__$1;
if(G__30617){
var bit__17146__auto__ = (G__30617.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__17146__auto__) || (G__30617.cljs$core$ILookup$)){
return true;
} else {
if((!G__30617.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__30617);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__30617);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__30618 = sentinel;
var G__30619 = m__$2;
var G__30620 = cljs.core.next(ks__$1);
sentinel = G__30618;
m__$1 = G__30619;
ks__$1 = G__30620;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__30621,v){
var vec__30626 = p__30621;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30626,(0),null);
var ks = cljs.core.nthnext(vec__30626,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__30627,f){
var vec__30665 = p__30627;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30665,(0),null);
var ks = cljs.core.nthnext(vec__30665,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__30666 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__30666) : f.call(null,G__30666));
})());
}
});
var update_in__4 = (function (m,p__30628,f,a){
var vec__30667 = p__30628;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30667,(0),null);
var ks = cljs.core.nthnext(vec__30667,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__30668 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__30669 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30668,G__30669) : f.call(null,G__30668,G__30669));
})());
}
});
var update_in__5 = (function (m,p__30629,f,a,b){
var vec__30670 = p__30629;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30670,(0),null);
var ks = cljs.core.nthnext(vec__30670,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__30671 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__30672 = a;
var G__30673 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__30671,G__30672,G__30673) : f.call(null,G__30671,G__30672,G__30673));
})());
}
});
var update_in__6 = (function (m,p__30630,f,a,b,c){
var vec__30674 = p__30630;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30674,(0),null);
var ks = cljs.core.nthnext(vec__30674,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__30675 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__30676 = a;
var G__30677 = b;
var G__30678 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__30675,G__30676,G__30677,G__30678) : f.call(null,G__30675,G__30676,G__30677,G__30678));
})());
}
});
var update_in__7 = (function() { 
var G__30680__delegate = function (m,p__30631,f,a,b,c,args){
var vec__30679 = p__30631;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30679,(0),null);
var ks = cljs.core.nthnext(vec__30679,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__30680 = function (m,p__30631,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__30681__i = 0, G__30681__a = new Array(arguments.length -  6);
while (G__30681__i < G__30681__a.length) {G__30681__a[G__30681__i] = arguments[G__30681__i + 6]; ++G__30681__i;}
  args = new cljs.core.IndexedSeq(G__30681__a,0);
} 
return G__30680__delegate.call(this,m,p__30631,f,a,b,c,args);};
G__30680.cljs$lang$maxFixedArity = 6;
G__30680.cljs$lang$applyTo = (function (arglist__30682){
var m = cljs.core.first(arglist__30682);
arglist__30682 = cljs.core.next(arglist__30682);
var p__30631 = cljs.core.first(arglist__30682);
arglist__30682 = cljs.core.next(arglist__30682);
var f = cljs.core.first(arglist__30682);
arglist__30682 = cljs.core.next(arglist__30682);
var a = cljs.core.first(arglist__30682);
arglist__30682 = cljs.core.next(arglist__30682);
var b = cljs.core.first(arglist__30682);
arglist__30682 = cljs.core.next(arglist__30682);
var c = cljs.core.first(arglist__30682);
var args = cljs.core.rest(arglist__30682);
return G__30680__delegate(m,p__30631,f,a,b,c,args);
});
G__30680.cljs$core$IFn$_invoke$arity$variadic = G__30680__delegate;
return G__30680;
})()
;
update_in = function(m,p__30631,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__30631,f);
case 4:
return update_in__4.call(this,m,p__30631,f,a);
case 5:
return update_in__5.call(this,m,p__30631,f,a,b);
case 6:
return update_in__6.call(this,m,p__30631,f,a,b,c);
default:
var G__30683 = null;
if (arguments.length > 6) {
var G__30684__i = 0, G__30684__a = new Array(arguments.length -  6);
while (G__30684__i < G__30684__a.length) {G__30684__a[G__30684__i] = arguments[G__30684__i + 6]; ++G__30684__i;}
G__30683 = new cljs.core.IndexedSeq(G__30684__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__30631,f,a,b,c, G__30683);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__30695 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__30695) : f.call(null,G__30695));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__30696 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__30697 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30696,G__30697) : f.call(null,G__30696,G__30697));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__30698 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__30699 = x;
var G__30700 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__30698,G__30699,G__30700) : f.call(null,G__30698,G__30699,G__30700));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__30701 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__30702 = x;
var G__30703 = y;
var G__30704 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__30701,G__30702,G__30703,G__30704) : f.call(null,G__30701,G__30702,G__30703,G__30704));
})());
});
var update__7 = (function() { 
var G__30705__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__30705 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__30706__i = 0, G__30706__a = new Array(arguments.length -  6);
while (G__30706__i < G__30706__a.length) {G__30706__a[G__30706__i] = arguments[G__30706__i + 6]; ++G__30706__i;}
  more = new cljs.core.IndexedSeq(G__30706__a,0);
} 
return G__30705__delegate.call(this,m,k,f,x,y,z,more);};
G__30705.cljs$lang$maxFixedArity = 6;
G__30705.cljs$lang$applyTo = (function (arglist__30707){
var m = cljs.core.first(arglist__30707);
arglist__30707 = cljs.core.next(arglist__30707);
var k = cljs.core.first(arglist__30707);
arglist__30707 = cljs.core.next(arglist__30707);
var f = cljs.core.first(arglist__30707);
arglist__30707 = cljs.core.next(arglist__30707);
var x = cljs.core.first(arglist__30707);
arglist__30707 = cljs.core.next(arglist__30707);
var y = cljs.core.first(arglist__30707);
arglist__30707 = cljs.core.next(arglist__30707);
var z = cljs.core.first(arglist__30707);
var more = cljs.core.rest(arglist__30707);
return G__30705__delegate(m,k,f,x,y,z,more);
});
G__30705.cljs$core$IFn$_invoke$arity$variadic = G__30705__delegate;
return G__30705;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__30708 = null;
if (arguments.length > 6) {
var G__30709__i = 0, G__30709__a = new Array(arguments.length -  6);
while (G__30709__i < G__30709__a.length) {G__30709__a[G__30709__i] = arguments[G__30709__i + 6]; ++G__30709__i;}
G__30708 = new cljs.core.IndexedSeq(G__30709__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__30708);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__17052__auto__,writer__17053__auto__,opt__17054__auto__){
return cljs.core._write(writer__17053__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__30710 = (ll - (5));
var G__30711 = r;
ll = G__30710;
ret = G__30711;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__30716 = cljs.core.pv_aget(node,(0));
var G__30717 = (level - (5));
node = G__30716;
level = G__30717;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__30718 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__30719 = (level - (5));
node = G__30718;
level = G__30719;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__17052__auto__,writer__17053__auto__,opt__17054__auto__){
return cljs.core._write(writer__17053__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__30729 = init__$2;
var G__30730 = (j + i);
var G__30731 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__30729,G__30730,G__30731) : f.call(null,G__30729,G__30730,G__30731));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__30742 = (j + (1));
var G__30743 = init__$3;
j = G__30742;
init__$2 = G__30743;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__30732 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__30732) : cljs.core.deref.call(null,G__30732));
} else {
var G__30744 = (i + len);
var G__30745 = init__$2;
i = G__30744;
init__$1 = G__30745;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16886__auto__ = self__.__hash;
if(!((h__16886__auto__ == null))){
return h__16886__auto__;
} else {
var h__16886__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16886__auto____$1;

return h__16886__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__30733 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__30733) : cljs.core.tv_editable_root.call(null,G__30733));
})(),(function (){var G__30734 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__30734) : cljs.core.tv_editable_tail.call(null,G__30734));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__30735 = init__$2;
var G__30736 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30735,G__30736) : f.call(null,G__30735,G__30736));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__30746 = (j + (1));
var G__30747 = init__$3;
j = G__30746;
init__$2 = G__30747;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__30737 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__30737) : cljs.core.deref.call(null,G__30737));
} else {
var G__30748 = (i + len);
var G__30749 = init__$2;
i = G__30748;
init__$1 = G__30749;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__30738 = coll__$1;
var G__30739 = cljs.core.first_array_for_longvec(coll__$1);
var G__30740 = (0);
var G__30741 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__30738,G__30739,G__30740,G__30741) : cljs.core.chunked_seq.call(null,G__30738,G__30739,G__30740,G__30741));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__17352__auto___30750 = len;
var i_30751 = (0);
while(true){
if((i_30751 < n__17352__auto___30750)){
(new_tail[i_30751] = (self__.tail[i_30751]));

var G__30752 = (i_30751 + (1));
i_30751 = G__30752;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__30753 = null;
var G__30753__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__30753__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__30753 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__30753__2.call(this,self__,k);
case 3:
return G__30753__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30753.cljs$core$IFn$_invoke$arity$2 = G__30753__2;
G__30753.cljs$core$IFn$_invoke$arity$3 = G__30753__3;
return G__30753;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args30728){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args30728)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__17052__auto__,writer__17053__auto__,opt__17054__auto__){
return cljs.core._write(writer__17053__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__30754 = (i + (1));
var G__30755 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__30754;
out = G__30755;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17443__auto__ = this;
return cljs.core.es6_iterator(this__17443__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__30756__i = 0, G__30756__a = new Array(arguments.length -  0);
while (G__30756__i < G__30756__a.length) {G__30756__a[G__30756__i] = arguments[G__30756__i + 0]; ++G__30756__i;}
  args = new cljs.core.IndexedSeq(G__30756__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__30757){
var args = cljs.core.seq(arglist__30757);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__30758 = self__.vec;
var G__30759 = self__.node;
var G__30760 = self__.i;
var G__30761 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__30758,G__30759,G__30760,G__30761) : cljs.core.chunked_seq.call(null,G__30758,G__30759,G__30760,G__30761));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16886__auto__ = self__.__hash;
if(!((h__16886__auto__ == null))){
return h__16886__auto__;
} else {
var h__16886__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16886__auto____$1;

return h__16886__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__30762 = self__.vec;
var G__30763 = (self__.i + self__.off);
var G__30764 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__30762,G__30763,G__30764) : cljs.core.subvec.call(null,G__30762,G__30763,G__30764));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__30765 = self__.vec;
var G__30766 = (self__.i + self__.off);
var G__30767 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__30765,G__30766,G__30767) : cljs.core.subvec.call(null,G__30765,G__30766,G__30767));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__30768 = self__.vec;
var G__30769 = self__.node;
var G__30770 = self__.i;
var G__30771 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__30768,G__30769,G__30770,G__30771) : cljs.core.chunked_seq.call(null,G__30768,G__30769,G__30770,G__30771));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__30772 = self__.vec;
var G__30773 = cljs.core.unchecked_array_for(self__.vec,end);
var G__30774 = end;
var G__30775 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__30772,G__30773,G__30774,G__30775) : cljs.core.chunked_seq.call(null,G__30772,G__30773,G__30774,G__30775));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__30776 = self__.vec;
var G__30777 = self__.node;
var G__30778 = self__.i;
var G__30779 = self__.off;
var G__30780 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__30776,G__30777,G__30778,G__30779,G__30780) : cljs.core.chunked_seq.call(null,G__30776,G__30777,G__30778,G__30779,G__30780));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__30781 = self__.vec;
var G__30782 = cljs.core.unchecked_array_for(self__.vec,end);
var G__30783 = end;
var G__30784 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__30781,G__30782,G__30783,G__30784) : cljs.core.chunked_seq.call(null,G__30781,G__30782,G__30783,G__30784));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__17052__auto__,writer__17053__auto__,opt__17054__auto__){
return cljs.core._write(writer__17053__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17443__auto__ = this;
return cljs.core.es6_iterator(this__17443__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__30786 = self__.meta;
var G__30787 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__30788 = self__.start;
var G__30789 = (function (){var x__16782__auto__ = self__.end;
var y__16783__auto__ = (v_pos + (1));
return ((x__16782__auto__ > y__16783__auto__) ? x__16782__auto__ : y__16783__auto__);
})();
var G__30790 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__30786,G__30787,G__30788,G__30789,G__30790) : cljs.core.build_subvec.call(null,G__30786,G__30787,G__30788,G__30789,G__30790));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__30791 = self__.meta;
var G__30792 = self__.v;
var G__30793 = self__.start;
var G__30794 = (self__.end - (1));
var G__30795 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__30791,G__30792,G__30793,G__30794,G__30795) : cljs.core.build_subvec.call(null,G__30791,G__30792,G__30793,G__30794,G__30795));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16886__auto__ = self__.__hash;
if(!((h__16886__auto__ == null))){
return h__16886__auto__;
} else {
var h__16886__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16886__auto____$1;

return h__16886__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__30797 = meta__$1;
var G__30798 = self__.v;
var G__30799 = self__.start;
var G__30800 = self__.end;
var G__30801 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__30797,G__30798,G__30799,G__30800,G__30801) : cljs.core.build_subvec.call(null,G__30797,G__30798,G__30799,G__30800,G__30801));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__30802 = self__.meta;
var G__30803 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__30804 = self__.start;
var G__30805 = (self__.end + (1));
var G__30806 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__30802,G__30803,G__30804,G__30805,G__30806) : cljs.core.build_subvec.call(null,G__30802,G__30803,G__30804,G__30805,G__30806));
});

cljs.core.Subvec.prototype.call = (function() {
var G__30807 = null;
var G__30807__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__30807__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__30807 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__30807__2.call(this,self__,k);
case 3:
return G__30807__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30807.cljs$core$IFn$_invoke$arity$2 = G__30807__2;
G__30807.cljs$core$IFn$_invoke$arity$3 = G__30807__3;
return G__30807;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args30785){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args30785)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__17052__auto__,writer__17053__auto__,opt__17054__auto__){
return cljs.core._write(writer__17053__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17443__auto__ = this;
return cljs.core.es6_iterator(this__17443__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__30808 = meta;
var G__30809 = v.v;
var G__30810 = (v.start + start);
var G__30811 = (v.start + end);
var G__30812 = __hash;
meta = G__30808;
v = G__30809;
start = G__30810;
end = G__30811;
__hash = G__30812;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj30819 = {};
return obj30819;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__30827 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__30828 = (level - (5));
node = G__30827;
level = G__30828;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__30832 = null;
var G__30832__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__30832__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__30832 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__30832__2.call(this,self__,k);
case 3:
return G__30832__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30832.cljs$core$IFn$_invoke$arity$2 = G__30832__2;
G__30832.cljs$core$IFn$_invoke$arity$3 = G__30832__3;
return G__30832;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args30829){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args30829)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__17052__auto__,writer__17053__auto__,opt__17054__auto__){
return cljs.core._write(writer__17053__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16886__auto__ = self__.__hash;
if(!((h__16886__auto__ == null))){
return h__16886__auto__;
} else {
var h__16886__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16886__auto____$1;

return h__16886__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__17052__auto__,writer__17053__auto__,opt__17054__auto__){
return cljs.core._write(writer__17053__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17443__auto__ = this;
return cljs.core.es6_iterator(this__17443__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16886__auto__ = self__.__hash;
if(!((h__16886__auto__ == null))){
return h__16886__auto__;
} else {
var h__16886__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16886__auto____$1;

return h__16886__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__16465__auto__ = self__.front;
if(cljs.core.truth_(or__16465__auto__)){
return or__16465__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__16465__auto__ = self__.rear;
if(cljs.core.truth_(or__16465__auto__)){
return or__16465__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__17052__auto__,writer__17053__auto__,opt__17054__auto__){
return cljs.core._write(writer__17053__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17443__auto__ = this;
return cljs.core.es6_iterator(this__17443__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__17052__auto__,writer__17053__auto__,opt__17054__auto__){
return cljs.core._write(writer__17053__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__30833 = (i + incr);
i = G__30833;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__30834 = (i + (1));
var G__30835 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__30834;
out = G__30835;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj30839 = {};
return obj30839;
})();
var l = ks.length;
var i_30840 = (0);
while(true){
if((i_30840 < l)){
var k_30841 = (ks[i_30840]);
(new_obj[k_30841] = (obj[k_30841]));

var G__30842 = (i_30840 + (1));
i_30840 = G__30842;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__16453__auto__ = (function (){var G__30846 = k;
return goog.isString(G__30846);
})();
if(cljs.core.truth_(and__16453__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__16453__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__30847 = init__$1;
var G__30848 = k;
var G__30849 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__30847,G__30848,G__30849) : f.call(null,G__30847,G__30848,G__30849));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__30850 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__30850) : cljs.core.deref.call(null,G__30850));
} else {
var G__30856 = cljs.core.rest(keys__$1);
var G__30857 = init__$2;
keys__$1 = G__30856;
init__$1 = G__30857;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16886__auto__ = self__.__hash;
if(!((h__16886__auto__ == null))){
return h__16886__auto__;
} else {
var h__16886__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__16886__auto____$1;

return h__16886__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__16453__auto__ = (function (){var G__30852 = k;
return goog.isString(G__30852);
})();
if(cljs.core.truth_(and__16453__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__16453__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__30853 = k;
return goog.isString(G__30853);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__16453__auto__ = (function (){var G__30855 = k;
return goog.isString(G__30855);
})();
if(cljs.core.truth_(and__16453__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__16453__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__30843_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__30843_SHARP_,(self__.strobj[p1__30843_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__30858 = null;
var G__30858__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__30858__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__30858 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__30858__2.call(this,self__,k);
case 3:
return G__30858__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30858.cljs$core$IFn$_invoke$arity$2 = G__30858__2;
G__30858.cljs$core$IFn$_invoke$arity$3 = G__30858__3;
return G__30858;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args30844){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args30844)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__17052__auto__,writer__17053__auto__,opt__17054__auto__){
return cljs.core._write(writer__17053__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj30860 = {};
return obj30860;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__30861 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30861,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30861,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__17052__auto__,writer__17053__auto__,opt__17054__auto__){
return cljs.core._write(writer__17053__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__17052__auto__,writer__17053__auto__,opt__17054__auto__){
return cljs.core._write(writer__17053__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__30862 = (i + (2));
i = G__30862;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__30863 = (i + (2));
i = G__30863;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__30864 = (i + (2));
i = G__30864;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__30865 = (i + (2));
i = G__30865;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__30866 = (i + (2));
i = G__30866;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__16465__auto__ = (function (){var G__30870 = k;
return goog.isString(G__30870);
})();
if(cljs.core.truth_(or__16465__auto__)){
return or__16465__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_30871 = (0);
while(true){
if((i_30871 < l)){
(narr[i_30871] = (arr[i_30871]));

var G__30872 = (i_30871 + (1));
i_30871 = G__30872;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__17052__auto__,writer__17053__auto__,opt__17054__auto__){
return cljs.core._write(writer__17053__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17443__auto__ = this;
return cljs.core.es6_iterator(this__17443__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__17052__auto__,writer__17053__auto__,opt__17054__auto__){
return cljs.core._write(writer__17053__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__30874 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__30874) : cljs.core.keys.call(null,G__30874));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__30875 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__30875) : cljs.core.vals.call(null,G__30875));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__30876 = cljs.core.seq(coll);
var chunk__30877 = null;
var count__30878 = (0);
var i__30879 = (0);
while(true){
if((i__30879 < count__30878)){
var vec__30880 = chunk__30877.cljs$core$IIndexed$_nth$arity$2(null,i__30879);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30880,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30880,(1),null);
var G__30881_30894 = v;
var G__30882_30895 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30881_30894,G__30882_30895) : f.call(null,G__30881_30894,G__30882_30895));

var G__30896 = seq__30876;
var G__30897 = chunk__30877;
var G__30898 = count__30878;
var G__30899 = (i__30879 + (1));
seq__30876 = G__30896;
chunk__30877 = G__30897;
count__30878 = G__30898;
i__30879 = G__30899;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__30876);
if(temp__4126__auto__){
var seq__30876__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__30876__$1)){
var c__17252__auto__ = cljs.core.chunk_first(seq__30876__$1);
var G__30900 = cljs.core.chunk_rest(seq__30876__$1);
var G__30901 = c__17252__auto__;
var G__30902 = cljs.core.count(c__17252__auto__);
var G__30903 = (0);
seq__30876 = G__30900;
chunk__30877 = G__30901;
count__30878 = G__30902;
i__30879 = G__30903;
continue;
} else {
var vec__30883 = cljs.core.first(seq__30876__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30883,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30883,(1),null);
var G__30884_30904 = v;
var G__30885_30905 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30884_30904,G__30885_30905) : f.call(null,G__30884_30904,G__30885_30905));

var G__30906 = cljs.core.next(seq__30876__$1);
var G__30907 = null;
var G__30908 = (0);
var G__30909 = (0);
seq__30876 = G__30906;
chunk__30877 = G__30907;
count__30878 = G__30908;
i__30879 = G__30909;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__30886 = init__$1;
var G__30887 = (self__.arr[i]);
var G__30888 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__30886,G__30887,G__30888) : f.call(null,G__30886,G__30887,G__30888));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__30889 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__30889) : cljs.core.deref.call(null,G__30889));
} else {
var G__30910 = (i + (2));
var G__30911 = init__$2;
i = G__30910;
init__$1 = G__30911;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16886__auto__ = self__.__hash;
if(!((h__16886__auto__ == null))){
return h__16886__auto__;
} else {
var h__16886__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__16886__auto____$1;

return h__16886__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__30890 = other;
if(G__30890){
var bit__17139__auto__ = (G__30890.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__17139__auto__) || (G__30890.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__30912 = (i + (2));
i = G__30912;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj30892 = {};
return obj30892;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__30913 = (s + (2));
var G__30914 = d;
s = G__30913;
d = G__30914;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__30915 = (s + (2));
var G__30916 = (d + (2));
s = G__30915;
d = G__30916;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__30893 = cljs.core.aclone(self__.arr);
(G__30893[(idx + (1))] = v);

return G__30893;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__30917 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__30918 = cljs.core.next(es);
ret = G__30917;
es = G__30918;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__30919 = null;
var G__30919__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__30919__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__30919 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__30919__2.call(this,self__,k);
case 3:
return G__30919__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30919.cljs$core$IFn$_invoke$arity$2 = G__30919__2;
G__30919.cljs$core$IFn$_invoke$arity$3 = G__30919__3;
return G__30919;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args30873){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args30873)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__17052__auto__,writer__17053__auto__,opt__17054__auto__){
return cljs.core._write(writer__17053__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__30920 = (i + (2));
var G__30921 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__30920;
ret = G__30921;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17443__auto__ = this;
return cljs.core.es6_iterator(this__17443__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__30922_30930 = self__.arr;
G__30922_30930.pop();

G__30922_30930.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__30923 = self__.len;
var G__30924 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__30923,G__30924) : cljs.core.array__GT_transient_hash_map.call(null,G__30923,G__30924));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__30925 = o;
if(G__30925){
var bit__17146__auto__ = (G__30925.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__17146__auto__) || (G__30925.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__30925.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__30925);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__30925);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__30926 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__30926) : cljs.core.key.call(null,G__30926));
})(),(function (){var G__30927 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__30927) : cljs.core.val.call(null,G__30927));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__30931 = cljs.core.next(es);
var G__30932 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__30928 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__30928) : cljs.core.key.call(null,G__30928));
})(),(function (){var G__30929 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__30929) : cljs.core.val.call(null,G__30929));
})());
es = G__30931;
tcoll__$2 = G__30932;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__17052__auto__,writer__17053__auto__,opt__17054__auto__){
return cljs.core._write(writer__17053__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__30933 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__30934 = (i + (2));
out = G__30933;
i = G__30934;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__17052__auto__,writer__17053__auto__,opt__17054__auto__){
return cljs.core._write(writer__17053__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__30937 = cljs.core.aclone(arr);
(G__30937[i] = a);

return G__30937;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__30938 = cljs.core.aclone(arr);
(G__30938[i] = a);

(G__30938[j] = b);

return G__30938;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__30943 = init__$1;
var G__30944 = k;
var G__30945 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__30943,G__30944,G__30945) : f.call(null,G__30943,G__30944,G__30945));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__30946 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__30946) : cljs.core.deref.call(null,G__30946));
} else {
var G__30947 = (i + (2));
var G__30948 = init__$2;
i = G__30947;
init__$1 = G__30948;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__30949 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__30949) : cljs.core.create_inode_seq.call(null,G__30949));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_30963 = (0);
var j_30964 = (0);
while(true){
if((i_30963 < (32))){
if((((self__.bitmap >>> i_30963) & (1)) === (0))){
var G__30965 = (i_30963 + (1));
var G__30966 = j_30964;
i_30963 = G__30965;
j_30964 = G__30966;
continue;
} else {
(nodes[i_30963] = ((!(((self__.arr[j_30964]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_30964])),(self__.arr[j_30964]),(self__.arr[(j_30964 + (1))]),added_leaf_QMARK_):(self__.arr[(j_30964 + (1))])));

var G__30967 = (i_30963 + (1));
var G__30968 = (j_30964 + (2));
i_30963 = G__30967;
j_30964 = G__30968;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__30950 = edit__$1;
var G__30951 = (shift + (5));
var G__30952 = key_or_nil;
var G__30953 = val_or_node;
var G__30954 = hash;
var G__30955 = key;
var G__30956 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__30950,G__30951,G__30952,G__30953,G__30954,G__30955,G__30956) : cljs.core.create_node.call(null,G__30950,G__30951,G__30952,G__30953,G__30954,G__30955,G__30956));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_30969 = (0);
var j_30970 = (0);
while(true){
if((i_30969 < (32))){
if((((self__.bitmap >>> i_30969) & (1)) === (0))){
var G__30971 = (i_30969 + (1));
var G__30972 = j_30970;
i_30969 = G__30971;
j_30970 = G__30972;
continue;
} else {
(nodes[i_30969] = ((!(((self__.arr[j_30970]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_30970])),(self__.arr[j_30970]),(self__.arr[(j_30970 + (1))]),added_leaf_QMARK_):(self__.arr[(j_30970 + (1))])));

var G__30973 = (i_30969 + (1));
var G__30974 = (j_30970 + (2));
i_30969 = G__30973;
j_30970 = G__30974;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__30957 = (shift + (5));
var G__30958 = key_or_nil;
var G__30959 = val_or_node;
var G__30960 = hash;
var G__30961 = key;
var G__30962 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__30957,G__30958,G__30959,G__30960,G__30961,G__30962) : cljs.core.create_node.call(null,G__30957,G__30958,G__30959,G__30960,G__30961,G__30962));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__17052__auto__,writer__17053__auto__,opt__17054__auto__){
return cljs.core._write(writer__17053__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__30975 = (i + (1));
var G__30976 = (j + (2));
var G__30977 = (bitmap | ((1) << i));
i = G__30975;
j = G__30976;
bitmap = G__30977;
continue;
} else {
var G__30978 = (i + (1));
var G__30979 = j;
var G__30980 = bitmap;
i = G__30978;
j = G__30979;
bitmap = G__30980;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__30981 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__30981) : cljs.core.create_array_node_seq.call(null,G__30981));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__30982 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__30982) : cljs.core.deref.call(null,G__30982));
} else {
var G__30983 = (i + (1));
var G__30984 = init__$2;
i = G__30983;
init__$1 = G__30984;
continue;
}
} else {
var G__30985 = (i + (1));
var G__30986 = init__$1;
i = G__30985;
init__$1 = G__30986;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__17052__auto__,writer__17053__auto__,opt__17054__auto__){
return cljs.core._write(writer__17053__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__30987 = (i + (2));
i = G__30987;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__30988 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__30988) : cljs.core.create_inode_seq.call(null,G__30988));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__17052__auto__,writer__17053__auto__,opt__17054__auto__){
return cljs.core._write(writer__17053__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16886__auto__ = self__.__hash;
if(!((h__16886__auto__ == null))){
return h__16886__auto__;
} else {
var h__16886__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16886__auto____$1;

return h__16886__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__30989 = self__.nodes;
var G__30990 = (self__.i + (2));
var G__30991 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__30989,G__30990,G__30991) : cljs.core.create_inode_seq.call(null,G__30989,G__30990,G__30991));
} else {
var G__30992 = self__.nodes;
var G__30993 = self__.i;
var G__30994 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__30992,G__30993,G__30994) : cljs.core.create_inode_seq.call(null,G__30992,G__30993,G__30994));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__17052__auto__,writer__17053__auto__,opt__17054__auto__){
return cljs.core._write(writer__17053__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17443__auto__ = this;
return cljs.core.es6_iterator(this__17443__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__30998 = (j + (2));
j = G__30998;
continue;
}
} else {
var G__30999 = (j + (2));
j = G__30999;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16886__auto__ = self__.__hash;
if(!((h__16886__auto__ == null))){
return h__16886__auto__;
} else {
var h__16886__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16886__auto____$1;

return h__16886__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__31000 = null;
var G__31001 = self__.nodes;
var G__31002 = self__.i;
var G__31003 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__31000,G__31001,G__31002,G__31003) : cljs.core.create_array_node_seq.call(null,G__31000,G__31001,G__31002,G__31003));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__17052__auto__,writer__17053__auto__,opt__17054__auto__){
return cljs.core._write(writer__17053__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17443__auto__ = this;
return cljs.core.es6_iterator(this__17443__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__31008 = (j + (1));
j = G__31008;
continue;
}
} else {
var G__31009 = (j + (1));
j = G__31009;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__31011 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__31011) : cljs.core.keys.call(null,G__31011));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__31012 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__31012) : cljs.core.vals.call(null,G__31012));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__31013 = cljs.core.seq(coll);
var chunk__31014 = null;
var count__31015 = (0);
var i__31016 = (0);
while(true){
if((i__31016 < count__31015)){
var vec__31017 = chunk__31014.cljs$core$IIndexed$_nth$arity$2(null,i__31016);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31017,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31017,(1),null);
var G__31018_31029 = v;
var G__31019_31030 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31018_31029,G__31019_31030) : f.call(null,G__31018_31029,G__31019_31030));

var G__31031 = seq__31013;
var G__31032 = chunk__31014;
var G__31033 = count__31015;
var G__31034 = (i__31016 + (1));
seq__31013 = G__31031;
chunk__31014 = G__31032;
count__31015 = G__31033;
i__31016 = G__31034;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__31013);
if(temp__4126__auto__){
var seq__31013__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__31013__$1)){
var c__17252__auto__ = cljs.core.chunk_first(seq__31013__$1);
var G__31035 = cljs.core.chunk_rest(seq__31013__$1);
var G__31036 = c__17252__auto__;
var G__31037 = cljs.core.count(c__17252__auto__);
var G__31038 = (0);
seq__31013 = G__31035;
chunk__31014 = G__31036;
count__31015 = G__31037;
i__31016 = G__31038;
continue;
} else {
var vec__31020 = cljs.core.first(seq__31013__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31020,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31020,(1),null);
var G__31021_31039 = v;
var G__31022_31040 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31021_31039,G__31022_31040) : f.call(null,G__31021_31039,G__31022_31040));

var G__31041 = cljs.core.next(seq__31013__$1);
var G__31042 = null;
var G__31043 = (0);
var G__31044 = (0);
seq__31013 = G__31041;
chunk__31014 = G__31042;
count__31015 = G__31043;
i__31016 = G__31044;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__31023 = init;
var G__31024 = null;
var G__31025 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__31023,G__31024,G__31025) : f.call(null,G__31023,G__31024,G__31025));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__31026 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__31026) : cljs.core.deref.call(null,G__31026));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16886__auto__ = self__.__hash;
if(!((h__16886__auto__ == null))){
return h__16886__auto__;
} else {
var h__16886__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__16886__auto____$1;

return h__16886__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj31028 = {};
return obj31028;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__31045 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__31046 = cljs.core.next(es);
ret = G__31045;
es = G__31046;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__31047 = null;
var G__31047__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__31047__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__31047 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__31047__2.call(this,self__,k);
case 3:
return G__31047__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31047.cljs$core$IFn$_invoke$arity$2 = G__31047__2;
G__31047.cljs$core$IFn$_invoke$arity$3 = G__31047__3;
return G__31047;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args31010){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args31010)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__17052__auto__,writer__17053__auto__,opt__17054__auto__){
return cljs.core._write(writer__17053__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__31048 = (i + (2));
var G__31049 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__31048;
ret = G__31049;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__31050 = (i + (1));
var G__31051 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__31050;
out = G__31051;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17443__auto__ = this;
return cljs.core.es6_iterator(this__17443__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__31052 = o;
if(G__31052){
var bit__17146__auto__ = (G__31052.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__17146__auto__) || (G__31052.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__31052.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__31052);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__31052);
}
})()){
return tcoll.assoc_BANG_((function (){var G__31053 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__31053) : cljs.core.key.call(null,G__31053));
})(),(function (){var G__31054 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__31054) : cljs.core.val.call(null,G__31054));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__31057 = cljs.core.next(es);
var G__31058 = tcoll__$1.assoc_BANG_((function (){var G__31055 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__31055) : cljs.core.key.call(null,G__31055));
})(),(function (){var G__31056 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__31056) : cljs.core.val.call(null,G__31056));
})());
es = G__31057;
tcoll__$1 = G__31058;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__17052__auto__,writer__17053__auto__,opt__17054__auto__){
return cljs.core._write(writer__17053__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__31059 = ((ascending_QMARK_)?t.left:t.right);
var G__31060 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__31059;
stack__$1 = G__31060;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16886__auto__ = self__.__hash;
if(!((h__16886__auto__ == null))){
return h__16886__auto__;
} else {
var h__16886__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16886__auto____$1;

return h__16886__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__17052__auto__,writer__17053__auto__,opt__17054__auto__){
return cljs.core._write(writer__17053__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17443__auto__ = this;
return cljs.core.es6_iterator(this__17443__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__31073 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__31073) : cljs.core.deref.call(null,G__31073));
} else {
var init__$2 = (function (){var G__31074 = init__$1;
var G__31075 = node.key;
var G__31076 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__31074,G__31075,G__31076) : f.call(null,G__31074,G__31075,G__31076));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__31077 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__31077) : cljs.core.deref.call(null,G__31077));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__31078 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__31078) : cljs.core.deref.call(null,G__31078));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16886__auto__ = self__.__hash;
if(!((h__16886__auto__ == null))){
return h__16886__auto__;
} else {
var h__16886__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16886__auto____$1;

return h__16886__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__31080 = null;
var G__31080__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__31080__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__31080 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__31080__2.call(this,self__,k);
case 3:
return G__31080__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31080.cljs$core$IFn$_invoke$arity$2 = G__31080__2;
G__31080.cljs$core$IFn$_invoke$arity$3 = G__31080__3;
return G__31080;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args31079){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args31079)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__17052__auto__,writer__17053__auto__,opt__17054__auto__){
return cljs.core._write(writer__17053__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17443__auto__ = this;
return cljs.core.es6_iterator(this__17443__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16886__auto__ = self__.__hash;
if(!((h__16886__auto__ == null))){
return h__16886__auto__;
} else {
var h__16886__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16886__auto____$1;

return h__16886__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__31082 = null;
var G__31082__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__31082__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__31082 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__31082__2.call(this,self__,k);
case 3:
return G__31082__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31082.cljs$core$IFn$_invoke$arity$2 = G__31082__2;
G__31082.cljs$core$IFn$_invoke$arity$3 = G__31082__3;
return G__31082;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args31081){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args31081)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__17052__auto__,writer__17053__auto__,opt__17054__auto__){
return cljs.core._write(writer__17053__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17443__auto__ = this;
return cljs.core.es6_iterator(this__17443__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__31095 = k;
var G__31096 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__31095,G__31096) : comp.call(null,G__31095,G__31096));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__31115 = k;
var G__31116 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__31115,G__31116) : comp.call(null,G__31115,G__31116));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__31127 = k;
var G__31128 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__31127,G__31128) : comp.call(null,G__31127,G__31128));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__31130 = cljs.core.seq(coll);
var chunk__31131 = null;
var count__31132 = (0);
var i__31133 = (0);
while(true){
if((i__31133 < count__31132)){
var vec__31134 = chunk__31131.cljs$core$IIndexed$_nth$arity$2(null,i__31133);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31134,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31134,(1),null);
var G__31135_31147 = v;
var G__31136_31148 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31135_31147,G__31136_31148) : f.call(null,G__31135_31147,G__31136_31148));

var G__31149 = seq__31130;
var G__31150 = chunk__31131;
var G__31151 = count__31132;
var G__31152 = (i__31133 + (1));
seq__31130 = G__31149;
chunk__31131 = G__31150;
count__31132 = G__31151;
i__31133 = G__31152;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__31130);
if(temp__4126__auto__){
var seq__31130__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__31130__$1)){
var c__17252__auto__ = cljs.core.chunk_first(seq__31130__$1);
var G__31153 = cljs.core.chunk_rest(seq__31130__$1);
var G__31154 = c__17252__auto__;
var G__31155 = cljs.core.count(c__17252__auto__);
var G__31156 = (0);
seq__31130 = G__31153;
chunk__31131 = G__31154;
count__31132 = G__31155;
i__31133 = G__31156;
continue;
} else {
var vec__31137 = cljs.core.first(seq__31130__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31137,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31137,(1),null);
var G__31138_31157 = v;
var G__31139_31158 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31138_31157,G__31139_31158) : f.call(null,G__31138_31157,G__31139_31158));

var G__31159 = cljs.core.next(seq__31130__$1);
var G__31160 = null;
var G__31161 = (0);
var G__31162 = (0);
seq__31130 = G__31159;
chunk__31131 = G__31160;
count__31132 = G__31161;
i__31133 = G__31162;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__31140 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__31140) : cljs.core.keys.call(null,G__31140));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__31141 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__31141) : cljs.core.vals.call(null,G__31141));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__31142 = k;
var G__31143 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__31142,G__31143) : self__.comp.call(null,G__31142,G__31143));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__31163 = t.left;
t = G__31163;
continue;
} else {
var G__31164 = t.right;
t = G__31164;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16886__auto__ = self__.__hash;
if(!((h__16886__auto__ == null))){
return h__16886__auto__;
} else {
var h__16886__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__16886__auto____$1;

return h__16886__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__31165 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__31166 = cljs.core.next(es);
ret = G__31165;
es = G__31166;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__31167 = null;
var G__31167__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__31167__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__31167 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__31167__2.call(this,self__,k);
case 3:
return G__31167__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31167.cljs$core$IFn$_invoke$arity$2 = G__31167__2;
G__31167.cljs$core$IFn$_invoke$arity$3 = G__31167__3;
return G__31167;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args31129){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args31129)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__31144 = k;
var G__31145 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__31144,G__31145) : self__.comp.call(null,G__31144,G__31145));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__31168 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__31169 = t.left;
stack = G__31168;
t = G__31169;
continue;
} else {
var G__31170 = stack;
var G__31171 = t.right;
stack = G__31170;
t = G__31171;
continue;
}
} else {
if((c > (0))){
var G__31172 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__31173 = t.right;
stack = G__31172;
t = G__31173;
continue;
} else {
var G__31174 = stack;
var G__31175 = t.left;
stack = G__31174;
t = G__31175;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__31146 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__31146) : cljs.core.key.call(null,G__31146));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__17052__auto__,writer__17053__auto__,opt__17054__auto__){
return cljs.core._write(writer__17053__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17443__auto__ = this;
return cljs.core.es6_iterator(this__17443__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__31176 = cljs.core.nnext(in$);
var G__31177 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__31176;
out = G__31177;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__31178__i = 0, G__31178__a = new Array(arguments.length -  0);
while (G__31178__i < G__31178__a.length) {G__31178__a[G__31178__i] = arguments[G__31178__i + 0]; ++G__31178__i;}
  keyvals = new cljs.core.IndexedSeq(G__31178__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__31179){
var keyvals = cljs.core.seq(arglist__31179);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__31180__i = 0, G__31180__a = new Array(arguments.length -  0);
while (G__31180__i < G__31180__a.length) {G__31180__a[G__31180__i] = arguments[G__31180__i + 0]; ++G__31180__i;}
  keyvals = new cljs.core.IndexedSeq(G__31180__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__31181){
var keyvals = cljs.core.seq(arglist__31181);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj31185 = {};
return obj31185;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__31186 = cljs.core.nnext(kvs);
kvs = G__31186;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__31187__i = 0, G__31187__a = new Array(arguments.length -  0);
while (G__31187__i < G__31187__a.length) {G__31187__a[G__31187__i] = arguments[G__31187__i + 0]; ++G__31187__i;}
  keyvals = new cljs.core.IndexedSeq(G__31187__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__31188){
var keyvals = cljs.core.seq(arglist__31188);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__31189 = cljs.core.nnext(in$);
var G__31190 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__31189;
out = G__31190;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__31191__i = 0, G__31191__a = new Array(arguments.length -  0);
while (G__31191__i < G__31191__a.length) {G__31191__a[G__31191__i] = arguments[G__31191__i + 0]; ++G__31191__i;}
  keyvals = new cljs.core.IndexedSeq(G__31191__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__31192){
var keyvals = cljs.core.seq(arglist__31192);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__31193 = cljs.core.nnext(in$);
var G__31194 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__31193;
out = G__31194;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__31195__i = 0, G__31195__a = new Array(arguments.length -  1);
while (G__31195__i < G__31195__a.length) {G__31195__a[G__31195__i] = arguments[G__31195__i + 1]; ++G__31195__i;}
  keyvals = new cljs.core.IndexedSeq(G__31195__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__31196){
var comparator = cljs.core.first(arglist__31196);
var keyvals = cljs.core.rest(arglist__31196);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__31197 = self__.mseq;
if(G__31197){
var bit__17146__auto__ = (G__31197.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__17146__auto__) || (G__31197.cljs$core$INext$)){
return true;
} else {
if((!G__31197.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__31197);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__31197);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__31198 = self__.mseq;
if(G__31198){
var bit__17146__auto__ = (G__31198.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__17146__auto__) || (G__31198.cljs$core$INext$)){
return true;
} else {
if((!G__31198.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__31198);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__31198);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__17052__auto__,writer__17053__auto__,opt__17054__auto__){
return cljs.core._write(writer__17053__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17443__auto__ = this;
return cljs.core.es6_iterator(this__17443__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__31199 = self__.mseq;
if(G__31199){
var bit__17146__auto__ = (G__31199.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__17146__auto__) || (G__31199.cljs$core$INext$)){
return true;
} else {
if((!G__31199.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__31199);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__31199);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__31200 = self__.mseq;
if(G__31200){
var bit__17146__auto__ = (G__31200.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__17146__auto__) || (G__31200.cljs$core$INext$)){
return true;
} else {
if((!G__31200.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__31200);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__31200);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__17052__auto__,writer__17053__auto__,opt__17054__auto__){
return cljs.core._write(writer__17053__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17443__auto__ = this;
return cljs.core.es6_iterator(this__17443__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__31201_SHARP_,p2__31202_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__16465__auto__ = p1__31201_SHARP_;
if(cljs.core.truth_(or__16465__auto__)){
return or__16465__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__31202_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__31203__i = 0, G__31203__a = new Array(arguments.length -  0);
while (G__31203__i < G__31203__a.length) {G__31203__a[G__31203__i] = arguments[G__31203__i + 0]; ++G__31203__i;}
  maps = new cljs.core.IndexedSeq(G__31203__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__31204){
var maps = cljs.core.seq(arglist__31204);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__31207 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__31208 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31207,G__31208) : f.call(null,G__31207,G__31208));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__16465__auto__ = m1;
if(cljs.core.truth_(or__16465__auto__)){
return or__16465__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__31209__i = 0, G__31209__a = new Array(arguments.length -  1);
while (G__31209__i < G__31209__a.length) {G__31209__a[G__31209__i] = arguments[G__31209__i + 1]; ++G__31209__i;}
  maps = new cljs.core.IndexedSeq(G__31209__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__31210){
var f = cljs.core.first(arglist__31210);
var maps = cljs.core.rest(arglist__31210);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,cljs.core.constant$keyword$9);
var G__31211 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,cljs.core.constant$keyword$9))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__31212 = cljs.core.next(keys);
ret = G__31211;
keys = G__31212;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__31215 = cljs.core.seq(coll);
var chunk__31216 = null;
var count__31217 = (0);
var i__31218 = (0);
while(true){
if((i__31218 < count__31217)){
var vec__31219 = chunk__31216.cljs$core$IIndexed$_nth$arity$2(null,i__31218);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31219,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31219,(1),null);
var G__31220_31225 = v;
var G__31221_31226 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31220_31225,G__31221_31226) : f.call(null,G__31220_31225,G__31221_31226));

var G__31227 = seq__31215;
var G__31228 = chunk__31216;
var G__31229 = count__31217;
var G__31230 = (i__31218 + (1));
seq__31215 = G__31227;
chunk__31216 = G__31228;
count__31217 = G__31229;
i__31218 = G__31230;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__31215);
if(temp__4126__auto__){
var seq__31215__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__31215__$1)){
var c__17252__auto__ = cljs.core.chunk_first(seq__31215__$1);
var G__31231 = cljs.core.chunk_rest(seq__31215__$1);
var G__31232 = c__17252__auto__;
var G__31233 = cljs.core.count(c__17252__auto__);
var G__31234 = (0);
seq__31215 = G__31231;
chunk__31216 = G__31232;
count__31217 = G__31233;
i__31218 = G__31234;
continue;
} else {
var vec__31222 = cljs.core.first(seq__31215__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31222,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31222,(1),null);
var G__31223_31235 = v;
var G__31224_31236 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31223_31235,G__31224_31236) : f.call(null,G__31223_31235,G__31224_31236));

var G__31237 = cljs.core.next(seq__31215__$1);
var G__31238 = null;
var G__31239 = (0);
var G__31240 = (0);
seq__31215 = G__31237;
chunk__31216 = G__31238;
count__31217 = G__31239;
i__31218 = G__31240;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16886__auto__ = self__.__hash;
if(!((h__16886__auto__ == null))){
return h__16886__auto__;
} else {
var h__16886__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__16886__auto____$1;

return h__16886__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__31213_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__31213_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__31241 = null;
var G__31241__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__31241__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__31241 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__31241__2.call(this,self__,k);
case 3:
return G__31241__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31241.cljs$core$IFn$_invoke$arity$2 = G__31241__2;
G__31241.cljs$core$IFn$_invoke$arity$3 = G__31241__3;
return G__31241;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args31214){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args31214)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__17052__auto__,writer__17053__auto__,opt__17054__auto__){
return cljs.core._write(writer__17053__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__31242 = (i + (1));
var G__31243 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__31242;
out = G__31243;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__31244 = (i + (1));
var G__31245 = cljs.core._conj_BANG_(out,(items[i]));
i = G__31244;
out = G__31245;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17443__auto__ = this;
return cljs.core.es6_iterator(this__17443__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__31247 = null;
var G__31247__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__31247__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__31247 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__31247__2.call(this,self__,k);
case 3:
return G__31247__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31247.cljs$core$IFn$_invoke$arity$2 = G__31247__2;
G__31247.cljs$core$IFn$_invoke$arity$3 = G__31247__3;
return G__31247;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args31246){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args31246)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__17052__auto__,writer__17053__auto__,opt__17054__auto__){
return cljs.core._write(writer__17053__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__31250 = cljs.core.seq(coll);
var chunk__31251 = null;
var count__31252 = (0);
var i__31253 = (0);
while(true){
if((i__31253 < count__31252)){
var vec__31254 = chunk__31251.cljs$core$IIndexed$_nth$arity$2(null,i__31253);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31254,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31254,(1),null);
var G__31255_31260 = v;
var G__31256_31261 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31255_31260,G__31256_31261) : f.call(null,G__31255_31260,G__31256_31261));

var G__31262 = seq__31250;
var G__31263 = chunk__31251;
var G__31264 = count__31252;
var G__31265 = (i__31253 + (1));
seq__31250 = G__31262;
chunk__31251 = G__31263;
count__31252 = G__31264;
i__31253 = G__31265;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__31250);
if(temp__4126__auto__){
var seq__31250__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__31250__$1)){
var c__17252__auto__ = cljs.core.chunk_first(seq__31250__$1);
var G__31266 = cljs.core.chunk_rest(seq__31250__$1);
var G__31267 = c__17252__auto__;
var G__31268 = cljs.core.count(c__17252__auto__);
var G__31269 = (0);
seq__31250 = G__31266;
chunk__31251 = G__31267;
count__31252 = G__31268;
i__31253 = G__31269;
continue;
} else {
var vec__31257 = cljs.core.first(seq__31250__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31257,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31257,(1),null);
var G__31258_31270 = v;
var G__31259_31271 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31258_31270,G__31259_31271) : f.call(null,G__31258_31270,G__31259_31271));

var G__31272 = cljs.core.next(seq__31250__$1);
var G__31273 = null;
var G__31274 = (0);
var G__31275 = (0);
seq__31250 = G__31272;
chunk__31251 = G__31273;
count__31252 = G__31274;
i__31253 = G__31275;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16886__auto__ = self__.__hash;
if(!((h__16886__auto__ == null))){
return h__16886__auto__;
} else {
var h__16886__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__16886__auto____$1;

return h__16886__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__31248_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__31248_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__31276 = null;
var G__31276__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__31276__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__31276 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__31276__2.call(this,self__,k);
case 3:
return G__31276__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31276.cljs$core$IFn$_invoke$arity$2 = G__31276__2;
G__31276.cljs$core$IFn$_invoke$arity$3 = G__31276__3;
return G__31276;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args31249){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args31249)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__17052__auto__,writer__17053__auto__,opt__17054__auto__){
return cljs.core._write(writer__17053__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17443__auto__ = this;
return cljs.core.es6_iterator(this__17443__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__17346__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__17346__auto__.length)){
var G__31277 = (i + (1));
var G__31278 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__31277;
res = G__31278;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__31279 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__31280 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__31279;
out = G__31280;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__31281__delegate = function (keys){
return cljs.core.set(keys);
};
var G__31281 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__31282__i = 0, G__31282__a = new Array(arguments.length -  0);
while (G__31282__i < G__31282__a.length) {G__31282__a[G__31282__i] = arguments[G__31282__i + 0]; ++G__31282__i;}
  keys = new cljs.core.IndexedSeq(G__31282__a,0);
} 
return G__31281__delegate.call(this,keys);};
G__31281.cljs$lang$maxFixedArity = 0;
G__31281.cljs$lang$applyTo = (function (arglist__31283){
var keys = cljs.core.seq(arglist__31283);
return G__31281__delegate(keys);
});
G__31281.cljs$core$IFn$_invoke$arity$variadic = G__31281__delegate;
return G__31281;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__31284 = null;
if (arguments.length > 0) {
var G__31285__i = 0, G__31285__a = new Array(arguments.length -  0);
while (G__31285__i < G__31285__a.length) {G__31285__a[G__31285__i] = arguments[G__31285__i + 0]; ++G__31285__i;}
G__31284 = new cljs.core.IndexedSeq(G__31285__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__31284);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__31286__i = 0, G__31286__a = new Array(arguments.length -  0);
while (G__31286__i < G__31286__a.length) {G__31286__a[G__31286__i] = arguments[G__31286__i + 0]; ++G__31286__i;}
  keys = new cljs.core.IndexedSeq(G__31286__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__31287){
var keys = cljs.core.seq(arglist__31287);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__31288__i = 0, G__31288__a = new Array(arguments.length -  1);
while (G__31288__i < G__31288__a.length) {G__31288__a[G__31288__i] = arguments[G__31288__i + 1]; ++G__31288__i;}
  keys = new cljs.core.IndexedSeq(G__31288__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__31289){
var comparator = cljs.core.first(arglist__31289);
var keys = cljs.core.rest(arglist__31289);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__31290_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__31290_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__31290_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__31291_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__31291_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__31291_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__31312 = null;
var G__31312__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__31312__1 = (function (result){
var G__31302 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__31302) : rf.call(null,G__31302));
});
var G__31312__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__31303 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__31303) : cljs.core.deref.call(null,G__31303));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__31304 = result;
var G__31305 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__31304,G__31305) : rf.call(null,G__31304,G__31305));
}
});
G__31312 = function(result,input){
switch(arguments.length){
case 0:
return G__31312__0.call(this);
case 1:
return G__31312__1.call(this,result);
case 2:
return G__31312__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31312.cljs$core$IFn$_invoke$arity$0 = G__31312__0;
G__31312.cljs$core$IFn$_invoke$arity$1 = G__31312__1;
G__31312.cljs$core$IFn$_invoke$arity$2 = G__31312__2;
return G__31312;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__31310,seen__$1){
while(true){
var vec__31311 = p__31310;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31311,(0),null);
var xs__$1 = vec__31311;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__31313 = cljs.core.rest(s);
var G__31314 = seen__$1;
p__31310 = G__31313;
seen__$1 = G__31314;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__31315 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__31316 = cljs.core.next(s__$1);
ret = G__31315;
s__$1 = G__31316;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__31318 = x;
if(G__31318){
var bit__17139__auto__ = (G__31318.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__17139__auto__) || (G__31318.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__31319 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__31320 = cljs.core.next(ks);
var G__31321 = cljs.core.next(vs);
map = G__31319;
ks = G__31320;
vs = G__31321;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__31332 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__31332) : k.call(null,G__31332));
})() > (function (){var G__31333 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__31333) : k.call(null,G__31333));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__31334__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__31322_SHARP_,p2__31323_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__31322_SHARP_,p2__31323_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__31334 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__31335__i = 0, G__31335__a = new Array(arguments.length -  3);
while (G__31335__i < G__31335__a.length) {G__31335__a[G__31335__i] = arguments[G__31335__i + 3]; ++G__31335__i;}
  more = new cljs.core.IndexedSeq(G__31335__a,0);
} 
return G__31334__delegate.call(this,k,x,y,more);};
G__31334.cljs$lang$maxFixedArity = 3;
G__31334.cljs$lang$applyTo = (function (arglist__31336){
var k = cljs.core.first(arglist__31336);
arglist__31336 = cljs.core.next(arglist__31336);
var x = cljs.core.first(arglist__31336);
arglist__31336 = cljs.core.next(arglist__31336);
var y = cljs.core.first(arglist__31336);
var more = cljs.core.rest(arglist__31336);
return G__31334__delegate(k,x,y,more);
});
G__31334.cljs$core$IFn$_invoke$arity$variadic = G__31334__delegate;
return G__31334;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__31337 = null;
if (arguments.length > 3) {
var G__31338__i = 0, G__31338__a = new Array(arguments.length -  3);
while (G__31338__i < G__31338__a.length) {G__31338__a[G__31338__i] = arguments[G__31338__i + 3]; ++G__31338__i;}
G__31337 = new cljs.core.IndexedSeq(G__31338__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__31337);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__31349 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__31349) : k.call(null,G__31349));
})() < (function (){var G__31350 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__31350) : k.call(null,G__31350));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__31351__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__31339_SHARP_,p2__31340_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__31339_SHARP_,p2__31340_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__31351 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__31352__i = 0, G__31352__a = new Array(arguments.length -  3);
while (G__31352__i < G__31352__a.length) {G__31352__a[G__31352__i] = arguments[G__31352__i + 3]; ++G__31352__i;}
  more = new cljs.core.IndexedSeq(G__31352__a,0);
} 
return G__31351__delegate.call(this,k,x,y,more);};
G__31351.cljs$lang$maxFixedArity = 3;
G__31351.cljs$lang$applyTo = (function (arglist__31353){
var k = cljs.core.first(arglist__31353);
arglist__31353 = cljs.core.next(arglist__31353);
var x = cljs.core.first(arglist__31353);
arglist__31353 = cljs.core.next(arglist__31353);
var y = cljs.core.first(arglist__31353);
var more = cljs.core.rest(arglist__31353);
return G__31351__delegate(k,x,y,more);
});
G__31351.cljs$core$IFn$_invoke$arity$variadic = G__31351__delegate;
return G__31351;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__31354 = null;
if (arguments.length > 3) {
var G__31355__i = 0, G__31355__a = new Array(arguments.length -  3);
while (G__31355__i < G__31355__a.length) {G__31355__a[G__31355__i] = arguments[G__31355__i + 3]; ++G__31355__i;}
G__31354 = new cljs.core.IndexedSeq(G__31355__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__31354);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__17052__auto__,writer__17053__auto__,opt__17054__auto__){
return cljs.core._write(writer__17053__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__31372 = null;
var G__31372__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__31372__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__31367 = result;
var G__31368 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__31367,G__31368) : rf.call(null,G__31367,G__31368));
})());
})());
var G__31369 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__31369) : rf.call(null,G__31369));
});
var G__31372__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__31370 = result;
var G__31371 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__31370,G__31371) : rf.call(null,G__31370,G__31371));
} else {
return result;
}
});
G__31372 = function(result,input){
switch(arguments.length){
case 0:
return G__31372__0.call(this);
case 1:
return G__31372__1.call(this,result);
case 2:
return G__31372__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31372.cljs$core$IFn$_invoke$arity$0 = G__31372__0;
G__31372.cljs$core$IFn$_invoke$arity$1 = G__31372__1;
G__31372.cljs$core$IFn$_invoke$arity$2 = G__31372__2;
return G__31372;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__31385 = null;
var G__31385__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__31385__1 = (function (result){
var G__31380 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__31380) : rf.call(null,G__31380));
});
var G__31385__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__31381 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__31381) : pred.call(null,G__31381));
})())){
var G__31382 = result;
var G__31383 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__31382,G__31383) : rf.call(null,G__31382,G__31383));
} else {
return cljs.core.reduced(result);
}
});
G__31385 = function(result,input){
switch(arguments.length){
case 0:
return G__31385__0.call(this);
case 1:
return G__31385__1.call(this,result);
case 2:
return G__31385__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31385.cljs$core$IFn$_invoke$arity$0 = G__31385__0;
G__31385.cljs$core$IFn$_invoke$arity$1 = G__31385__1;
G__31385.cljs$core$IFn$_invoke$arity$2 = G__31385__2;
return G__31385;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__31384 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__31384) : pred.call(null,G__31384));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__31390 = (function (){var G__31392 = cljs.core._entry_key(sc,e);
var G__31393 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__31392,G__31393) : comp.call(null,G__31392,G__31393));
})();
var G__31391 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__31390,G__31391) : test.call(null,G__31390,G__31391));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__31397 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31397,(0),null);
var s = vec__31397;
if(cljs.core.truth_((function (){var G__31398 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__31398) : include.call(null,G__31398));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__31399 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31399,(0),null);
var s = vec__31399;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__31403 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31403,(0),null);
var s = vec__31403;
if(cljs.core.truth_((function (){var G__31404 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__31404) : include.call(null,G__31404));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__31405 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31405,(0),null);
var s = vec__31405;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__17052__auto__,writer__17053__auto__,opt__17054__auto__){
return cljs.core._write(writer__17053__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__31406 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__31406) : Math.ceil.call(null,G__31406));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__16886__auto__ = self__.__hash;
if(!((h__16886__auto__ == null))){
return h__16886__auto__;
} else {
var h__16886__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__16886__auto____$1;

return h__16886__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__31407 = ret;
var G__31408 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31407,G__31408) : f.call(null,G__31407,G__31408));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__31409 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__31409) : cljs.core.deref.call(null,G__31409));
} else {
var G__31410 = (i + self__.step);
var G__31411 = ret__$1;
i = G__31410;
ret = G__31411;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__17052__auto__,writer__17053__auto__,opt__17054__auto__){
return cljs.core._write(writer__17053__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17443__auto__ = this;
return cljs.core.es6_iterator(this__17443__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__31429 = null;
var G__31429__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__31429__1 = (function (result){
var G__31426 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__31426) : rf.call(null,G__31426));
});
var G__31429__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__31427 = result;
var G__31428 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__31427,G__31428) : rf.call(null,G__31427,G__31428));
} else {
return result;
}
});
G__31429 = function(result,input){
switch(arguments.length){
case 0:
return G__31429__0.call(this);
case 1:
return G__31429__1.call(this,result);
case 2:
return G__31429__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31429.cljs$core$IFn$_invoke$arity$0 = G__31429__0;
G__31429.cljs$core$IFn$_invoke$arity$1 = G__31429__1;
G__31429.cljs$core$IFn$_invoke$arity$2 = G__31429__2;
return G__31429;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(cljs.core.constant$keyword$10);
return ((function (a,pa){
return (function() {
var G__31451 = null;
var G__31451__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__31451__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__31442 = result;
var G__31443 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__31442,G__31443) : rf.call(null,G__31442,G__31443));
})());
})());
var G__31444 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__31444) : rf.call(null,G__31444));
});
var G__31451__2 = (function (result,input){
var pval = (function (){var G__31445 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__31445) : cljs.core.deref.call(null,G__31445));
})();
var val = (function (){var G__31446 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__31446) : f.call(null,G__31446));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,cljs.core.constant$keyword$10)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__31447 = result;
var G__31448 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__31447,G__31448) : rf.call(null,G__31447,G__31448));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__31451 = function(result,input){
switch(arguments.length){
case 0:
return G__31451__0.call(this);
case 1:
return G__31451__1.call(this,result);
case 2:
return G__31451__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31451.cljs$core$IFn$_invoke$arity$0 = G__31451__0;
G__31451.cljs$core$IFn$_invoke$arity$1 = G__31451__1;
G__31451.cljs$core$IFn$_invoke$arity$2 = G__31451__2;
return G__31451;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__31449 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__31449) : f.call(null,G__31449));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__31430_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__31450 = p1__31430_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__31450) : f.call(null,G__31450));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__31460 = init;
var G__31461 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31460,G__31461) : f.call(null,G__31460,G__31461));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__31556 = null;
var G__31556__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__31556__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__31514 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__31514) : f.call(null,G__31514));
})()],null));
});
var G__31556__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__31515 = x;
var G__31516 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31515,G__31516) : f.call(null,G__31515,G__31516));
})()],null));
});
var G__31556__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__31517 = x;
var G__31518 = y;
var G__31519 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__31517,G__31518,G__31519) : f.call(null,G__31517,G__31518,G__31519));
})()],null));
});
var G__31556__4 = (function() { 
var G__31557__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__31557 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__31558__i = 0, G__31558__a = new Array(arguments.length -  3);
while (G__31558__i < G__31558__a.length) {G__31558__a[G__31558__i] = arguments[G__31558__i + 3]; ++G__31558__i;}
  args = new cljs.core.IndexedSeq(G__31558__a,0);
} 
return G__31557__delegate.call(this,x,y,z,args);};
G__31557.cljs$lang$maxFixedArity = 3;
G__31557.cljs$lang$applyTo = (function (arglist__31559){
var x = cljs.core.first(arglist__31559);
arglist__31559 = cljs.core.next(arglist__31559);
var y = cljs.core.first(arglist__31559);
arglist__31559 = cljs.core.next(arglist__31559);
var z = cljs.core.first(arglist__31559);
var args = cljs.core.rest(arglist__31559);
return G__31557__delegate(x,y,z,args);
});
G__31557.cljs$core$IFn$_invoke$arity$variadic = G__31557__delegate;
return G__31557;
})()
;
G__31556 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__31556__0.call(this);
case 1:
return G__31556__1.call(this,x);
case 2:
return G__31556__2.call(this,x,y);
case 3:
return G__31556__3.call(this,x,y,z);
default:
var G__31560 = null;
if (arguments.length > 3) {
var G__31561__i = 0, G__31561__a = new Array(arguments.length -  3);
while (G__31561__i < G__31561__a.length) {G__31561__a[G__31561__i] = arguments[G__31561__i + 3]; ++G__31561__i;}
G__31560 = new cljs.core.IndexedSeq(G__31561__a,0);
}
return G__31556__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__31560);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31556.cljs$lang$maxFixedArity = 3;
G__31556.cljs$lang$applyTo = G__31556__4.cljs$lang$applyTo;
G__31556.cljs$core$IFn$_invoke$arity$0 = G__31556__0;
G__31556.cljs$core$IFn$_invoke$arity$1 = G__31556__1;
G__31556.cljs$core$IFn$_invoke$arity$2 = G__31556__2;
G__31556.cljs$core$IFn$_invoke$arity$3 = G__31556__3;
G__31556.cljs$core$IFn$_invoke$arity$variadic = G__31556__4.cljs$core$IFn$_invoke$arity$variadic;
return G__31556;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__31562 = null;
var G__31562__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__31562__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__31520 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__31520) : f.call(null,G__31520));
})(),(function (){var G__31521 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__31521) : g.call(null,G__31521));
})()],null));
});
var G__31562__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__31522 = x;
var G__31523 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31522,G__31523) : f.call(null,G__31522,G__31523));
})(),(function (){var G__31524 = x;
var G__31525 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__31524,G__31525) : g.call(null,G__31524,G__31525));
})()],null));
});
var G__31562__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__31526 = x;
var G__31527 = y;
var G__31528 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__31526,G__31527,G__31528) : f.call(null,G__31526,G__31527,G__31528));
})(),(function (){var G__31529 = x;
var G__31530 = y;
var G__31531 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__31529,G__31530,G__31531) : g.call(null,G__31529,G__31530,G__31531));
})()],null));
});
var G__31562__4 = (function() { 
var G__31563__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__31563 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__31564__i = 0, G__31564__a = new Array(arguments.length -  3);
while (G__31564__i < G__31564__a.length) {G__31564__a[G__31564__i] = arguments[G__31564__i + 3]; ++G__31564__i;}
  args = new cljs.core.IndexedSeq(G__31564__a,0);
} 
return G__31563__delegate.call(this,x,y,z,args);};
G__31563.cljs$lang$maxFixedArity = 3;
G__31563.cljs$lang$applyTo = (function (arglist__31565){
var x = cljs.core.first(arglist__31565);
arglist__31565 = cljs.core.next(arglist__31565);
var y = cljs.core.first(arglist__31565);
arglist__31565 = cljs.core.next(arglist__31565);
var z = cljs.core.first(arglist__31565);
var args = cljs.core.rest(arglist__31565);
return G__31563__delegate(x,y,z,args);
});
G__31563.cljs$core$IFn$_invoke$arity$variadic = G__31563__delegate;
return G__31563;
})()
;
G__31562 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__31562__0.call(this);
case 1:
return G__31562__1.call(this,x);
case 2:
return G__31562__2.call(this,x,y);
case 3:
return G__31562__3.call(this,x,y,z);
default:
var G__31566 = null;
if (arguments.length > 3) {
var G__31567__i = 0, G__31567__a = new Array(arguments.length -  3);
while (G__31567__i < G__31567__a.length) {G__31567__a[G__31567__i] = arguments[G__31567__i + 3]; ++G__31567__i;}
G__31566 = new cljs.core.IndexedSeq(G__31567__a,0);
}
return G__31562__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__31566);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31562.cljs$lang$maxFixedArity = 3;
G__31562.cljs$lang$applyTo = G__31562__4.cljs$lang$applyTo;
G__31562.cljs$core$IFn$_invoke$arity$0 = G__31562__0;
G__31562.cljs$core$IFn$_invoke$arity$1 = G__31562__1;
G__31562.cljs$core$IFn$_invoke$arity$2 = G__31562__2;
G__31562.cljs$core$IFn$_invoke$arity$3 = G__31562__3;
G__31562.cljs$core$IFn$_invoke$arity$variadic = G__31562__4.cljs$core$IFn$_invoke$arity$variadic;
return G__31562;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__31568 = null;
var G__31568__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__31568__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__31532 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__31532) : f.call(null,G__31532));
})(),(function (){var G__31533 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__31533) : g.call(null,G__31533));
})(),(function (){var G__31534 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__31534) : h.call(null,G__31534));
})()],null));
});
var G__31568__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__31535 = x;
var G__31536 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31535,G__31536) : f.call(null,G__31535,G__31536));
})(),(function (){var G__31537 = x;
var G__31538 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__31537,G__31538) : g.call(null,G__31537,G__31538));
})(),(function (){var G__31539 = x;
var G__31540 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__31539,G__31540) : h.call(null,G__31539,G__31540));
})()],null));
});
var G__31568__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__31541 = x;
var G__31542 = y;
var G__31543 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__31541,G__31542,G__31543) : f.call(null,G__31541,G__31542,G__31543));
})(),(function (){var G__31544 = x;
var G__31545 = y;
var G__31546 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__31544,G__31545,G__31546) : g.call(null,G__31544,G__31545,G__31546));
})(),(function (){var G__31547 = x;
var G__31548 = y;
var G__31549 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__31547,G__31548,G__31549) : h.call(null,G__31547,G__31548,G__31549));
})()],null));
});
var G__31568__4 = (function() { 
var G__31569__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__31569 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__31570__i = 0, G__31570__a = new Array(arguments.length -  3);
while (G__31570__i < G__31570__a.length) {G__31570__a[G__31570__i] = arguments[G__31570__i + 3]; ++G__31570__i;}
  args = new cljs.core.IndexedSeq(G__31570__a,0);
} 
return G__31569__delegate.call(this,x,y,z,args);};
G__31569.cljs$lang$maxFixedArity = 3;
G__31569.cljs$lang$applyTo = (function (arglist__31571){
var x = cljs.core.first(arglist__31571);
arglist__31571 = cljs.core.next(arglist__31571);
var y = cljs.core.first(arglist__31571);
arglist__31571 = cljs.core.next(arglist__31571);
var z = cljs.core.first(arglist__31571);
var args = cljs.core.rest(arglist__31571);
return G__31569__delegate(x,y,z,args);
});
G__31569.cljs$core$IFn$_invoke$arity$variadic = G__31569__delegate;
return G__31569;
})()
;
G__31568 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__31568__0.call(this);
case 1:
return G__31568__1.call(this,x);
case 2:
return G__31568__2.call(this,x,y);
case 3:
return G__31568__3.call(this,x,y,z);
default:
var G__31572 = null;
if (arguments.length > 3) {
var G__31573__i = 0, G__31573__a = new Array(arguments.length -  3);
while (G__31573__i < G__31573__a.length) {G__31573__a[G__31573__i] = arguments[G__31573__i + 3]; ++G__31573__i;}
G__31572 = new cljs.core.IndexedSeq(G__31573__a,0);
}
return G__31568__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__31572);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31568.cljs$lang$maxFixedArity = 3;
G__31568.cljs$lang$applyTo = G__31568__4.cljs$lang$applyTo;
G__31568.cljs$core$IFn$_invoke$arity$0 = G__31568__0;
G__31568.cljs$core$IFn$_invoke$arity$1 = G__31568__1;
G__31568.cljs$core$IFn$_invoke$arity$2 = G__31568__2;
G__31568.cljs$core$IFn$_invoke$arity$3 = G__31568__3;
G__31568.cljs$core$IFn$_invoke$arity$variadic = G__31568__4.cljs$core$IFn$_invoke$arity$variadic;
return G__31568;
})()
});
var juxt__4 = (function() { 
var G__31574__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__31575 = null;
var G__31575__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__31462_SHARP_,p2__31463_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__31462_SHARP_,(function (){return (p2__31463_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__31463_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__31463_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__31575__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__31464_SHARP_,p2__31465_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__31464_SHARP_,(function (){var G__31550 = x;
return (p2__31465_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__31465_SHARP_.cljs$core$IFn$_invoke$arity$1(G__31550) : p2__31465_SHARP_.call(null,G__31550));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__31575__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__31466_SHARP_,p2__31467_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__31466_SHARP_,(function (){var G__31551 = x;
var G__31552 = y;
return (p2__31467_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__31467_SHARP_.cljs$core$IFn$_invoke$arity$2(G__31551,G__31552) : p2__31467_SHARP_.call(null,G__31551,G__31552));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__31575__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__31468_SHARP_,p2__31469_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__31468_SHARP_,(function (){var G__31553 = x;
var G__31554 = y;
var G__31555 = z;
return (p2__31469_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__31469_SHARP_.cljs$core$IFn$_invoke$arity$3(G__31553,G__31554,G__31555) : p2__31469_SHARP_.call(null,G__31553,G__31554,G__31555));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__31575__4 = (function() { 
var G__31576__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__31470_SHARP_,p2__31471_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__31470_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__31471_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__31576 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__31577__i = 0, G__31577__a = new Array(arguments.length -  3);
while (G__31577__i < G__31577__a.length) {G__31577__a[G__31577__i] = arguments[G__31577__i + 3]; ++G__31577__i;}
  args = new cljs.core.IndexedSeq(G__31577__a,0);
} 
return G__31576__delegate.call(this,x,y,z,args);};
G__31576.cljs$lang$maxFixedArity = 3;
G__31576.cljs$lang$applyTo = (function (arglist__31578){
var x = cljs.core.first(arglist__31578);
arglist__31578 = cljs.core.next(arglist__31578);
var y = cljs.core.first(arglist__31578);
arglist__31578 = cljs.core.next(arglist__31578);
var z = cljs.core.first(arglist__31578);
var args = cljs.core.rest(arglist__31578);
return G__31576__delegate(x,y,z,args);
});
G__31576.cljs$core$IFn$_invoke$arity$variadic = G__31576__delegate;
return G__31576;
})()
;
G__31575 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__31575__0.call(this);
case 1:
return G__31575__1.call(this,x);
case 2:
return G__31575__2.call(this,x,y);
case 3:
return G__31575__3.call(this,x,y,z);
default:
var G__31579 = null;
if (arguments.length > 3) {
var G__31580__i = 0, G__31580__a = new Array(arguments.length -  3);
while (G__31580__i < G__31580__a.length) {G__31580__a[G__31580__i] = arguments[G__31580__i + 3]; ++G__31580__i;}
G__31579 = new cljs.core.IndexedSeq(G__31580__a,0);
}
return G__31575__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__31579);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31575.cljs$lang$maxFixedArity = 3;
G__31575.cljs$lang$applyTo = G__31575__4.cljs$lang$applyTo;
G__31575.cljs$core$IFn$_invoke$arity$0 = G__31575__0;
G__31575.cljs$core$IFn$_invoke$arity$1 = G__31575__1;
G__31575.cljs$core$IFn$_invoke$arity$2 = G__31575__2;
G__31575.cljs$core$IFn$_invoke$arity$3 = G__31575__3;
G__31575.cljs$core$IFn$_invoke$arity$variadic = G__31575__4.cljs$core$IFn$_invoke$arity$variadic;
return G__31575;
})()
;})(fs__$1))
};
var G__31574 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__31581__i = 0, G__31581__a = new Array(arguments.length -  3);
while (G__31581__i < G__31581__a.length) {G__31581__a[G__31581__i] = arguments[G__31581__i + 3]; ++G__31581__i;}
  fs = new cljs.core.IndexedSeq(G__31581__a,0);
} 
return G__31574__delegate.call(this,f,g,h,fs);};
G__31574.cljs$lang$maxFixedArity = 3;
G__31574.cljs$lang$applyTo = (function (arglist__31582){
var f = cljs.core.first(arglist__31582);
arglist__31582 = cljs.core.next(arglist__31582);
var g = cljs.core.first(arglist__31582);
arglist__31582 = cljs.core.next(arglist__31582);
var h = cljs.core.first(arglist__31582);
var fs = cljs.core.rest(arglist__31582);
return G__31574__delegate(f,g,h,fs);
});
G__31574.cljs$core$IFn$_invoke$arity$variadic = G__31574__delegate;
return G__31574;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__31583 = null;
if (arguments.length > 3) {
var G__31584__i = 0, G__31584__a = new Array(arguments.length -  3);
while (G__31584__i < G__31584__a.length) {G__31584__a[G__31584__i] = arguments[G__31584__i + 3]; ++G__31584__i;}
G__31583 = new cljs.core.IndexedSeq(G__31584__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__31583);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__31585 = cljs.core.next(coll);
coll = G__31585;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__31586 = (n - (1));
var G__31587 = cljs.core.next(coll);
n = G__31586;
coll = G__31587;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__31591 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31591,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31591,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31591,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_31599 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if((cljs.core.constant$keyword$5.cljs$core$IFn$_invoke$arity$1(opts) === (0))){
if(cljs.core.seq(coll)){
cljs.core._write(writer,(function (){var or__16465__auto__ = cljs.core.constant$keyword$11.cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__16465__auto__)){
return or__16465__auto__;
} else {
return "...";
}
})());
} else {
}
} else {
if(cljs.core.seq(coll)){
var G__31600_31606 = cljs.core.first(coll);
var G__31601_31607 = writer;
var G__31602_31608 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__31600_31606,G__31601_31607,G__31602_31608) : print_one.call(null,G__31600_31606,G__31601_31607,G__31602_31608));
} else {
}

var coll_31609__$1 = cljs.core.next(coll);
var n_31610 = (cljs.core.constant$keyword$5.cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_31609__$1) && (((n_31610 == null)) || (!((n_31610 === (0)))))){
cljs.core._write(writer,sep);

var G__31603_31611 = cljs.core.first(coll_31609__$1);
var G__31604_31612 = writer;
var G__31605_31613 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__31603_31611,G__31604_31612,G__31605_31613) : print_one.call(null,G__31603_31611,G__31604_31612,G__31605_31613));

var G__31614 = cljs.core.next(coll_31609__$1);
var G__31615 = (n_31610 - (1));
coll_31609__$1 = G__31614;
n_31610 = G__31615;
continue;
} else {
if((cljs.core.seq(coll_31609__$1)) && ((n_31610 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,(function (){var or__16465__auto__ = cljs.core.constant$keyword$11.cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__16465__auto__)){
return or__16465__auto__;
} else {
return "...";
}
})());
} else {
}
}
break;
}
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_31599;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__31620 = cljs.core.seq(ss);
var chunk__31621 = null;
var count__31622 = (0);
var i__31623 = (0);
while(true){
if((i__31623 < count__31622)){
var s = chunk__31621.cljs$core$IIndexed$_nth$arity$2(null,i__31623);
cljs.core._write(writer,s);

var G__31624 = seq__31620;
var G__31625 = chunk__31621;
var G__31626 = count__31622;
var G__31627 = (i__31623 + (1));
seq__31620 = G__31624;
chunk__31621 = G__31625;
count__31622 = G__31626;
i__31623 = G__31627;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__31620);
if(temp__4126__auto__){
var seq__31620__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__31620__$1)){
var c__17252__auto__ = cljs.core.chunk_first(seq__31620__$1);
var G__31628 = cljs.core.chunk_rest(seq__31620__$1);
var G__31629 = c__17252__auto__;
var G__31630 = cljs.core.count(c__17252__auto__);
var G__31631 = (0);
seq__31620 = G__31628;
chunk__31621 = G__31629;
count__31622 = G__31630;
i__31623 = G__31631;
continue;
} else {
var s = cljs.core.first(seq__31620__$1);
cljs.core._write(writer,s);

var G__31632 = cljs.core.next(seq__31620__$1);
var G__31633 = null;
var G__31634 = (0);
var G__31635 = (0);
seq__31620 = G__31632;
chunk__31621 = G__31633;
count__31622 = G__31634;
i__31623 = G__31635;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__31636__i = 0, G__31636__a = new Array(arguments.length -  1);
while (G__31636__i < G__31636__a.length) {G__31636__a[G__31636__i] = arguments[G__31636__i + 1]; ++G__31636__i;}
  ss = new cljs.core.IndexedSeq(G__31636__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__31637){
var writer = cljs.core.first(arglist__31637);
var ss = cljs.core.rest(arglist__31637);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj31639 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj31639;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__31642 = "[\\\\\"\b\f\n\r\t]";
var G__31643 = "g";
return RegExp(G__31642,G__31643);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
cljs.core.pr_writer_impl = (function pr_writer_impl(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__16453__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,cljs.core.constant$keyword$3);
if(cljs.core.truth_(and__16453__auto__)){
var and__16453__auto____$1 = (function (){var G__31657 = obj;
if(G__31657){
var bit__17146__auto__ = (G__31657.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__17146__auto__) || (G__31657.cljs$core$IMeta$)){
return true;
} else {
if((!G__31657.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__31657);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__31657);
}
})();
if(and__16453__auto____$1){
return cljs.core.meta(obj);
} else {
return and__16453__auto____$1;
}
} else {
return and__16453__auto__;
}
})())){
cljs.core._write(writer,"^");

var G__31658_31668 = cljs.core.meta(obj);
var G__31659_31669 = writer;
var G__31660_31670 = opts;
(cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__31658_31668,G__31659_31669,G__31660_31670) : cljs.core.pr_writer.call(null,G__31658_31668,G__31659_31669,G__31660_31670));

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__31661 = obj;
if(G__31661){
var bit__17139__auto__ = (G__31661.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__17139__auto__) || (G__31661.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__31662 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__31663 = cljs.core.pr_writer;
var G__31664 = writer;
var G__31665 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__31662,G__31663,G__31664,G__31665) : cljs.core.print_map.call(null,G__31662,G__31663,G__31664,G__31665));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__31666 = obj;
return goog.isString(G__31666);
})())){
if(cljs.core.truth_(cljs.core.constant$keyword$2.cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__31671 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__31671;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__31667 = obj;
if(G__31667){
var bit__17146__auto__ = (G__31667.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__17146__auto__) || (G__31667.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__31667.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__31667);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__31667);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
var temp__4124__auto__ = cljs.core.constant$keyword$12.cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(temp__4124__auto__)){
var alt_impl = temp__4124__auto__;
var G__31675 = obj;
var G__31676 = writer;
var G__31677 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,cljs.core.constant$keyword$13,cljs.core.pr_writer_impl);
return (alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__31675,G__31676,G__31677) : alt_impl.call(null,G__31675,G__31676,G__31677));
} else {
return cljs.core.pr_writer_impl(obj,writer,opts);
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__31682 = cljs.core.seq(cljs.core.next(objs));
var chunk__31683 = null;
var count__31684 = (0);
var i__31685 = (0);
while(true){
if((i__31685 < count__31684)){
var obj = chunk__31683.cljs$core$IIndexed$_nth$arity$2(null,i__31685);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__31686 = seq__31682;
var G__31687 = chunk__31683;
var G__31688 = count__31684;
var G__31689 = (i__31685 + (1));
seq__31682 = G__31686;
chunk__31683 = G__31687;
count__31684 = G__31688;
i__31685 = G__31689;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__31682);
if(temp__4126__auto__){
var seq__31682__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__31682__$1)){
var c__17252__auto__ = cljs.core.chunk_first(seq__31682__$1);
var G__31690 = cljs.core.chunk_rest(seq__31682__$1);
var G__31691 = c__17252__auto__;
var G__31692 = cljs.core.count(c__17252__auto__);
var G__31693 = (0);
seq__31682 = G__31690;
chunk__31683 = G__31691;
count__31684 = G__31692;
i__31685 = G__31693;
continue;
} else {
var obj = cljs.core.first(seq__31682__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__31694 = cljs.core.next(seq__31682__$1);
var G__31695 = null;
var G__31696 = (0);
var G__31697 = (0);
seq__31682 = G__31694;
chunk__31683 = G__31695;
count__31684 = G__31696;
i__31685 = G__31697;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,cljs.core.constant$keyword$1))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__31698__i = 0, G__31698__a = new Array(arguments.length -  0);
while (G__31698__i < G__31698__a.length) {G__31698__a[G__31698__i] = arguments[G__31698__i + 0]; ++G__31698__i;}
  objs = new cljs.core.IndexedSeq(G__31698__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__31699){
var objs = cljs.core.seq(arglist__31699);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__31700__i = 0, G__31700__a = new Array(arguments.length -  0);
while (G__31700__i < G__31700__a.length) {G__31700__a[G__31700__i] = arguments[G__31700__i + 0]; ++G__31700__i;}
  objs = new cljs.core.IndexedSeq(G__31700__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__31701){
var objs = cljs.core.seq(arglist__31701);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__31702__i = 0, G__31702__a = new Array(arguments.length -  0);
while (G__31702__i < G__31702__a.length) {G__31702__a[G__31702__i] = arguments[G__31702__i + 0]; ++G__31702__i;}
  objs = new cljs.core.IndexedSeq(G__31702__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__31703){
var objs = cljs.core.seq(arglist__31703);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$2,false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__31704__i = 0, G__31704__a = new Array(arguments.length -  0);
while (G__31704__i < G__31704__a.length) {G__31704__a[G__31704__i] = arguments[G__31704__i + 0]; ++G__31704__i;}
  objs = new cljs.core.IndexedSeq(G__31704__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__31705){
var objs = cljs.core.seq(arglist__31705);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$2,false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__31706__i = 0, G__31706__a = new Array(arguments.length -  0);
while (G__31706__i < G__31706__a.length) {G__31706__a[G__31706__i] = arguments[G__31706__i + 0]; ++G__31706__i;}
  objs = new cljs.core.IndexedSeq(G__31706__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__31707){
var objs = cljs.core.seq(arglist__31707);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$2,false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__31708__i = 0, G__31708__a = new Array(arguments.length -  0);
while (G__31708__i < G__31708__a.length) {G__31708__a[G__31708__i] = arguments[G__31708__i + 0]; ++G__31708__i;}
  objs = new cljs.core.IndexedSeq(G__31708__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__31709){
var objs = cljs.core.seq(arglist__31709);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$2,false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__31710__i = 0, G__31710__a = new Array(arguments.length -  0);
while (G__31710__i < G__31710__a.length) {G__31710__a[G__31710__i] = arguments[G__31710__i + 0]; ++G__31710__i;}
  objs = new cljs.core.IndexedSeq(G__31710__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__31711){
var objs = cljs.core.seq(arglist__31711);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__31712__i = 0, G__31712__a = new Array(arguments.length -  0);
while (G__31712__i < G__31712__a.length) {G__31712__a[G__31712__i] = arguments[G__31712__i + 0]; ++G__31712__i;}
  objs = new cljs.core.IndexedSeq(G__31712__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__31713){
var objs = cljs.core.seq(arglist__31713);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__31720_31726 = cljs.core.key(e);
var G__31721_31727 = w;
var G__31722_31728 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__31720_31726,G__31721_31727,G__31722_31728) : print_one.call(null,G__31720_31726,G__31721_31727,G__31722_31728));

cljs.core._write(w," ");

var G__31723 = cljs.core.val(e);
var G__31724 = w;
var G__31725 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__31723,G__31724,G__31725) : print_one.call(null,G__31723,G__31724,G__31725));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__31729__i = 0, G__31729__a = new Array(arguments.length -  2);
while (G__31729__i < G__31729__a.length) {G__31729__a[G__31729__i] = arguments[G__31729__i + 2]; ++G__31729__i;}
  args = new cljs.core.IndexedSeq(G__31729__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__31730){
var iref = cljs.core.first(arglist__31730);
arglist__31730 = cljs.core.next(arglist__31730);
var f = cljs.core.first(arglist__31730);
var args = cljs.core.rest(arglist__31730);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__31733 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__31733) : cljs.core.atom.call(null,G__31733));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__17052__auto__,writer__17053__auto__,opt__17054__auto__){
return cljs.core._write(writer__17053__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__31735 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__31735) : cljs.core.deref.call(null,G__31735));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__31736_SHARP_,p2__31737_SHARP_){
var ret = (function (){var G__31740 = p1__31736_SHARP_;
var G__31741 = p2__31737_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__31740,G__31741) : rf.call(null,G__31740,G__31741));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__31744 = null;
var G__31744__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__31744__1 = (function (result){
var G__31743 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__31743) : rf.call(null,G__31743));
});
var G__31744__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__31744 = function(result,input){
switch(arguments.length){
case 0:
return G__31744__0.call(this);
case 1:
return G__31744__1.call(this,result);
case 2:
return G__31744__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31744.cljs$core$IFn$_invoke$arity$0 = G__31744__0;
G__31744.cljs$core$IFn$_invoke$arity$1 = G__31744__1;
G__31744.cljs$core$IFn$_invoke$arity$2 = G__31744__2;
return G__31744;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(cljs.core.constant$keyword$10);
return ((function (pa){
return (function() {
var G__31753 = null;
var G__31753__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__31753__1 = (function (result){
var G__31749 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__31749) : rf.call(null,G__31749));
});
var G__31753__2 = (function (result,input){
var prior = (function (){var G__31750 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__31750) : cljs.core.deref.call(null,G__31750));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__31751 = result;
var G__31752 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__31751,G__31752) : rf.call(null,G__31751,G__31752));
}
});
G__31753 = function(result,input){
switch(arguments.length){
case 0:
return G__31753__0.call(this);
case 1:
return G__31753__1.call(this,result);
case 2:
return G__31753__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31753.cljs$core$IFn$_invoke$arity$0 = G__31753__0;
G__31753.cljs$core$IFn$_invoke$arity$1 = G__31753__1;
G__31753.cljs$core$IFn$_invoke$arity$2 = G__31753__2;
return G__31753;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__17052__auto__,writer__17053__auto__,opt__17054__auto__){
return cljs.core._write(writer__17053__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17443__auto__ = this;
return cljs.core.es6_iterator(this__17443__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__31755_SHARP_,p2__31754_SHARP_){
var G__31757 = p2__31754_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__31757) : proc.call(null,G__31757));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj31759 = {};
return obj31759;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__16453__auto__ = x;
if(and__16453__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__16453__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__17109__auto__ = (((x == null))?null:x);
return (function (){var or__16465__auto__ = (cljs.core._clj__GT_js[(function (){var G__31763 = x__17109__auto__;
return goog.typeOf(G__31763);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__16453__auto__ = x;
if(and__16453__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__16453__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__17109__auto__ = (((x == null))?null:x);
return (function (){var or__16465__auto__ = (cljs.core._key__GT_js[(function (){var G__31767 = x__17109__auto__;
return goog.typeOf(G__31767);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__31770 = k;
if(G__31770){
var bit__17146__auto__ = null;
if(cljs.core.truth_((function (){var or__16465__auto__ = bit__17146__auto__;
if(cljs.core.truth_(or__16465__auto__)){
return or__16465__auto__;
} else {
return G__31770.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__31770.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__31770);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__31770);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__31771 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__31771) : cljs.core.clj__GT_js.call(null,G__31771));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__31787 = x;
if(G__31787){
var bit__17146__auto__ = null;
if(cljs.core.truth_((function (){var or__16465__auto__ = bit__17146__auto__;
if(cljs.core.truth_(or__16465__auto__)){
return or__16465__auto__;
} else {
return G__31787.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__31787.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__31787);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__31787);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj31789 = {};
return obj31789;
})();
var seq__31790_31800 = cljs.core.seq(x);
var chunk__31791_31801 = null;
var count__31792_31802 = (0);
var i__31793_31803 = (0);
while(true){
if((i__31793_31803 < count__31792_31802)){
var vec__31794_31804 = chunk__31791_31801.cljs$core$IIndexed$_nth$arity$2(null,i__31793_31803);
var k_31805 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31794_31804,(0),null);
var v_31806 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31794_31804,(1),null);
(m[cljs.core.key__GT_js(k_31805)] = clj__GT_js(v_31806));

var G__31807 = seq__31790_31800;
var G__31808 = chunk__31791_31801;
var G__31809 = count__31792_31802;
var G__31810 = (i__31793_31803 + (1));
seq__31790_31800 = G__31807;
chunk__31791_31801 = G__31808;
count__31792_31802 = G__31809;
i__31793_31803 = G__31810;
continue;
} else {
var temp__4126__auto___31811 = cljs.core.seq(seq__31790_31800);
if(temp__4126__auto___31811){
var seq__31790_31812__$1 = temp__4126__auto___31811;
if(cljs.core.chunked_seq_QMARK_(seq__31790_31812__$1)){
var c__17252__auto___31813 = cljs.core.chunk_first(seq__31790_31812__$1);
var G__31814 = cljs.core.chunk_rest(seq__31790_31812__$1);
var G__31815 = c__17252__auto___31813;
var G__31816 = cljs.core.count(c__17252__auto___31813);
var G__31817 = (0);
seq__31790_31800 = G__31814;
chunk__31791_31801 = G__31815;
count__31792_31802 = G__31816;
i__31793_31803 = G__31817;
continue;
} else {
var vec__31795_31818 = cljs.core.first(seq__31790_31812__$1);
var k_31819 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31795_31818,(0),null);
var v_31820 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31795_31818,(1),null);
(m[cljs.core.key__GT_js(k_31819)] = clj__GT_js(v_31820));

var G__31821 = cljs.core.next(seq__31790_31812__$1);
var G__31822 = null;
var G__31823 = (0);
var G__31824 = (0);
seq__31790_31800 = G__31821;
chunk__31791_31801 = G__31822;
count__31792_31802 = G__31823;
i__31793_31803 = G__31824;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__31796_31825 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__31797_31826 = null;
var count__31798_31827 = (0);
var i__31799_31828 = (0);
while(true){
if((i__31799_31828 < count__31798_31827)){
var x_31829__$1 = chunk__31797_31826.cljs$core$IIndexed$_nth$arity$2(null,i__31799_31828);
arr.push(x_31829__$1);

var G__31830 = seq__31796_31825;
var G__31831 = chunk__31797_31826;
var G__31832 = count__31798_31827;
var G__31833 = (i__31799_31828 + (1));
seq__31796_31825 = G__31830;
chunk__31797_31826 = G__31831;
count__31798_31827 = G__31832;
i__31799_31828 = G__31833;
continue;
} else {
var temp__4126__auto___31834 = cljs.core.seq(seq__31796_31825);
if(temp__4126__auto___31834){
var seq__31796_31835__$1 = temp__4126__auto___31834;
if(cljs.core.chunked_seq_QMARK_(seq__31796_31835__$1)){
var c__17252__auto___31836 = cljs.core.chunk_first(seq__31796_31835__$1);
var G__31837 = cljs.core.chunk_rest(seq__31796_31835__$1);
var G__31838 = c__17252__auto___31836;
var G__31839 = cljs.core.count(c__17252__auto___31836);
var G__31840 = (0);
seq__31796_31825 = G__31837;
chunk__31797_31826 = G__31838;
count__31798_31827 = G__31839;
i__31799_31828 = G__31840;
continue;
} else {
var x_31841__$1 = cljs.core.first(seq__31796_31835__$1);
arr.push(x_31841__$1);

var G__31842 = cljs.core.next(seq__31796_31835__$1);
var G__31843 = null;
var G__31844 = (0);
var G__31845 = (0);
seq__31796_31825 = G__31842;
chunk__31797_31826 = G__31843;
count__31798_31827 = G__31844;
i__31799_31828 = G__31845;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj31847 = {};
return obj31847;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__16453__auto__ = x;
if(and__16453__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__16453__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__17109__auto__ = (((x == null))?null:x);
return (function (){var or__16465__auto__ = (cljs.core._js__GT_clj[(function (){var G__31851 = x__17109__auto__;
return goog.typeOf(G__31851);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$14,false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__31908__delegate = function (x,opts){
var map__31881 = opts;
var map__31881__$1 = ((cljs.core.seq_QMARK_(map__31881))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__31881):map__31881);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31881__$1,cljs.core.constant$keyword$14);
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__31881,map__31881__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__31897 = x__$1;
if(G__31897){
var bit__17146__auto__ = null;
if(cljs.core.truth_((function (){var or__16465__auto__ = bit__17146__auto__;
if(cljs.core.truth_(or__16465__auto__)){
return or__16465__auto__;
} else {
return G__31897.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__31897.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__31897);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__31897);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__17221__auto__ = ((function (map__31881,map__31881__$1,keywordize_keys,keyfn){
return (function iter__31898(s__31899){
return (new cljs.core.LazySeq(null,((function (map__31881,map__31881__$1,keywordize_keys,keyfn){
return (function (){
var s__31899__$1 = s__31899;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__31899__$1);
if(temp__4126__auto__){
var s__31899__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__31899__$2)){
var c__17219__auto__ = cljs.core.chunk_first(s__31899__$2);
var size__17220__auto__ = cljs.core.count(c__17219__auto__);
var b__31901 = cljs.core.chunk_buffer(size__17220__auto__);
if((function (){var i__31900 = (0);
while(true){
if((i__31900 < size__17220__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__17219__auto__,i__31900);
cljs.core.chunk_append(b__31901,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__31906 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__31906) : keyfn.call(null,G__31906));
})(),thisfn((x__$1[k]))], null));

var G__31909 = (i__31900 + (1));
i__31900 = G__31909;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__31901),iter__31898(cljs.core.chunk_rest(s__31899__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__31901),null);
}
} else {
var k = cljs.core.first(s__31899__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__31907 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__31907) : keyfn.call(null,G__31907));
})(),thisfn((x__$1[k]))], null),iter__31898(cljs.core.rest(s__31899__$2)));
}
} else {
return null;
}
break;
}
});})(map__31881,map__31881__$1,keywordize_keys,keyfn))
,null,null));
});})(map__31881,map__31881__$1,keywordize_keys,keyfn))
;
return iter__17221__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__31881,map__31881__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__31908 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__31910__i = 0, G__31910__a = new Array(arguments.length -  1);
while (G__31910__i < G__31910__a.length) {G__31910__a[G__31910__i] = arguments[G__31910__i + 1]; ++G__31910__i;}
  opts = new cljs.core.IndexedSeq(G__31910__a,0);
} 
return G__31908__delegate.call(this,x,opts);};
G__31908.cljs$lang$maxFixedArity = 1;
G__31908.cljs$lang$applyTo = (function (arglist__31911){
var x = cljs.core.first(arglist__31911);
var opts = cljs.core.rest(arglist__31911);
return G__31908__delegate(x,opts);
});
G__31908.cljs$core$IFn$_invoke$arity$variadic = G__31908__delegate;
return G__31908;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__31912 = null;
if (arguments.length > 1) {
var G__31913__i = 0, G__31913__a = new Array(arguments.length -  1);
while (G__31913__i < G__31913__a.length) {G__31913__a[G__31913__i] = arguments[G__31913__i + 1]; ++G__31913__i;}
G__31912 = new cljs.core.IndexedSeq(G__31913__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__31912);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__31916 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__31916) : cljs.core.atom.call(null,G__31916));
})();
return ((function (mem){
return (function() { 
var G__31918__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__31917 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__31917) : cljs.core.deref.call(null,G__31917));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__31918 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__31919__i = 0, G__31919__a = new Array(arguments.length -  0);
while (G__31919__i < G__31919__a.length) {G__31919__a[G__31919__i] = arguments[G__31919__i + 0]; ++G__31919__i;}
  args = new cljs.core.IndexedSeq(G__31919__a,0);
} 
return G__31918__delegate.call(this,args);};
G__31918.cljs$lang$maxFixedArity = 0;
G__31918.cljs$lang$applyTo = (function (arglist__31920){
var args = cljs.core.seq(arglist__31920);
return G__31918__delegate(args);
});
G__31918.cljs$core$IFn$_invoke$arity$variadic = G__31918__delegate;
return G__31918;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__31922 = ret;
f = G__31922;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__31923__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__31923 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__31924__i = 0, G__31924__a = new Array(arguments.length -  1);
while (G__31924__i < G__31924__a.length) {G__31924__a[G__31924__i] = arguments[G__31924__i + 1]; ++G__31924__i;}
  args = new cljs.core.IndexedSeq(G__31924__a,0);
} 
return G__31923__delegate.call(this,f,args);};
G__31923.cljs$lang$maxFixedArity = 1;
G__31923.cljs$lang$applyTo = (function (arglist__31925){
var f = cljs.core.first(arglist__31925);
var args = cljs.core.rest(arglist__31925);
return G__31923__delegate(f,args);
});
G__31923.cljs$core$IFn$_invoke$arity$variadic = G__31923__delegate;
return G__31923;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__31926 = null;
if (arguments.length > 1) {
var G__31927__i = 0, G__31927__a = new Array(arguments.length -  1);
while (G__31927__i < G__31927__a.length) {G__31927__a[G__31927__i] = arguments[G__31927__i + 1]; ++G__31927__i;}
G__31926 = new cljs.core.IndexedSeq(G__31927__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__31926);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__31930 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__31930) : Math.floor.call(null,G__31930));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__31932 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__31932) : f.call(null,G__31932));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$15,cljs.core.PersistentArrayMap.EMPTY,cljs.core.constant$keyword$16,cljs.core.PersistentArrayMap.EMPTY,cljs.core.constant$keyword$17,cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__31934 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__31934) : cljs.core.atom.call(null,G__31934));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__31935__i = 0, G__31935__a = new Array(arguments.length -  1);
while (G__31935__i < G__31935__a.length) {G__31935__a[G__31935__i] = arguments[G__31935__i + 1]; ++G__31935__i;}
  args = new cljs.core.IndexedSeq(G__31935__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__31936){
var f = cljs.core.first(arglist__31936);
var args = cljs.core.rest(arglist__31936);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__32001 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32001) : cljs.core.deref.call(null,G__32001));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__16465__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = cljs.core.contains_QMARK_(cljs.core.constant$keyword$17.cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
var and__16453__auto__ = cljs.core.vector_QMARK_(parent);
if(and__16453__auto__){
var and__16453__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__16453__auto____$1){
var and__16453__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__16453__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__32026 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__32024 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__32024) : child.call(null,G__32024));
})(),(function (){var G__32025 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__32025) : parent.call(null,G__32025));
})());
var G__32027 = (i + (1));
ret = G__32026;
i = G__32027;
continue;
}
break;
}
} else {
return and__16453__auto____$2;
}
} else {
return and__16453__auto____$1;
}
} else {
return and__16453__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__32031 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32031) : cljs.core.deref.call(null,G__32031));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$15.cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__32035 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32035) : cljs.core.deref.call(null,G__32035));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$17.cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__32039 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32039) : cljs.core.deref.call(null,G__32039));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$16.cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = cljs.core.constant$keyword$15.cljs$core$IFn$_invoke$arity$1(h);
var td = cljs.core.constant$keyword$16.cljs$core$IFn$_invoke$arity$1(h);
var ta = cljs.core.constant$keyword$17.cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__32048 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__32048) : targets.call(null,G__32048));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__32049 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__32049) : sources.call(null,G__32049));
})()));
});})(tp,td,ta))
;
var or__16465__auto__ = ((cljs.core.contains_QMARK_((function (){var G__32053 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__32053) : tp.call(null,G__32053));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__32054 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__32054) : ta.call(null,G__32054));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__32055 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__32055) : ta.call(null,G__32055));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$15,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.constant$keyword$15.cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),cljs.core.constant$keyword$17,tf(cljs.core.constant$keyword$17.cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),cljs.core.constant$keyword$16,tf(cljs.core.constant$keyword$16.cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__16465__auto__)){
return or__16465__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = cljs.core.constant$keyword$15.cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__32062 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__32062) : parentMap.call(null,G__32062));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__32063 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__32063) : parentMap.call(null,G__32063));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__32056_SHARP_){
return cljs.core.cons(cljs.core.first(p1__32056_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__32056_SHARP_),cljs.core.second(p1__32056_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__32064 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__32064) : parentMap.call(null,G__32064));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__32057_SHARP_,p2__32058_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__32057_SHARP_,p2__32058_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__32067 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32067) : cljs.core.deref.call(null,G__32067));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__32068 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32068) : cljs.core.deref.call(null,G__32068));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__32084 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32084) : cljs.core.deref.call(null,G__32084));
})().call(null,x);
var or__16465__auto__ = (cljs.core.truth_((function (){var and__16453__auto__ = xprefs;
if(cljs.core.truth_(and__16453__auto__)){
var G__32086 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__32086) : xprefs.call(null,G__32086));
} else {
return and__16453__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__16465__auto__)){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__32087 = cljs.core.rest(ps);
ps = G__32087;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__16465__auto____$1)){
return or__16465__auto____$1;
} else {
var or__16465__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__32088 = cljs.core.rest(ps);
ps = G__32088;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__16465__auto____$2)){
return or__16465__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__16465__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__16465__auto__)){
return or__16465__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__32102){
var vec__32103 = p__32102;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32103,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32103,(1),null);
var e = vec__32103;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__32104 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32104) : cljs.core.deref.call(null,G__32104));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__16465__auto__ = (be == null);
if(or__16465__auto__){
return or__16465__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__32105 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32105) : cljs.core.deref.call(null,G__32105));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__32106 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32106) : cljs.core.deref.call(null,G__32106));
})(),(function (){var G__32107 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32107) : cljs.core.deref.call(null,G__32107));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj32109 = {};
return obj32109;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__16453__auto__ = mf;
if(and__16453__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__16453__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__17109__auto__ = (((mf == null))?null:mf);
return (function (){var or__16465__auto__ = (cljs.core._reset[(function (){var G__32113 = x__17109__auto__;
return goog.typeOf(G__32113);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._reset["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__16453__auto__ = mf;
if(and__16453__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__16453__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__17109__auto__ = (((mf == null))?null:mf);
return (function (){var or__16465__auto__ = (cljs.core._add_method[(function (){var G__32117 = x__17109__auto__;
return goog.typeOf(G__32117);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._add_method["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__16453__auto__ = mf;
if(and__16453__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__16453__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__17109__auto__ = (((mf == null))?null:mf);
return (function (){var or__16465__auto__ = (cljs.core._remove_method[(function (){var G__32121 = x__17109__auto__;
return goog.typeOf(G__32121);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._remove_method["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__16453__auto__ = mf;
if(and__16453__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__16453__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__17109__auto__ = (((mf == null))?null:mf);
return (function (){var or__16465__auto__ = (cljs.core._prefer_method[(function (){var G__32125 = x__17109__auto__;
return goog.typeOf(G__32125);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__16453__auto__ = mf;
if(and__16453__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__16453__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__17109__auto__ = (((mf == null))?null:mf);
return (function (){var or__16465__auto__ = (cljs.core._get_method[(function (){var G__32129 = x__17109__auto__;
return goog.typeOf(G__32129);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._get_method["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__16453__auto__ = mf;
if(and__16453__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__16453__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__17109__auto__ = (((mf == null))?null:mf);
return (function (){var or__16465__auto__ = (cljs.core._methods[(function (){var G__32133 = x__17109__auto__;
return goog.typeOf(G__32133);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._methods["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__16453__auto__ = mf;
if(and__16453__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__16453__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__17109__auto__ = (((mf == null))?null:mf);
return (function (){var or__16465__auto__ = (cljs.core._prefers[(function (){var G__32137 = x__17109__auto__;
return goog.typeOf(G__32137);
})()]);
if(or__16465__auto__){
return or__16465__auto__;
} else {
var or__16465__auto____$1 = (cljs.core._prefers["_"]);
if(or__16465__auto____$1){
return or__16465__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__32139 = this$__$1;
return goog.getUid(G__32139);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__32140 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32140) : cljs.core.deref.call(null,G__32140));
})(),(function (){var G__32141 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32141) : cljs.core.deref.call(null,G__32141));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__32142 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32142) : cljs.core.deref.call(null,G__32142));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__32143 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32143) : cljs.core.deref.call(null,G__32143));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__32144 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32144) : cljs.core.deref.call(null,G__32144));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__32145 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32145) : cljs.core.deref.call(null,G__32145));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__32986 = null;
var G__32986__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__32986__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__32146 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__32146) : self__.dispatch_fn.call(null,G__32146));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32147 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__32147) : target_fn.call(null,G__32147));
});
var G__32986__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__32148 = a;
var G__32149 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__32148,G__32149) : self__.dispatch_fn.call(null,G__32148,G__32149));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32150 = a;
var G__32151 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__32150,G__32151) : target_fn.call(null,G__32150,G__32151));
});
var G__32986__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__32152 = a;
var G__32153 = b;
var G__32154 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__32152,G__32153,G__32154) : self__.dispatch_fn.call(null,G__32152,G__32153,G__32154));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32155 = a;
var G__32156 = b;
var G__32157 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__32155,G__32156,G__32157) : target_fn.call(null,G__32155,G__32156,G__32157));
});
var G__32986__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__32158 = a;
var G__32159 = b;
var G__32160 = c;
var G__32161 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__32158,G__32159,G__32160,G__32161) : self__.dispatch_fn.call(null,G__32158,G__32159,G__32160,G__32161));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32162 = a;
var G__32163 = b;
var G__32164 = c;
var G__32165 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__32162,G__32163,G__32164,G__32165) : target_fn.call(null,G__32162,G__32163,G__32164,G__32165));
});
var G__32986__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__32166 = a;
var G__32167 = b;
var G__32168 = c;
var G__32169 = d;
var G__32170 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__32166,G__32167,G__32168,G__32169,G__32170) : self__.dispatch_fn.call(null,G__32166,G__32167,G__32168,G__32169,G__32170));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32171 = a;
var G__32172 = b;
var G__32173 = c;
var G__32174 = d;
var G__32175 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__32171,G__32172,G__32173,G__32174,G__32175) : target_fn.call(null,G__32171,G__32172,G__32173,G__32174,G__32175));
});
var G__32986__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__32176 = a;
var G__32177 = b;
var G__32178 = c;
var G__32179 = d;
var G__32180 = e;
var G__32181 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__32176,G__32177,G__32178,G__32179,G__32180,G__32181) : self__.dispatch_fn.call(null,G__32176,G__32177,G__32178,G__32179,G__32180,G__32181));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32182 = a;
var G__32183 = b;
var G__32184 = c;
var G__32185 = d;
var G__32186 = e;
var G__32187 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__32182,G__32183,G__32184,G__32185,G__32186,G__32187) : target_fn.call(null,G__32182,G__32183,G__32184,G__32185,G__32186,G__32187));
});
var G__32986__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__32188 = a;
var G__32189 = b;
var G__32190 = c;
var G__32191 = d;
var G__32192 = e;
var G__32193 = f;
var G__32194 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__32188,G__32189,G__32190,G__32191,G__32192,G__32193,G__32194) : self__.dispatch_fn.call(null,G__32188,G__32189,G__32190,G__32191,G__32192,G__32193,G__32194));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32195 = a;
var G__32196 = b;
var G__32197 = c;
var G__32198 = d;
var G__32199 = e;
var G__32200 = f;
var G__32201 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__32195,G__32196,G__32197,G__32198,G__32199,G__32200,G__32201) : target_fn.call(null,G__32195,G__32196,G__32197,G__32198,G__32199,G__32200,G__32201));
});
var G__32986__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__32202 = a;
var G__32203 = b;
var G__32204 = c;
var G__32205 = d;
var G__32206 = e;
var G__32207 = f;
var G__32208 = g;
var G__32209 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__32202,G__32203,G__32204,G__32205,G__32206,G__32207,G__32208,G__32209) : self__.dispatch_fn.call(null,G__32202,G__32203,G__32204,G__32205,G__32206,G__32207,G__32208,G__32209));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32210 = a;
var G__32211 = b;
var G__32212 = c;
var G__32213 = d;
var G__32214 = e;
var G__32215 = f;
var G__32216 = g;
var G__32217 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__32210,G__32211,G__32212,G__32213,G__32214,G__32215,G__32216,G__32217) : target_fn.call(null,G__32210,G__32211,G__32212,G__32213,G__32214,G__32215,G__32216,G__32217));
});
var G__32986__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__32218 = a;
var G__32219 = b;
var G__32220 = c;
var G__32221 = d;
var G__32222 = e;
var G__32223 = f;
var G__32224 = g;
var G__32225 = h;
var G__32226 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__32218,G__32219,G__32220,G__32221,G__32222,G__32223,G__32224,G__32225,G__32226) : self__.dispatch_fn.call(null,G__32218,G__32219,G__32220,G__32221,G__32222,G__32223,G__32224,G__32225,G__32226));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32227 = a;
var G__32228 = b;
var G__32229 = c;
var G__32230 = d;
var G__32231 = e;
var G__32232 = f;
var G__32233 = g;
var G__32234 = h;
var G__32235 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__32227,G__32228,G__32229,G__32230,G__32231,G__32232,G__32233,G__32234,G__32235) : target_fn.call(null,G__32227,G__32228,G__32229,G__32230,G__32231,G__32232,G__32233,G__32234,G__32235));
});
var G__32986__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__32236 = a;
var G__32237 = b;
var G__32238 = c;
var G__32239 = d;
var G__32240 = e;
var G__32241 = f;
var G__32242 = g;
var G__32243 = h;
var G__32244 = i;
var G__32245 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__32236,G__32237,G__32238,G__32239,G__32240,G__32241,G__32242,G__32243,G__32244,G__32245) : self__.dispatch_fn.call(null,G__32236,G__32237,G__32238,G__32239,G__32240,G__32241,G__32242,G__32243,G__32244,G__32245));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32246 = a;
var G__32247 = b;
var G__32248 = c;
var G__32249 = d;
var G__32250 = e;
var G__32251 = f;
var G__32252 = g;
var G__32253 = h;
var G__32254 = i;
var G__32255 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__32246,G__32247,G__32248,G__32249,G__32250,G__32251,G__32252,G__32253,G__32254,G__32255) : target_fn.call(null,G__32246,G__32247,G__32248,G__32249,G__32250,G__32251,G__32252,G__32253,G__32254,G__32255));
});
var G__32986__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__32256 = a;
var G__32257 = b;
var G__32258 = c;
var G__32259 = d;
var G__32260 = e;
var G__32261 = f;
var G__32262 = g;
var G__32263 = h;
var G__32264 = i;
var G__32265 = j;
var G__32266 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__32256,G__32257,G__32258,G__32259,G__32260,G__32261,G__32262,G__32263,G__32264,G__32265,G__32266) : self__.dispatch_fn.call(null,G__32256,G__32257,G__32258,G__32259,G__32260,G__32261,G__32262,G__32263,G__32264,G__32265,G__32266));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32267 = a;
var G__32268 = b;
var G__32269 = c;
var G__32270 = d;
var G__32271 = e;
var G__32272 = f;
var G__32273 = g;
var G__32274 = h;
var G__32275 = i;
var G__32276 = j;
var G__32277 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__32267,G__32268,G__32269,G__32270,G__32271,G__32272,G__32273,G__32274,G__32275,G__32276,G__32277) : target_fn.call(null,G__32267,G__32268,G__32269,G__32270,G__32271,G__32272,G__32273,G__32274,G__32275,G__32276,G__32277));
});
var G__32986__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__32278 = a;
var G__32279 = b;
var G__32280 = c;
var G__32281 = d;
var G__32282 = e;
var G__32283 = f;
var G__32284 = g;
var G__32285 = h;
var G__32286 = i;
var G__32287 = j;
var G__32288 = k;
var G__32289 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__32278,G__32279,G__32280,G__32281,G__32282,G__32283,G__32284,G__32285,G__32286,G__32287,G__32288,G__32289) : self__.dispatch_fn.call(null,G__32278,G__32279,G__32280,G__32281,G__32282,G__32283,G__32284,G__32285,G__32286,G__32287,G__32288,G__32289));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32290 = a;
var G__32291 = b;
var G__32292 = c;
var G__32293 = d;
var G__32294 = e;
var G__32295 = f;
var G__32296 = g;
var G__32297 = h;
var G__32298 = i;
var G__32299 = j;
var G__32300 = k;
var G__32301 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__32290,G__32291,G__32292,G__32293,G__32294,G__32295,G__32296,G__32297,G__32298,G__32299,G__32300,G__32301) : target_fn.call(null,G__32290,G__32291,G__32292,G__32293,G__32294,G__32295,G__32296,G__32297,G__32298,G__32299,G__32300,G__32301));
});
var G__32986__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__32302 = a;
var G__32303 = b;
var G__32304 = c;
var G__32305 = d;
var G__32306 = e;
var G__32307 = f;
var G__32308 = g;
var G__32309 = h;
var G__32310 = i;
var G__32311 = j;
var G__32312 = k;
var G__32313 = l;
var G__32314 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__32302,G__32303,G__32304,G__32305,G__32306,G__32307,G__32308,G__32309,G__32310,G__32311,G__32312,G__32313,G__32314) : self__.dispatch_fn.call(null,G__32302,G__32303,G__32304,G__32305,G__32306,G__32307,G__32308,G__32309,G__32310,G__32311,G__32312,G__32313,G__32314));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32315 = a;
var G__32316 = b;
var G__32317 = c;
var G__32318 = d;
var G__32319 = e;
var G__32320 = f;
var G__32321 = g;
var G__32322 = h;
var G__32323 = i;
var G__32324 = j;
var G__32325 = k;
var G__32326 = l;
var G__32327 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__32315,G__32316,G__32317,G__32318,G__32319,G__32320,G__32321,G__32322,G__32323,G__32324,G__32325,G__32326,G__32327) : target_fn.call(null,G__32315,G__32316,G__32317,G__32318,G__32319,G__32320,G__32321,G__32322,G__32323,G__32324,G__32325,G__32326,G__32327));
});
var G__32986__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__32328 = a;
var G__32329 = b;
var G__32330 = c;
var G__32331 = d;
var G__32332 = e;
var G__32333 = f;
var G__32334 = g;
var G__32335 = h;
var G__32336 = i;
var G__32337 = j;
var G__32338 = k;
var G__32339 = l;
var G__32340 = m;
var G__32341 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__32328,G__32329,G__32330,G__32331,G__32332,G__32333,G__32334,G__32335,G__32336,G__32337,G__32338,G__32339,G__32340,G__32341) : self__.dispatch_fn.call(null,G__32328,G__32329,G__32330,G__32331,G__32332,G__32333,G__32334,G__32335,G__32336,G__32337,G__32338,G__32339,G__32340,G__32341));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32342 = a;
var G__32343 = b;
var G__32344 = c;
var G__32345 = d;
var G__32346 = e;
var G__32347 = f;
var G__32348 = g;
var G__32349 = h;
var G__32350 = i;
var G__32351 = j;
var G__32352 = k;
var G__32353 = l;
var G__32354 = m;
var G__32355 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__32342,G__32343,G__32344,G__32345,G__32346,G__32347,G__32348,G__32349,G__32350,G__32351,G__32352,G__32353,G__32354,G__32355) : target_fn.call(null,G__32342,G__32343,G__32344,G__32345,G__32346,G__32347,G__32348,G__32349,G__32350,G__32351,G__32352,G__32353,G__32354,G__32355));
});
var G__32986__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__32356 = a;
var G__32357 = b;
var G__32358 = c;
var G__32359 = d;
var G__32360 = e;
var G__32361 = f;
var G__32362 = g;
var G__32363 = h;
var G__32364 = i;
var G__32365 = j;
var G__32366 = k;
var G__32367 = l;
var G__32368 = m;
var G__32369 = n;
var G__32370 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__32356,G__32357,G__32358,G__32359,G__32360,G__32361,G__32362,G__32363,G__32364,G__32365,G__32366,G__32367,G__32368,G__32369,G__32370) : self__.dispatch_fn.call(null,G__32356,G__32357,G__32358,G__32359,G__32360,G__32361,G__32362,G__32363,G__32364,G__32365,G__32366,G__32367,G__32368,G__32369,G__32370));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32371 = a;
var G__32372 = b;
var G__32373 = c;
var G__32374 = d;
var G__32375 = e;
var G__32376 = f;
var G__32377 = g;
var G__32378 = h;
var G__32379 = i;
var G__32380 = j;
var G__32381 = k;
var G__32382 = l;
var G__32383 = m;
var G__32384 = n;
var G__32385 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__32371,G__32372,G__32373,G__32374,G__32375,G__32376,G__32377,G__32378,G__32379,G__32380,G__32381,G__32382,G__32383,G__32384,G__32385) : target_fn.call(null,G__32371,G__32372,G__32373,G__32374,G__32375,G__32376,G__32377,G__32378,G__32379,G__32380,G__32381,G__32382,G__32383,G__32384,G__32385));
});
var G__32986__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__32386 = a;
var G__32387 = b;
var G__32388 = c;
var G__32389 = d;
var G__32390 = e;
var G__32391 = f;
var G__32392 = g;
var G__32393 = h;
var G__32394 = i;
var G__32395 = j;
var G__32396 = k;
var G__32397 = l;
var G__32398 = m;
var G__32399 = n;
var G__32400 = o;
var G__32401 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__32386,G__32387,G__32388,G__32389,G__32390,G__32391,G__32392,G__32393,G__32394,G__32395,G__32396,G__32397,G__32398,G__32399,G__32400,G__32401) : self__.dispatch_fn.call(null,G__32386,G__32387,G__32388,G__32389,G__32390,G__32391,G__32392,G__32393,G__32394,G__32395,G__32396,G__32397,G__32398,G__32399,G__32400,G__32401));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32402 = a;
var G__32403 = b;
var G__32404 = c;
var G__32405 = d;
var G__32406 = e;
var G__32407 = f;
var G__32408 = g;
var G__32409 = h;
var G__32410 = i;
var G__32411 = j;
var G__32412 = k;
var G__32413 = l;
var G__32414 = m;
var G__32415 = n;
var G__32416 = o;
var G__32417 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__32402,G__32403,G__32404,G__32405,G__32406,G__32407,G__32408,G__32409,G__32410,G__32411,G__32412,G__32413,G__32414,G__32415,G__32416,G__32417) : target_fn.call(null,G__32402,G__32403,G__32404,G__32405,G__32406,G__32407,G__32408,G__32409,G__32410,G__32411,G__32412,G__32413,G__32414,G__32415,G__32416,G__32417));
});
var G__32986__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__32418 = a;
var G__32419 = b;
var G__32420 = c;
var G__32421 = d;
var G__32422 = e;
var G__32423 = f;
var G__32424 = g;
var G__32425 = h;
var G__32426 = i;
var G__32427 = j;
var G__32428 = k;
var G__32429 = l;
var G__32430 = m;
var G__32431 = n;
var G__32432 = o;
var G__32433 = p;
var G__32434 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__32418,G__32419,G__32420,G__32421,G__32422,G__32423,G__32424,G__32425,G__32426,G__32427,G__32428,G__32429,G__32430,G__32431,G__32432,G__32433,G__32434) : self__.dispatch_fn.call(null,G__32418,G__32419,G__32420,G__32421,G__32422,G__32423,G__32424,G__32425,G__32426,G__32427,G__32428,G__32429,G__32430,G__32431,G__32432,G__32433,G__32434));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32435 = a;
var G__32436 = b;
var G__32437 = c;
var G__32438 = d;
var G__32439 = e;
var G__32440 = f;
var G__32441 = g;
var G__32442 = h;
var G__32443 = i;
var G__32444 = j;
var G__32445 = k;
var G__32446 = l;
var G__32447 = m;
var G__32448 = n;
var G__32449 = o;
var G__32450 = p;
var G__32451 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__32435,G__32436,G__32437,G__32438,G__32439,G__32440,G__32441,G__32442,G__32443,G__32444,G__32445,G__32446,G__32447,G__32448,G__32449,G__32450,G__32451) : target_fn.call(null,G__32435,G__32436,G__32437,G__32438,G__32439,G__32440,G__32441,G__32442,G__32443,G__32444,G__32445,G__32446,G__32447,G__32448,G__32449,G__32450,G__32451));
});
var G__32986__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__32452 = a;
var G__32453 = b;
var G__32454 = c;
var G__32455 = d;
var G__32456 = e;
var G__32457 = f;
var G__32458 = g;
var G__32459 = h;
var G__32460 = i;
var G__32461 = j;
var G__32462 = k;
var G__32463 = l;
var G__32464 = m;
var G__32465 = n;
var G__32466 = o;
var G__32467 = p;
var G__32468 = q;
var G__32469 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__32452,G__32453,G__32454,G__32455,G__32456,G__32457,G__32458,G__32459,G__32460,G__32461,G__32462,G__32463,G__32464,G__32465,G__32466,G__32467,G__32468,G__32469) : self__.dispatch_fn.call(null,G__32452,G__32453,G__32454,G__32455,G__32456,G__32457,G__32458,G__32459,G__32460,G__32461,G__32462,G__32463,G__32464,G__32465,G__32466,G__32467,G__32468,G__32469));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32470 = a;
var G__32471 = b;
var G__32472 = c;
var G__32473 = d;
var G__32474 = e;
var G__32475 = f;
var G__32476 = g;
var G__32477 = h;
var G__32478 = i;
var G__32479 = j;
var G__32480 = k;
var G__32481 = l;
var G__32482 = m;
var G__32483 = n;
var G__32484 = o;
var G__32485 = p;
var G__32486 = q;
var G__32487 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__32470,G__32471,G__32472,G__32473,G__32474,G__32475,G__32476,G__32477,G__32478,G__32479,G__32480,G__32481,G__32482,G__32483,G__32484,G__32485,G__32486,G__32487) : target_fn.call(null,G__32470,G__32471,G__32472,G__32473,G__32474,G__32475,G__32476,G__32477,G__32478,G__32479,G__32480,G__32481,G__32482,G__32483,G__32484,G__32485,G__32486,G__32487));
});
var G__32986__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__32488 = a;
var G__32489 = b;
var G__32490 = c;
var G__32491 = d;
var G__32492 = e;
var G__32493 = f;
var G__32494 = g;
var G__32495 = h;
var G__32496 = i;
var G__32497 = j;
var G__32498 = k;
var G__32499 = l;
var G__32500 = m;
var G__32501 = n;
var G__32502 = o;
var G__32503 = p;
var G__32504 = q;
var G__32505 = r;
var G__32506 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__32488,G__32489,G__32490,G__32491,G__32492,G__32493,G__32494,G__32495,G__32496,G__32497,G__32498,G__32499,G__32500,G__32501,G__32502,G__32503,G__32504,G__32505,G__32506) : self__.dispatch_fn.call(null,G__32488,G__32489,G__32490,G__32491,G__32492,G__32493,G__32494,G__32495,G__32496,G__32497,G__32498,G__32499,G__32500,G__32501,G__32502,G__32503,G__32504,G__32505,G__32506));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32507 = a;
var G__32508 = b;
var G__32509 = c;
var G__32510 = d;
var G__32511 = e;
var G__32512 = f;
var G__32513 = g;
var G__32514 = h;
var G__32515 = i;
var G__32516 = j;
var G__32517 = k;
var G__32518 = l;
var G__32519 = m;
var G__32520 = n;
var G__32521 = o;
var G__32522 = p;
var G__32523 = q;
var G__32524 = r;
var G__32525 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__32507,G__32508,G__32509,G__32510,G__32511,G__32512,G__32513,G__32514,G__32515,G__32516,G__32517,G__32518,G__32519,G__32520,G__32521,G__32522,G__32523,G__32524,G__32525) : target_fn.call(null,G__32507,G__32508,G__32509,G__32510,G__32511,G__32512,G__32513,G__32514,G__32515,G__32516,G__32517,G__32518,G__32519,G__32520,G__32521,G__32522,G__32523,G__32524,G__32525));
});
var G__32986__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__32526 = a;
var G__32527 = b;
var G__32528 = c;
var G__32529 = d;
var G__32530 = e;
var G__32531 = f;
var G__32532 = g;
var G__32533 = h;
var G__32534 = i;
var G__32535 = j;
var G__32536 = k;
var G__32537 = l;
var G__32538 = m;
var G__32539 = n;
var G__32540 = o;
var G__32541 = p;
var G__32542 = q;
var G__32543 = r;
var G__32544 = s;
var G__32545 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__32526,G__32527,G__32528,G__32529,G__32530,G__32531,G__32532,G__32533,G__32534,G__32535,G__32536,G__32537,G__32538,G__32539,G__32540,G__32541,G__32542,G__32543,G__32544,G__32545) : self__.dispatch_fn.call(null,G__32526,G__32527,G__32528,G__32529,G__32530,G__32531,G__32532,G__32533,G__32534,G__32535,G__32536,G__32537,G__32538,G__32539,G__32540,G__32541,G__32542,G__32543,G__32544,G__32545));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32546 = a;
var G__32547 = b;
var G__32548 = c;
var G__32549 = d;
var G__32550 = e;
var G__32551 = f;
var G__32552 = g;
var G__32553 = h;
var G__32554 = i;
var G__32555 = j;
var G__32556 = k;
var G__32557 = l;
var G__32558 = m;
var G__32559 = n;
var G__32560 = o;
var G__32561 = p;
var G__32562 = q;
var G__32563 = r;
var G__32564 = s;
var G__32565 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__32546,G__32547,G__32548,G__32549,G__32550,G__32551,G__32552,G__32553,G__32554,G__32555,G__32556,G__32557,G__32558,G__32559,G__32560,G__32561,G__32562,G__32563,G__32564,G__32565) : target_fn.call(null,G__32546,G__32547,G__32548,G__32549,G__32550,G__32551,G__32552,G__32553,G__32554,G__32555,G__32556,G__32557,G__32558,G__32559,G__32560,G__32561,G__32562,G__32563,G__32564,G__32565));
});
var G__32986__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__32986 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__32986__1.call(this,self__);
case 2:
return G__32986__2.call(this,self__,a);
case 3:
return G__32986__3.call(this,self__,a,b);
case 4:
return G__32986__4.call(this,self__,a,b,c);
case 5:
return G__32986__5.call(this,self__,a,b,c,d);
case 6:
return G__32986__6.call(this,self__,a,b,c,d,e);
case 7:
return G__32986__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__32986__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__32986__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__32986__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__32986__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__32986__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__32986__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__32986__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__32986__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__32986__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__32986__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__32986__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__32986__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__32986__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__32986__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__32986__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32986.cljs$core$IFn$_invoke$arity$1 = G__32986__1;
G__32986.cljs$core$IFn$_invoke$arity$2 = G__32986__2;
G__32986.cljs$core$IFn$_invoke$arity$3 = G__32986__3;
G__32986.cljs$core$IFn$_invoke$arity$4 = G__32986__4;
G__32986.cljs$core$IFn$_invoke$arity$5 = G__32986__5;
G__32986.cljs$core$IFn$_invoke$arity$6 = G__32986__6;
G__32986.cljs$core$IFn$_invoke$arity$7 = G__32986__7;
G__32986.cljs$core$IFn$_invoke$arity$8 = G__32986__8;
G__32986.cljs$core$IFn$_invoke$arity$9 = G__32986__9;
G__32986.cljs$core$IFn$_invoke$arity$10 = G__32986__10;
G__32986.cljs$core$IFn$_invoke$arity$11 = G__32986__11;
G__32986.cljs$core$IFn$_invoke$arity$12 = G__32986__12;
G__32986.cljs$core$IFn$_invoke$arity$13 = G__32986__13;
G__32986.cljs$core$IFn$_invoke$arity$14 = G__32986__14;
G__32986.cljs$core$IFn$_invoke$arity$15 = G__32986__15;
G__32986.cljs$core$IFn$_invoke$arity$16 = G__32986__16;
G__32986.cljs$core$IFn$_invoke$arity$17 = G__32986__17;
G__32986.cljs$core$IFn$_invoke$arity$18 = G__32986__18;
G__32986.cljs$core$IFn$_invoke$arity$19 = G__32986__19;
G__32986.cljs$core$IFn$_invoke$arity$20 = G__32986__20;
G__32986.cljs$core$IFn$_invoke$arity$21 = G__32986__21;
G__32986.cljs$core$IFn$_invoke$arity$22 = G__32986__22;
return G__32986;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args32138){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args32138)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__32566 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__32566) : self__.dispatch_fn.call(null,G__32566));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32567 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__32567) : target_fn.call(null,G__32567));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__32568 = a;
var G__32569 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__32568,G__32569) : self__.dispatch_fn.call(null,G__32568,G__32569));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32570 = a;
var G__32571 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__32570,G__32571) : target_fn.call(null,G__32570,G__32571));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__32572 = a;
var G__32573 = b;
var G__32574 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__32572,G__32573,G__32574) : self__.dispatch_fn.call(null,G__32572,G__32573,G__32574));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32575 = a;
var G__32576 = b;
var G__32577 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__32575,G__32576,G__32577) : target_fn.call(null,G__32575,G__32576,G__32577));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__32578 = a;
var G__32579 = b;
var G__32580 = c;
var G__32581 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__32578,G__32579,G__32580,G__32581) : self__.dispatch_fn.call(null,G__32578,G__32579,G__32580,G__32581));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32582 = a;
var G__32583 = b;
var G__32584 = c;
var G__32585 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__32582,G__32583,G__32584,G__32585) : target_fn.call(null,G__32582,G__32583,G__32584,G__32585));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__32586 = a;
var G__32587 = b;
var G__32588 = c;
var G__32589 = d;
var G__32590 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__32586,G__32587,G__32588,G__32589,G__32590) : self__.dispatch_fn.call(null,G__32586,G__32587,G__32588,G__32589,G__32590));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32591 = a;
var G__32592 = b;
var G__32593 = c;
var G__32594 = d;
var G__32595 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__32591,G__32592,G__32593,G__32594,G__32595) : target_fn.call(null,G__32591,G__32592,G__32593,G__32594,G__32595));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__32596 = a;
var G__32597 = b;
var G__32598 = c;
var G__32599 = d;
var G__32600 = e;
var G__32601 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__32596,G__32597,G__32598,G__32599,G__32600,G__32601) : self__.dispatch_fn.call(null,G__32596,G__32597,G__32598,G__32599,G__32600,G__32601));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32602 = a;
var G__32603 = b;
var G__32604 = c;
var G__32605 = d;
var G__32606 = e;
var G__32607 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__32602,G__32603,G__32604,G__32605,G__32606,G__32607) : target_fn.call(null,G__32602,G__32603,G__32604,G__32605,G__32606,G__32607));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__32608 = a;
var G__32609 = b;
var G__32610 = c;
var G__32611 = d;
var G__32612 = e;
var G__32613 = f;
var G__32614 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__32608,G__32609,G__32610,G__32611,G__32612,G__32613,G__32614) : self__.dispatch_fn.call(null,G__32608,G__32609,G__32610,G__32611,G__32612,G__32613,G__32614));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32615 = a;
var G__32616 = b;
var G__32617 = c;
var G__32618 = d;
var G__32619 = e;
var G__32620 = f;
var G__32621 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__32615,G__32616,G__32617,G__32618,G__32619,G__32620,G__32621) : target_fn.call(null,G__32615,G__32616,G__32617,G__32618,G__32619,G__32620,G__32621));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__32622 = a;
var G__32623 = b;
var G__32624 = c;
var G__32625 = d;
var G__32626 = e;
var G__32627 = f;
var G__32628 = g;
var G__32629 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__32622,G__32623,G__32624,G__32625,G__32626,G__32627,G__32628,G__32629) : self__.dispatch_fn.call(null,G__32622,G__32623,G__32624,G__32625,G__32626,G__32627,G__32628,G__32629));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32630 = a;
var G__32631 = b;
var G__32632 = c;
var G__32633 = d;
var G__32634 = e;
var G__32635 = f;
var G__32636 = g;
var G__32637 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__32630,G__32631,G__32632,G__32633,G__32634,G__32635,G__32636,G__32637) : target_fn.call(null,G__32630,G__32631,G__32632,G__32633,G__32634,G__32635,G__32636,G__32637));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__32638 = a;
var G__32639 = b;
var G__32640 = c;
var G__32641 = d;
var G__32642 = e;
var G__32643 = f;
var G__32644 = g;
var G__32645 = h;
var G__32646 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__32638,G__32639,G__32640,G__32641,G__32642,G__32643,G__32644,G__32645,G__32646) : self__.dispatch_fn.call(null,G__32638,G__32639,G__32640,G__32641,G__32642,G__32643,G__32644,G__32645,G__32646));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32647 = a;
var G__32648 = b;
var G__32649 = c;
var G__32650 = d;
var G__32651 = e;
var G__32652 = f;
var G__32653 = g;
var G__32654 = h;
var G__32655 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__32647,G__32648,G__32649,G__32650,G__32651,G__32652,G__32653,G__32654,G__32655) : target_fn.call(null,G__32647,G__32648,G__32649,G__32650,G__32651,G__32652,G__32653,G__32654,G__32655));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__32656 = a;
var G__32657 = b;
var G__32658 = c;
var G__32659 = d;
var G__32660 = e;
var G__32661 = f;
var G__32662 = g;
var G__32663 = h;
var G__32664 = i;
var G__32665 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__32656,G__32657,G__32658,G__32659,G__32660,G__32661,G__32662,G__32663,G__32664,G__32665) : self__.dispatch_fn.call(null,G__32656,G__32657,G__32658,G__32659,G__32660,G__32661,G__32662,G__32663,G__32664,G__32665));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32666 = a;
var G__32667 = b;
var G__32668 = c;
var G__32669 = d;
var G__32670 = e;
var G__32671 = f;
var G__32672 = g;
var G__32673 = h;
var G__32674 = i;
var G__32675 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__32666,G__32667,G__32668,G__32669,G__32670,G__32671,G__32672,G__32673,G__32674,G__32675) : target_fn.call(null,G__32666,G__32667,G__32668,G__32669,G__32670,G__32671,G__32672,G__32673,G__32674,G__32675));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__32676 = a;
var G__32677 = b;
var G__32678 = c;
var G__32679 = d;
var G__32680 = e;
var G__32681 = f;
var G__32682 = g;
var G__32683 = h;
var G__32684 = i;
var G__32685 = j;
var G__32686 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__32676,G__32677,G__32678,G__32679,G__32680,G__32681,G__32682,G__32683,G__32684,G__32685,G__32686) : self__.dispatch_fn.call(null,G__32676,G__32677,G__32678,G__32679,G__32680,G__32681,G__32682,G__32683,G__32684,G__32685,G__32686));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32687 = a;
var G__32688 = b;
var G__32689 = c;
var G__32690 = d;
var G__32691 = e;
var G__32692 = f;
var G__32693 = g;
var G__32694 = h;
var G__32695 = i;
var G__32696 = j;
var G__32697 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__32687,G__32688,G__32689,G__32690,G__32691,G__32692,G__32693,G__32694,G__32695,G__32696,G__32697) : target_fn.call(null,G__32687,G__32688,G__32689,G__32690,G__32691,G__32692,G__32693,G__32694,G__32695,G__32696,G__32697));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__32698 = a;
var G__32699 = b;
var G__32700 = c;
var G__32701 = d;
var G__32702 = e;
var G__32703 = f;
var G__32704 = g;
var G__32705 = h;
var G__32706 = i;
var G__32707 = j;
var G__32708 = k;
var G__32709 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__32698,G__32699,G__32700,G__32701,G__32702,G__32703,G__32704,G__32705,G__32706,G__32707,G__32708,G__32709) : self__.dispatch_fn.call(null,G__32698,G__32699,G__32700,G__32701,G__32702,G__32703,G__32704,G__32705,G__32706,G__32707,G__32708,G__32709));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32710 = a;
var G__32711 = b;
var G__32712 = c;
var G__32713 = d;
var G__32714 = e;
var G__32715 = f;
var G__32716 = g;
var G__32717 = h;
var G__32718 = i;
var G__32719 = j;
var G__32720 = k;
var G__32721 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__32710,G__32711,G__32712,G__32713,G__32714,G__32715,G__32716,G__32717,G__32718,G__32719,G__32720,G__32721) : target_fn.call(null,G__32710,G__32711,G__32712,G__32713,G__32714,G__32715,G__32716,G__32717,G__32718,G__32719,G__32720,G__32721));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__32722 = a;
var G__32723 = b;
var G__32724 = c;
var G__32725 = d;
var G__32726 = e;
var G__32727 = f;
var G__32728 = g;
var G__32729 = h;
var G__32730 = i;
var G__32731 = j;
var G__32732 = k;
var G__32733 = l;
var G__32734 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__32722,G__32723,G__32724,G__32725,G__32726,G__32727,G__32728,G__32729,G__32730,G__32731,G__32732,G__32733,G__32734) : self__.dispatch_fn.call(null,G__32722,G__32723,G__32724,G__32725,G__32726,G__32727,G__32728,G__32729,G__32730,G__32731,G__32732,G__32733,G__32734));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32735 = a;
var G__32736 = b;
var G__32737 = c;
var G__32738 = d;
var G__32739 = e;
var G__32740 = f;
var G__32741 = g;
var G__32742 = h;
var G__32743 = i;
var G__32744 = j;
var G__32745 = k;
var G__32746 = l;
var G__32747 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__32735,G__32736,G__32737,G__32738,G__32739,G__32740,G__32741,G__32742,G__32743,G__32744,G__32745,G__32746,G__32747) : target_fn.call(null,G__32735,G__32736,G__32737,G__32738,G__32739,G__32740,G__32741,G__32742,G__32743,G__32744,G__32745,G__32746,G__32747));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__32748 = a;
var G__32749 = b;
var G__32750 = c;
var G__32751 = d;
var G__32752 = e;
var G__32753 = f;
var G__32754 = g;
var G__32755 = h;
var G__32756 = i;
var G__32757 = j;
var G__32758 = k;
var G__32759 = l;
var G__32760 = m;
var G__32761 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__32748,G__32749,G__32750,G__32751,G__32752,G__32753,G__32754,G__32755,G__32756,G__32757,G__32758,G__32759,G__32760,G__32761) : self__.dispatch_fn.call(null,G__32748,G__32749,G__32750,G__32751,G__32752,G__32753,G__32754,G__32755,G__32756,G__32757,G__32758,G__32759,G__32760,G__32761));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32762 = a;
var G__32763 = b;
var G__32764 = c;
var G__32765 = d;
var G__32766 = e;
var G__32767 = f;
var G__32768 = g;
var G__32769 = h;
var G__32770 = i;
var G__32771 = j;
var G__32772 = k;
var G__32773 = l;
var G__32774 = m;
var G__32775 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__32762,G__32763,G__32764,G__32765,G__32766,G__32767,G__32768,G__32769,G__32770,G__32771,G__32772,G__32773,G__32774,G__32775) : target_fn.call(null,G__32762,G__32763,G__32764,G__32765,G__32766,G__32767,G__32768,G__32769,G__32770,G__32771,G__32772,G__32773,G__32774,G__32775));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__32776 = a;
var G__32777 = b;
var G__32778 = c;
var G__32779 = d;
var G__32780 = e;
var G__32781 = f;
var G__32782 = g;
var G__32783 = h;
var G__32784 = i;
var G__32785 = j;
var G__32786 = k;
var G__32787 = l;
var G__32788 = m;
var G__32789 = n;
var G__32790 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__32776,G__32777,G__32778,G__32779,G__32780,G__32781,G__32782,G__32783,G__32784,G__32785,G__32786,G__32787,G__32788,G__32789,G__32790) : self__.dispatch_fn.call(null,G__32776,G__32777,G__32778,G__32779,G__32780,G__32781,G__32782,G__32783,G__32784,G__32785,G__32786,G__32787,G__32788,G__32789,G__32790));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32791 = a;
var G__32792 = b;
var G__32793 = c;
var G__32794 = d;
var G__32795 = e;
var G__32796 = f;
var G__32797 = g;
var G__32798 = h;
var G__32799 = i;
var G__32800 = j;
var G__32801 = k;
var G__32802 = l;
var G__32803 = m;
var G__32804 = n;
var G__32805 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__32791,G__32792,G__32793,G__32794,G__32795,G__32796,G__32797,G__32798,G__32799,G__32800,G__32801,G__32802,G__32803,G__32804,G__32805) : target_fn.call(null,G__32791,G__32792,G__32793,G__32794,G__32795,G__32796,G__32797,G__32798,G__32799,G__32800,G__32801,G__32802,G__32803,G__32804,G__32805));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__32806 = a;
var G__32807 = b;
var G__32808 = c;
var G__32809 = d;
var G__32810 = e;
var G__32811 = f;
var G__32812 = g;
var G__32813 = h;
var G__32814 = i;
var G__32815 = j;
var G__32816 = k;
var G__32817 = l;
var G__32818 = m;
var G__32819 = n;
var G__32820 = o;
var G__32821 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__32806,G__32807,G__32808,G__32809,G__32810,G__32811,G__32812,G__32813,G__32814,G__32815,G__32816,G__32817,G__32818,G__32819,G__32820,G__32821) : self__.dispatch_fn.call(null,G__32806,G__32807,G__32808,G__32809,G__32810,G__32811,G__32812,G__32813,G__32814,G__32815,G__32816,G__32817,G__32818,G__32819,G__32820,G__32821));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32822 = a;
var G__32823 = b;
var G__32824 = c;
var G__32825 = d;
var G__32826 = e;
var G__32827 = f;
var G__32828 = g;
var G__32829 = h;
var G__32830 = i;
var G__32831 = j;
var G__32832 = k;
var G__32833 = l;
var G__32834 = m;
var G__32835 = n;
var G__32836 = o;
var G__32837 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__32822,G__32823,G__32824,G__32825,G__32826,G__32827,G__32828,G__32829,G__32830,G__32831,G__32832,G__32833,G__32834,G__32835,G__32836,G__32837) : target_fn.call(null,G__32822,G__32823,G__32824,G__32825,G__32826,G__32827,G__32828,G__32829,G__32830,G__32831,G__32832,G__32833,G__32834,G__32835,G__32836,G__32837));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__32838 = a;
var G__32839 = b;
var G__32840 = c;
var G__32841 = d;
var G__32842 = e;
var G__32843 = f;
var G__32844 = g;
var G__32845 = h;
var G__32846 = i;
var G__32847 = j;
var G__32848 = k;
var G__32849 = l;
var G__32850 = m;
var G__32851 = n;
var G__32852 = o;
var G__32853 = p;
var G__32854 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__32838,G__32839,G__32840,G__32841,G__32842,G__32843,G__32844,G__32845,G__32846,G__32847,G__32848,G__32849,G__32850,G__32851,G__32852,G__32853,G__32854) : self__.dispatch_fn.call(null,G__32838,G__32839,G__32840,G__32841,G__32842,G__32843,G__32844,G__32845,G__32846,G__32847,G__32848,G__32849,G__32850,G__32851,G__32852,G__32853,G__32854));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32855 = a;
var G__32856 = b;
var G__32857 = c;
var G__32858 = d;
var G__32859 = e;
var G__32860 = f;
var G__32861 = g;
var G__32862 = h;
var G__32863 = i;
var G__32864 = j;
var G__32865 = k;
var G__32866 = l;
var G__32867 = m;
var G__32868 = n;
var G__32869 = o;
var G__32870 = p;
var G__32871 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__32855,G__32856,G__32857,G__32858,G__32859,G__32860,G__32861,G__32862,G__32863,G__32864,G__32865,G__32866,G__32867,G__32868,G__32869,G__32870,G__32871) : target_fn.call(null,G__32855,G__32856,G__32857,G__32858,G__32859,G__32860,G__32861,G__32862,G__32863,G__32864,G__32865,G__32866,G__32867,G__32868,G__32869,G__32870,G__32871));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__32872 = a;
var G__32873 = b;
var G__32874 = c;
var G__32875 = d;
var G__32876 = e;
var G__32877 = f;
var G__32878 = g;
var G__32879 = h;
var G__32880 = i;
var G__32881 = j;
var G__32882 = k;
var G__32883 = l;
var G__32884 = m;
var G__32885 = n;
var G__32886 = o;
var G__32887 = p;
var G__32888 = q;
var G__32889 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__32872,G__32873,G__32874,G__32875,G__32876,G__32877,G__32878,G__32879,G__32880,G__32881,G__32882,G__32883,G__32884,G__32885,G__32886,G__32887,G__32888,G__32889) : self__.dispatch_fn.call(null,G__32872,G__32873,G__32874,G__32875,G__32876,G__32877,G__32878,G__32879,G__32880,G__32881,G__32882,G__32883,G__32884,G__32885,G__32886,G__32887,G__32888,G__32889));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32890 = a;
var G__32891 = b;
var G__32892 = c;
var G__32893 = d;
var G__32894 = e;
var G__32895 = f;
var G__32896 = g;
var G__32897 = h;
var G__32898 = i;
var G__32899 = j;
var G__32900 = k;
var G__32901 = l;
var G__32902 = m;
var G__32903 = n;
var G__32904 = o;
var G__32905 = p;
var G__32906 = q;
var G__32907 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__32890,G__32891,G__32892,G__32893,G__32894,G__32895,G__32896,G__32897,G__32898,G__32899,G__32900,G__32901,G__32902,G__32903,G__32904,G__32905,G__32906,G__32907) : target_fn.call(null,G__32890,G__32891,G__32892,G__32893,G__32894,G__32895,G__32896,G__32897,G__32898,G__32899,G__32900,G__32901,G__32902,G__32903,G__32904,G__32905,G__32906,G__32907));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__32908 = a;
var G__32909 = b;
var G__32910 = c;
var G__32911 = d;
var G__32912 = e;
var G__32913 = f;
var G__32914 = g;
var G__32915 = h;
var G__32916 = i;
var G__32917 = j;
var G__32918 = k;
var G__32919 = l;
var G__32920 = m;
var G__32921 = n;
var G__32922 = o;
var G__32923 = p;
var G__32924 = q;
var G__32925 = r;
var G__32926 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__32908,G__32909,G__32910,G__32911,G__32912,G__32913,G__32914,G__32915,G__32916,G__32917,G__32918,G__32919,G__32920,G__32921,G__32922,G__32923,G__32924,G__32925,G__32926) : self__.dispatch_fn.call(null,G__32908,G__32909,G__32910,G__32911,G__32912,G__32913,G__32914,G__32915,G__32916,G__32917,G__32918,G__32919,G__32920,G__32921,G__32922,G__32923,G__32924,G__32925,G__32926));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32927 = a;
var G__32928 = b;
var G__32929 = c;
var G__32930 = d;
var G__32931 = e;
var G__32932 = f;
var G__32933 = g;
var G__32934 = h;
var G__32935 = i;
var G__32936 = j;
var G__32937 = k;
var G__32938 = l;
var G__32939 = m;
var G__32940 = n;
var G__32941 = o;
var G__32942 = p;
var G__32943 = q;
var G__32944 = r;
var G__32945 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__32927,G__32928,G__32929,G__32930,G__32931,G__32932,G__32933,G__32934,G__32935,G__32936,G__32937,G__32938,G__32939,G__32940,G__32941,G__32942,G__32943,G__32944,G__32945) : target_fn.call(null,G__32927,G__32928,G__32929,G__32930,G__32931,G__32932,G__32933,G__32934,G__32935,G__32936,G__32937,G__32938,G__32939,G__32940,G__32941,G__32942,G__32943,G__32944,G__32945));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__32946 = a;
var G__32947 = b;
var G__32948 = c;
var G__32949 = d;
var G__32950 = e;
var G__32951 = f;
var G__32952 = g;
var G__32953 = h;
var G__32954 = i;
var G__32955 = j;
var G__32956 = k;
var G__32957 = l;
var G__32958 = m;
var G__32959 = n;
var G__32960 = o;
var G__32961 = p;
var G__32962 = q;
var G__32963 = r;
var G__32964 = s;
var G__32965 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__32946,G__32947,G__32948,G__32949,G__32950,G__32951,G__32952,G__32953,G__32954,G__32955,G__32956,G__32957,G__32958,G__32959,G__32960,G__32961,G__32962,G__32963,G__32964,G__32965) : self__.dispatch_fn.call(null,G__32946,G__32947,G__32948,G__32949,G__32950,G__32951,G__32952,G__32953,G__32954,G__32955,G__32956,G__32957,G__32958,G__32959,G__32960,G__32961,G__32962,G__32963,G__32964,G__32965));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32966 = a;
var G__32967 = b;
var G__32968 = c;
var G__32969 = d;
var G__32970 = e;
var G__32971 = f;
var G__32972 = g;
var G__32973 = h;
var G__32974 = i;
var G__32975 = j;
var G__32976 = k;
var G__32977 = l;
var G__32978 = m;
var G__32979 = n;
var G__32980 = o;
var G__32981 = p;
var G__32982 = q;
var G__32983 = r;
var G__32984 = s;
var G__32985 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__32966,G__32967,G__32968,G__32969,G__32970,G__32971,G__32972,G__32973,G__32974,G__32975,G__32976,G__32977,G__32978,G__32979,G__32980,G__32981,G__32982,G__32983,G__32984,G__32985) : target_fn.call(null,G__32966,G__32967,G__32968,G__32969,G__32970,G__32971,G__32972,G__32973,G__32974,G__32975,G__32976,G__32977,G__32978,G__32979,G__32980,G__32981,G__32982,G__32983,G__32984,G__32985));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__17052__auto__,writer__17053__auto__,opt__17054__auto__){
return cljs.core._write(writer__17053__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__32987 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__32987);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__17052__auto__,writer__17053__auto__,opt__17054__auto__){
return cljs.core._write(writer__17053__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__17052__auto__,writer__17053__auto__,opt__17054__auto__){
return cljs.core._write(writer__17053__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__32992 = msg;
return Error(G__32992);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__32997 = x;
var G__32998 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__32997,G__32998) : pred.call(null,G__32997,G__32998));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__32999 = y;
var G__33000 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__32999,G__33000) : pred.call(null,G__32999,G__33000));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return cljs.core.constant$keyword$18;
} else {
return cljs.core.constant$keyword$19;
}
});
