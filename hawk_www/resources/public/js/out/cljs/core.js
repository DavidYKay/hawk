// Compiled by ClojureScript 0.0-2850 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2850";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [cljs.core.constant$keyword$1,cljs.core._STAR_flush_on_newline_STAR_,cljs.core.constant$keyword$2,cljs.core._STAR_print_readably_STAR_,cljs.core.constant$keyword$3,cljs.core._STAR_print_meta_STAR_,cljs.core.constant$keyword$4,cljs.core._STAR_print_dup_STAR_,cljs.core.constant$keyword$5,cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__42344__delegate = function (args){
return console.log.apply(console,(function (){var G__42343 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__42343) : cljs.core.into_array.call(null,G__42343));
})());
};
var G__42344 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__42345__i = 0, G__42345__a = new Array(arguments.length -  0);
while (G__42345__i < G__42345__a.length) {G__42345__a[G__42345__i] = arguments[G__42345__i + 0]; ++G__42345__i;}
  args = new cljs.core.IndexedSeq(G__42345__a,0);
} 
return G__42344__delegate.call(this,args);};
G__42344.cljs$lang$maxFixedArity = 0;
G__42344.cljs$lang$applyTo = (function (arglist__42346){
var args = cljs.core.seq(arglist__42346);
return G__42344__delegate(args);
});
G__42344.cljs$core$IFn$_invoke$arity$variadic = G__42344__delegate;
return G__42344;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__42348 = x;
return goog.isString(G__42348);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__42350 = x__$1;
return goog.typeOf(G__42350);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__31925__auto__ = ty;
if(cljs.core.truth_(and__31925__auto__)){
return ty.cljs$lang$type;
} else {
return and__31925__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__42352 = obj;
return goog.typeOf(G__42352);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__42354 = Symbol;
return goog.typeOf(G__42354);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__32824__auto___42356 = len;
var i_42357 = (0);
while(true){
if((i_42357 < n__32824__auto___42356)){
(new_arr[i_42357] = (arr[i_42357]));

var G__42358 = (i_42357 + (1));
i_42357 = G__42358;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__42359 = (i + (1));
i = G__42359;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__42368__delegate = function (array,i,idxs){
var G__42365 = aget;
var G__42366 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__42367 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__42365,G__42366,G__42367) : cljs.core.apply.call(null,G__42365,G__42366,G__42367));
};
var G__42368 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__42369__i = 0, G__42369__a = new Array(arguments.length -  2);
while (G__42369__i < G__42369__a.length) {G__42369__a[G__42369__i] = arguments[G__42369__i + 2]; ++G__42369__i;}
  idxs = new cljs.core.IndexedSeq(G__42369__a,0);
} 
return G__42368__delegate.call(this,array,i,idxs);};
G__42368.cljs$lang$maxFixedArity = 2;
G__42368.cljs$lang$applyTo = (function (arglist__42370){
var array = cljs.core.first(arglist__42370);
arglist__42370 = cljs.core.next(arglist__42370);
var i = cljs.core.first(arglist__42370);
var idxs = cljs.core.rest(arglist__42370);
return G__42368__delegate(array,i,idxs);
});
G__42368.cljs$core$IFn$_invoke$arity$variadic = G__42368__delegate;
return G__42368;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__42371 = null;
if (arguments.length > 2) {
var G__42372__i = 0, G__42372__a = new Array(arguments.length -  2);
while (G__42372__i < G__42372__a.length) {G__42372__a[G__42372__i] = arguments[G__42372__i + 2]; ++G__42372__i;}
G__42371 = new cljs.core.IndexedSeq(G__42372__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__42371);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__42381__delegate = function (array,idx,idx2,idxv){
var G__42377 = aset;
var G__42378 = (array[idx]);
var G__42379 = idx2;
var G__42380 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__42377,G__42378,G__42379,G__42380) : cljs.core.apply.call(null,G__42377,G__42378,G__42379,G__42380));
};
var G__42381 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__42382__i = 0, G__42382__a = new Array(arguments.length -  3);
while (G__42382__i < G__42382__a.length) {G__42382__a[G__42382__i] = arguments[G__42382__i + 3]; ++G__42382__i;}
  idxv = new cljs.core.IndexedSeq(G__42382__a,0);
} 
return G__42381__delegate.call(this,array,idx,idx2,idxv);};
G__42381.cljs$lang$maxFixedArity = 3;
G__42381.cljs$lang$applyTo = (function (arglist__42383){
var array = cljs.core.first(arglist__42383);
arglist__42383 = cljs.core.next(arglist__42383);
var idx = cljs.core.first(arglist__42383);
arglist__42383 = cljs.core.next(arglist__42383);
var idx2 = cljs.core.first(arglist__42383);
var idxv = cljs.core.rest(arglist__42383);
return G__42381__delegate(array,idx,idx2,idxv);
});
G__42381.cljs$core$IFn$_invoke$arity$variadic = G__42381__delegate;
return G__42381;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__42384 = null;
if (arguments.length > 3) {
var G__42385__i = 0, G__42385__a = new Array(arguments.length -  3);
while (G__42385__i < G__42385__a.length) {G__42385__a[G__42385__i] = arguments[G__42385__i + 3]; ++G__42385__i;}
G__42384 = new cljs.core.IndexedSeq(G__42385__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__42384);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__42391 = (function (a,x){
a.push(x);

return a;
});
var G__42392 = [];
var G__42393 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__42391,G__42392,G__42393) : cljs.core.reduce.call(null,G__42391,G__42392,G__42393));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__42394__i = 0, G__42394__a = new Array(arguments.length -  2);
while (G__42394__i < G__42394__a.length) {G__42394__a[G__42394__i] = arguments[G__42394__i + 2]; ++G__42394__i;}
  args = new cljs.core.IndexedSeq(G__42394__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__42395){
var obj = cljs.core.first(arglist__42395);
arglist__42395 = cljs.core.next(arglist__42395);
var s = cljs.core.first(arglist__42395);
var args = cljs.core.rest(arglist__42395);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj42397 = {};
return obj42397;
})();


cljs.core.IFn = (function (){var obj42399 = {};
return obj42399;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__31925__auto__ = this$;
if(and__31925__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__31925__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__32581__auto__ = (((this$ == null))?null:this$);
return (function (){var or__31937__auto__ = (cljs.core._invoke[(function (){var G__42445 = x__32581__auto__;
return goog.typeOf(G__42445);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._invoke["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__31925__auto__ = this$;
if(and__31925__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__31925__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__32581__auto__ = (((this$ == null))?null:this$);
return (function (){var or__31937__auto__ = (cljs.core._invoke[(function (){var G__42447 = x__32581__auto__;
return goog.typeOf(G__42447);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._invoke["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__31925__auto__ = this$;
if(and__31925__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__31925__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__32581__auto__ = (((this$ == null))?null:this$);
return (function (){var or__31937__auto__ = (cljs.core._invoke[(function (){var G__42449 = x__32581__auto__;
return goog.typeOf(G__42449);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._invoke["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__31925__auto__ = this$;
if(and__31925__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__31925__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__32581__auto__ = (((this$ == null))?null:this$);
return (function (){var or__31937__auto__ = (cljs.core._invoke[(function (){var G__42451 = x__32581__auto__;
return goog.typeOf(G__42451);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._invoke["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__31925__auto__ = this$;
if(and__31925__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__31925__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__32581__auto__ = (((this$ == null))?null:this$);
return (function (){var or__31937__auto__ = (cljs.core._invoke[(function (){var G__42453 = x__32581__auto__;
return goog.typeOf(G__42453);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._invoke["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__31925__auto__ = this$;
if(and__31925__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__31925__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__32581__auto__ = (((this$ == null))?null:this$);
return (function (){var or__31937__auto__ = (cljs.core._invoke[(function (){var G__42455 = x__32581__auto__;
return goog.typeOf(G__42455);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._invoke["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__31925__auto__ = this$;
if(and__31925__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__31925__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__32581__auto__ = (((this$ == null))?null:this$);
return (function (){var or__31937__auto__ = (cljs.core._invoke[(function (){var G__42457 = x__32581__auto__;
return goog.typeOf(G__42457);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._invoke["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__31925__auto__ = this$;
if(and__31925__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__31925__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__32581__auto__ = (((this$ == null))?null:this$);
return (function (){var or__31937__auto__ = (cljs.core._invoke[(function (){var G__42459 = x__32581__auto__;
return goog.typeOf(G__42459);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._invoke["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__31925__auto__ = this$;
if(and__31925__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__31925__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__32581__auto__ = (((this$ == null))?null:this$);
return (function (){var or__31937__auto__ = (cljs.core._invoke[(function (){var G__42461 = x__32581__auto__;
return goog.typeOf(G__42461);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._invoke["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__31925__auto__ = this$;
if(and__31925__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__31925__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__32581__auto__ = (((this$ == null))?null:this$);
return (function (){var or__31937__auto__ = (cljs.core._invoke[(function (){var G__42463 = x__32581__auto__;
return goog.typeOf(G__42463);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._invoke["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__31925__auto__ = this$;
if(and__31925__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__31925__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__32581__auto__ = (((this$ == null))?null:this$);
return (function (){var or__31937__auto__ = (cljs.core._invoke[(function (){var G__42465 = x__32581__auto__;
return goog.typeOf(G__42465);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._invoke["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__31925__auto__ = this$;
if(and__31925__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__31925__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__32581__auto__ = (((this$ == null))?null:this$);
return (function (){var or__31937__auto__ = (cljs.core._invoke[(function (){var G__42467 = x__32581__auto__;
return goog.typeOf(G__42467);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._invoke["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__31925__auto__ = this$;
if(and__31925__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__31925__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__32581__auto__ = (((this$ == null))?null:this$);
return (function (){var or__31937__auto__ = (cljs.core._invoke[(function (){var G__42469 = x__32581__auto__;
return goog.typeOf(G__42469);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._invoke["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__31925__auto__ = this$;
if(and__31925__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__31925__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__32581__auto__ = (((this$ == null))?null:this$);
return (function (){var or__31937__auto__ = (cljs.core._invoke[(function (){var G__42471 = x__32581__auto__;
return goog.typeOf(G__42471);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._invoke["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__31925__auto__ = this$;
if(and__31925__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__31925__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__32581__auto__ = (((this$ == null))?null:this$);
return (function (){var or__31937__auto__ = (cljs.core._invoke[(function (){var G__42473 = x__32581__auto__;
return goog.typeOf(G__42473);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._invoke["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__31925__auto__ = this$;
if(and__31925__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__31925__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__32581__auto__ = (((this$ == null))?null:this$);
return (function (){var or__31937__auto__ = (cljs.core._invoke[(function (){var G__42475 = x__32581__auto__;
return goog.typeOf(G__42475);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._invoke["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__31925__auto__ = this$;
if(and__31925__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__31925__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__32581__auto__ = (((this$ == null))?null:this$);
return (function (){var or__31937__auto__ = (cljs.core._invoke[(function (){var G__42477 = x__32581__auto__;
return goog.typeOf(G__42477);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._invoke["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__31925__auto__ = this$;
if(and__31925__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__31925__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__32581__auto__ = (((this$ == null))?null:this$);
return (function (){var or__31937__auto__ = (cljs.core._invoke[(function (){var G__42479 = x__32581__auto__;
return goog.typeOf(G__42479);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._invoke["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__31925__auto__ = this$;
if(and__31925__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__31925__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__32581__auto__ = (((this$ == null))?null:this$);
return (function (){var or__31937__auto__ = (cljs.core._invoke[(function (){var G__42481 = x__32581__auto__;
return goog.typeOf(G__42481);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._invoke["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__31925__auto__ = this$;
if(and__31925__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__31925__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__32581__auto__ = (((this$ == null))?null:this$);
return (function (){var or__31937__auto__ = (cljs.core._invoke[(function (){var G__42483 = x__32581__auto__;
return goog.typeOf(G__42483);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._invoke["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__31925__auto__ = this$;
if(and__31925__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__31925__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__32581__auto__ = (((this$ == null))?null:this$);
return (function (){var or__31937__auto__ = (cljs.core._invoke[(function (){var G__42485 = x__32581__auto__;
return goog.typeOf(G__42485);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._invoke["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__31925__auto__ = this$;
if(and__31925__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__31925__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__32581__auto__ = (((this$ == null))?null:this$);
return (function (){var or__31937__auto__ = (cljs.core._invoke[(function (){var G__42487 = x__32581__auto__;
return goog.typeOf(G__42487);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._invoke["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj42489 = {};
return obj42489;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__31925__auto__ = value;
if(and__31925__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__31925__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__32581__auto__ = (((value == null))?null:value);
return (function (){var or__31937__auto__ = (cljs.core._clone[(function (){var G__42493 = x__32581__auto__;
return goog.typeOf(G__42493);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._clone["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj42495 = {};
return obj42495;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__31925__auto__ = coll;
if(and__31925__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__31925__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__32581__auto__ = (((coll == null))?null:coll);
return (function (){var or__31937__auto__ = (cljs.core._count[(function (){var G__42499 = x__32581__auto__;
return goog.typeOf(G__42499);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._count["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj42501 = {};
return obj42501;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__31925__auto__ = coll;
if(and__31925__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__31925__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__32581__auto__ = (((coll == null))?null:coll);
return (function (){var or__31937__auto__ = (cljs.core._empty[(function (){var G__42505 = x__32581__auto__;
return goog.typeOf(G__42505);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._empty["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj42507 = {};
return obj42507;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__31925__auto__ = coll;
if(and__31925__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__31925__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__32581__auto__ = (((coll == null))?null:coll);
return (function (){var or__31937__auto__ = (cljs.core._conj[(function (){var G__42511 = x__32581__auto__;
return goog.typeOf(G__42511);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._conj["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj42513 = {};
return obj42513;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__31925__auto__ = coll;
if(and__31925__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__31925__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__32581__auto__ = (((coll == null))?null:coll);
return (function (){var or__31937__auto__ = (cljs.core._nth[(function (){var G__42519 = x__32581__auto__;
return goog.typeOf(G__42519);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._nth["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__31925__auto__ = coll;
if(and__31925__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__31925__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__32581__auto__ = (((coll == null))?null:coll);
return (function (){var or__31937__auto__ = (cljs.core._nth[(function (){var G__42521 = x__32581__auto__;
return goog.typeOf(G__42521);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._nth["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj42523 = {};
return obj42523;
})();


cljs.core.ISeq = (function (){var obj42525 = {};
return obj42525;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__31925__auto__ = coll;
if(and__31925__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__31925__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__32581__auto__ = (((coll == null))?null:coll);
return (function (){var or__31937__auto__ = (cljs.core._first[(function (){var G__42529 = x__32581__auto__;
return goog.typeOf(G__42529);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._first["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__31925__auto__ = coll;
if(and__31925__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__31925__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__32581__auto__ = (((coll == null))?null:coll);
return (function (){var or__31937__auto__ = (cljs.core._rest[(function (){var G__42533 = x__32581__auto__;
return goog.typeOf(G__42533);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._rest["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj42535 = {};
return obj42535;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__31925__auto__ = coll;
if(and__31925__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__31925__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__32581__auto__ = (((coll == null))?null:coll);
return (function (){var or__31937__auto__ = (cljs.core._next[(function (){var G__42539 = x__32581__auto__;
return goog.typeOf(G__42539);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._next["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj42541 = {};
return obj42541;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__31925__auto__ = o;
if(and__31925__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__31925__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__32581__auto__ = (((o == null))?null:o);
return (function (){var or__31937__auto__ = (cljs.core._lookup[(function (){var G__42547 = x__32581__auto__;
return goog.typeOf(G__42547);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._lookup["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__31925__auto__ = o;
if(and__31925__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__31925__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__32581__auto__ = (((o == null))?null:o);
return (function (){var or__31937__auto__ = (cljs.core._lookup[(function (){var G__42549 = x__32581__auto__;
return goog.typeOf(G__42549);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._lookup["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj42551 = {};
return obj42551;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__31925__auto__ = coll;
if(and__31925__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__31925__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__32581__auto__ = (((coll == null))?null:coll);
return (function (){var or__31937__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__42555 = x__32581__auto__;
return goog.typeOf(G__42555);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__31925__auto__ = coll;
if(and__31925__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__31925__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__32581__auto__ = (((coll == null))?null:coll);
return (function (){var or__31937__auto__ = (cljs.core._assoc[(function (){var G__42559 = x__32581__auto__;
return goog.typeOf(G__42559);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._assoc["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj42561 = {};
return obj42561;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__31925__auto__ = coll;
if(and__31925__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__31925__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__32581__auto__ = (((coll == null))?null:coll);
return (function (){var or__31937__auto__ = (cljs.core._dissoc[(function (){var G__42565 = x__32581__auto__;
return goog.typeOf(G__42565);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._dissoc["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj42567 = {};
return obj42567;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__31925__auto__ = coll;
if(and__31925__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__31925__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__32581__auto__ = (((coll == null))?null:coll);
return (function (){var or__31937__auto__ = (cljs.core._key[(function (){var G__42571 = x__32581__auto__;
return goog.typeOf(G__42571);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._key["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__31925__auto__ = coll;
if(and__31925__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__31925__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__32581__auto__ = (((coll == null))?null:coll);
return (function (){var or__31937__auto__ = (cljs.core._val[(function (){var G__42575 = x__32581__auto__;
return goog.typeOf(G__42575);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._val["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj42577 = {};
return obj42577;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__31925__auto__ = coll;
if(and__31925__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__31925__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__32581__auto__ = (((coll == null))?null:coll);
return (function (){var or__31937__auto__ = (cljs.core._disjoin[(function (){var G__42581 = x__32581__auto__;
return goog.typeOf(G__42581);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._disjoin["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj42583 = {};
return obj42583;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__31925__auto__ = coll;
if(and__31925__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__31925__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__32581__auto__ = (((coll == null))?null:coll);
return (function (){var or__31937__auto__ = (cljs.core._peek[(function (){var G__42587 = x__32581__auto__;
return goog.typeOf(G__42587);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._peek["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__31925__auto__ = coll;
if(and__31925__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__31925__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__32581__auto__ = (((coll == null))?null:coll);
return (function (){var or__31937__auto__ = (cljs.core._pop[(function (){var G__42591 = x__32581__auto__;
return goog.typeOf(G__42591);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._pop["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj42593 = {};
return obj42593;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__31925__auto__ = coll;
if(and__31925__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__31925__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__32581__auto__ = (((coll == null))?null:coll);
return (function (){var or__31937__auto__ = (cljs.core._assoc_n[(function (){var G__42597 = x__32581__auto__;
return goog.typeOf(G__42597);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj42599 = {};
return obj42599;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__31925__auto__ = o;
if(and__31925__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__31925__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__32581__auto__ = (((o == null))?null:o);
return (function (){var or__31937__auto__ = (cljs.core._deref[(function (){var G__42603 = x__32581__auto__;
return goog.typeOf(G__42603);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._deref["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj42605 = {};
return obj42605;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__31925__auto__ = o;
if(and__31925__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__31925__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__32581__auto__ = (((o == null))?null:o);
return (function (){var or__31937__auto__ = (cljs.core._deref_with_timeout[(function (){var G__42609 = x__32581__auto__;
return goog.typeOf(G__42609);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj42611 = {};
return obj42611;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__31925__auto__ = o;
if(and__31925__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__31925__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__32581__auto__ = (((o == null))?null:o);
return (function (){var or__31937__auto__ = (cljs.core._meta[(function (){var G__42615 = x__32581__auto__;
return goog.typeOf(G__42615);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._meta["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj42617 = {};
return obj42617;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__31925__auto__ = o;
if(and__31925__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__31925__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__32581__auto__ = (((o == null))?null:o);
return (function (){var or__31937__auto__ = (cljs.core._with_meta[(function (){var G__42621 = x__32581__auto__;
return goog.typeOf(G__42621);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._with_meta["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj42623 = {};
return obj42623;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__31925__auto__ = coll;
if(and__31925__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__31925__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__32581__auto__ = (((coll == null))?null:coll);
return (function (){var or__31937__auto__ = (cljs.core._reduce[(function (){var G__42629 = x__32581__auto__;
return goog.typeOf(G__42629);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._reduce["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__31925__auto__ = coll;
if(and__31925__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__31925__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__32581__auto__ = (((coll == null))?null:coll);
return (function (){var or__31937__auto__ = (cljs.core._reduce[(function (){var G__42631 = x__32581__auto__;
return goog.typeOf(G__42631);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._reduce["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj42633 = {};
return obj42633;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__31925__auto__ = coll;
if(and__31925__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__31925__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__32581__auto__ = (((coll == null))?null:coll);
return (function (){var or__31937__auto__ = (cljs.core._kv_reduce[(function (){var G__42637 = x__32581__auto__;
return goog.typeOf(G__42637);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj42639 = {};
return obj42639;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__31925__auto__ = o;
if(and__31925__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__31925__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__32581__auto__ = (((o == null))?null:o);
return (function (){var or__31937__auto__ = (cljs.core._equiv[(function (){var G__42643 = x__32581__auto__;
return goog.typeOf(G__42643);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._equiv["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj42645 = {};
return obj42645;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__31925__auto__ = o;
if(and__31925__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__31925__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__32581__auto__ = (((o == null))?null:o);
return (function (){var or__31937__auto__ = (cljs.core._hash[(function (){var G__42649 = x__32581__auto__;
return goog.typeOf(G__42649);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._hash["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj42651 = {};
return obj42651;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__31925__auto__ = o;
if(and__31925__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__31925__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__32581__auto__ = (((o == null))?null:o);
return (function (){var or__31937__auto__ = (cljs.core._seq[(function (){var G__42655 = x__32581__auto__;
return goog.typeOf(G__42655);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._seq["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj42657 = {};
return obj42657;
})();


cljs.core.IList = (function (){var obj42659 = {};
return obj42659;
})();


cljs.core.IRecord = (function (){var obj42661 = {};
return obj42661;
})();


cljs.core.IReversible = (function (){var obj42663 = {};
return obj42663;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__31925__auto__ = coll;
if(and__31925__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__31925__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__32581__auto__ = (((coll == null))?null:coll);
return (function (){var or__31937__auto__ = (cljs.core._rseq[(function (){var G__42667 = x__32581__auto__;
return goog.typeOf(G__42667);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._rseq["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj42669 = {};
return obj42669;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__31925__auto__ = coll;
if(and__31925__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__31925__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__32581__auto__ = (((coll == null))?null:coll);
return (function (){var or__31937__auto__ = (cljs.core._sorted_seq[(function (){var G__42673 = x__32581__auto__;
return goog.typeOf(G__42673);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__31925__auto__ = coll;
if(and__31925__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__31925__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__32581__auto__ = (((coll == null))?null:coll);
return (function (){var or__31937__auto__ = (cljs.core._sorted_seq_from[(function (){var G__42677 = x__32581__auto__;
return goog.typeOf(G__42677);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__31925__auto__ = coll;
if(and__31925__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__31925__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__32581__auto__ = (((coll == null))?null:coll);
return (function (){var or__31937__auto__ = (cljs.core._entry_key[(function (){var G__42681 = x__32581__auto__;
return goog.typeOf(G__42681);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._entry_key["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__31925__auto__ = coll;
if(and__31925__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__31925__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__32581__auto__ = (((coll == null))?null:coll);
return (function (){var or__31937__auto__ = (cljs.core._comparator[(function (){var G__42685 = x__32581__auto__;
return goog.typeOf(G__42685);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._comparator["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj42687 = {};
return obj42687;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__31925__auto__ = writer;
if(and__31925__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__31925__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__32581__auto__ = (((writer == null))?null:writer);
return (function (){var or__31937__auto__ = (cljs.core._write[(function (){var G__42691 = x__32581__auto__;
return goog.typeOf(G__42691);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._write["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__31925__auto__ = writer;
if(and__31925__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__31925__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__32581__auto__ = (((writer == null))?null:writer);
return (function (){var or__31937__auto__ = (cljs.core._flush[(function (){var G__42695 = x__32581__auto__;
return goog.typeOf(G__42695);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._flush["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj42697 = {};
return obj42697;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__31925__auto__ = o;
if(and__31925__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__31925__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__32581__auto__ = (((o == null))?null:o);
return (function (){var or__31937__auto__ = (cljs.core._pr_writer[(function (){var G__42701 = x__32581__auto__;
return goog.typeOf(G__42701);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj42703 = {};
return obj42703;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__31925__auto__ = d;
if(and__31925__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__31925__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__32581__auto__ = (((d == null))?null:d);
return (function (){var or__31937__auto__ = (cljs.core._realized_QMARK_[(function (){var G__42707 = x__32581__auto__;
return goog.typeOf(G__42707);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj42709 = {};
return obj42709;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__31925__auto__ = this$;
if(and__31925__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__31925__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__32581__auto__ = (((this$ == null))?null:this$);
return (function (){var or__31937__auto__ = (cljs.core._notify_watches[(function (){var G__42713 = x__32581__auto__;
return goog.typeOf(G__42713);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__31925__auto__ = this$;
if(and__31925__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__31925__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__32581__auto__ = (((this$ == null))?null:this$);
return (function (){var or__31937__auto__ = (cljs.core._add_watch[(function (){var G__42717 = x__32581__auto__;
return goog.typeOf(G__42717);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._add_watch["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__31925__auto__ = this$;
if(and__31925__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__31925__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__32581__auto__ = (((this$ == null))?null:this$);
return (function (){var or__31937__auto__ = (cljs.core._remove_watch[(function (){var G__42721 = x__32581__auto__;
return goog.typeOf(G__42721);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj42723 = {};
return obj42723;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__31925__auto__ = coll;
if(and__31925__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__31925__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__32581__auto__ = (((coll == null))?null:coll);
return (function (){var or__31937__auto__ = (cljs.core._as_transient[(function (){var G__42727 = x__32581__auto__;
return goog.typeOf(G__42727);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._as_transient["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj42729 = {};
return obj42729;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__31925__auto__ = tcoll;
if(and__31925__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__31925__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__32581__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__31937__auto__ = (cljs.core._conj_BANG_[(function (){var G__42733 = x__32581__auto__;
return goog.typeOf(G__42733);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__31925__auto__ = tcoll;
if(and__31925__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__31925__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__32581__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__31937__auto__ = (cljs.core._persistent_BANG_[(function (){var G__42737 = x__32581__auto__;
return goog.typeOf(G__42737);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj42739 = {};
return obj42739;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__31925__auto__ = tcoll;
if(and__31925__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__31925__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__32581__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__31937__auto__ = (cljs.core._assoc_BANG_[(function (){var G__42743 = x__32581__auto__;
return goog.typeOf(G__42743);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj42745 = {};
return obj42745;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__31925__auto__ = tcoll;
if(and__31925__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__31925__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__32581__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__31937__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__42749 = x__32581__auto__;
return goog.typeOf(G__42749);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj42751 = {};
return obj42751;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__31925__auto__ = tcoll;
if(and__31925__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__31925__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__32581__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__31937__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__42755 = x__32581__auto__;
return goog.typeOf(G__42755);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__31925__auto__ = tcoll;
if(and__31925__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__31925__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__32581__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__31937__auto__ = (cljs.core._pop_BANG_[(function (){var G__42759 = x__32581__auto__;
return goog.typeOf(G__42759);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj42761 = {};
return obj42761;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__31925__auto__ = tcoll;
if(and__31925__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__31925__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__32581__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__31937__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__42765 = x__32581__auto__;
return goog.typeOf(G__42765);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj42767 = {};
return obj42767;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__31925__auto__ = x;
if(and__31925__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__31925__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__32581__auto__ = (((x == null))?null:x);
return (function (){var or__31937__auto__ = (cljs.core._compare[(function (){var G__42771 = x__32581__auto__;
return goog.typeOf(G__42771);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._compare["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj42773 = {};
return obj42773;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__31925__auto__ = coll;
if(and__31925__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__31925__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__32581__auto__ = (((coll == null))?null:coll);
return (function (){var or__31937__auto__ = (cljs.core._drop_first[(function (){var G__42777 = x__32581__auto__;
return goog.typeOf(G__42777);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._drop_first["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj42779 = {};
return obj42779;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__31925__auto__ = coll;
if(and__31925__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__31925__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__32581__auto__ = (((coll == null))?null:coll);
return (function (){var or__31937__auto__ = (cljs.core._chunked_first[(function (){var G__42783 = x__32581__auto__;
return goog.typeOf(G__42783);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__31925__auto__ = coll;
if(and__31925__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__31925__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__32581__auto__ = (((coll == null))?null:coll);
return (function (){var or__31937__auto__ = (cljs.core._chunked_rest[(function (){var G__42787 = x__32581__auto__;
return goog.typeOf(G__42787);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj42789 = {};
return obj42789;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__31925__auto__ = coll;
if(and__31925__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__31925__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__32581__auto__ = (((coll == null))?null:coll);
return (function (){var or__31937__auto__ = (cljs.core._chunked_next[(function (){var G__42793 = x__32581__auto__;
return goog.typeOf(G__42793);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj42795 = {};
return obj42795;
})();

cljs.core._name = (function _name(x){
if((function (){var and__31925__auto__ = x;
if(and__31925__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__31925__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__32581__auto__ = (((x == null))?null:x);
return (function (){var or__31937__auto__ = (cljs.core._name[(function (){var G__42799 = x__32581__auto__;
return goog.typeOf(G__42799);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._name["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__31925__auto__ = x;
if(and__31925__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__31925__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__32581__auto__ = (((x == null))?null:x);
return (function (){var or__31937__auto__ = (cljs.core._namespace[(function (){var G__42803 = x__32581__auto__;
return goog.typeOf(G__42803);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._namespace["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj42805 = {};
return obj42805;
})();


cljs.core.IReset = (function (){var obj42807 = {};
return obj42807;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__31925__auto__ = o;
if(and__31925__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__31925__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__32581__auto__ = (((o == null))?null:o);
return (function (){var or__31937__auto__ = (cljs.core._reset_BANG_[(function (){var G__42811 = x__32581__auto__;
return goog.typeOf(G__42811);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj42813 = {};
return obj42813;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__31925__auto__ = o;
if(and__31925__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__31925__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__32581__auto__ = (((o == null))?null:o);
return (function (){var or__31937__auto__ = (cljs.core._swap_BANG_[(function (){var G__42823 = x__32581__auto__;
return goog.typeOf(G__42823);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__31925__auto__ = o;
if(and__31925__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__31925__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__32581__auto__ = (((o == null))?null:o);
return (function (){var or__31937__auto__ = (cljs.core._swap_BANG_[(function (){var G__42825 = x__32581__auto__;
return goog.typeOf(G__42825);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__31925__auto__ = o;
if(and__31925__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__31925__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__32581__auto__ = (((o == null))?null:o);
return (function (){var or__31937__auto__ = (cljs.core._swap_BANG_[(function (){var G__42827 = x__32581__auto__;
return goog.typeOf(G__42827);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__31925__auto__ = o;
if(and__31925__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__31925__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__32581__auto__ = (((o == null))?null:o);
return (function (){var or__31937__auto__ = (cljs.core._swap_BANG_[(function (){var G__42829 = x__32581__auto__;
return goog.typeOf(G__42829);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj42831 = {};
return obj42831;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__31925__auto__ = o;
if(and__31925__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__31925__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__32581__auto__ = (((o == null))?null:o);
return (function (){var or__31937__auto__ = (cljs.core._vreset_BANG_[(function (){var G__42835 = x__32581__auto__;
return goog.typeOf(G__42835);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj42837 = {};
return obj42837;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__31925__auto__ = coll;
if(and__31925__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__31925__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__32581__auto__ = (((coll == null))?null:coll);
return (function (){var or__31937__auto__ = (cljs.core._iterator[(function (){var G__42841 = x__32581__auto__;
return goog.typeOf(G__42841);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._iterator["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__32524__auto__,writer__32525__auto__,opt__32526__auto__){
return cljs.core._write(writer__32525__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__42844 = (4294967295);
var G__42845 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__42844,G__42845) : Math.imul.call(null,G__42844,G__42845));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__42848 = a;
var G__42849 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__42848,G__42849) : Math.imul.call(null,G__42848,G__42849));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__42850 = (i + (2));
var G__42851 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__42850;
h1 = G__42851;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj42853 = {};
return obj42853;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__42854 = (i + (1));
var G__42855 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__42854;
hash = G__42855;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj42859 = {};
return obj42859;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__42862 = o;
if(G__42862){
var bit__32611__auto__ = (G__42862.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__32611__auto__) || (G__42862.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__42863 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__42863) : Math.floor.call(null,G__42863));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__31925__auto__ = cljs.core.not(a.ns);
if(and__31925__auto__){
return b.ns;
} else {
return and__31925__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__42870 = a.ns;
var G__42871 = b.ns;
return goog.array.defaultCompare(G__42870,G__42871);
})();
if(((0) === nsc)){
var G__42872 = a.name;
var G__42873 = b.name;
return goog.array.defaultCompare(G__42872,G__42873);
} else {
return nsc;
}
}
} else {
var G__42874 = a.name;
var G__42875 = b.name;
return goog.array.defaultCompare(G__42874,G__42875);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__32358__auto__ = self__._hash;
if(!((h__32358__auto__ == null))){
return h__32358__auto__;
} else {
var h__32358__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__32358__auto____$1;

return h__32358__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__42877 = null;
var G__42877__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__42877__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__42877 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__42877__2.call(this,self__,coll);
case 3:
return G__42877__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__42877.cljs$core$IFn$_invoke$arity$2 = G__42877__2;
G__42877.cljs$core$IFn$_invoke$arity$3 = G__42877__3;
return G__42877;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args42876){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args42876)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__32524__auto__,writer__32525__auto__,opt__32526__auto__){
return cljs.core._write(writer__32525__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__42925 = null;
var G__42925__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__42925__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__42925__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__42925__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__42925__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__42925__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__42925__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__42925__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__42925__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__42925__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__42925__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__42925__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__42925__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__42925__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__42925__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__42925__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__42925__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__42925__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__42925__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__42925__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__42925__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__42925__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__42881 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__42882 = a;
var G__42883 = b;
var G__42884 = c;
var G__42885 = d;
var G__42886 = e;
var G__42887 = f;
var G__42888 = g;
var G__42889 = h;
var G__42890 = i;
var G__42891 = j;
var G__42892 = k;
var G__42893 = l;
var G__42894 = m;
var G__42895 = n;
var G__42896 = o;
var G__42897 = p;
var G__42898 = q;
var G__42899 = r;
var G__42900 = s;
var G__42901 = t;
var G__42902 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__42881,G__42882,G__42883,G__42884,G__42885,G__42886,G__42887,G__42888,G__42889,G__42890,G__42891,G__42892,G__42893,G__42894,G__42895,G__42896,G__42897,G__42898,G__42899,G__42900,G__42901,G__42902) : cljs.core.apply.call(null,G__42881,G__42882,G__42883,G__42884,G__42885,G__42886,G__42887,G__42888,G__42889,G__42890,G__42891,G__42892,G__42893,G__42894,G__42895,G__42896,G__42897,G__42898,G__42899,G__42900,G__42901,G__42902));
});
G__42925 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__42925__1.call(this,self__);
case 2:
return G__42925__2.call(this,self__,a);
case 3:
return G__42925__3.call(this,self__,a,b);
case 4:
return G__42925__4.call(this,self__,a,b,c);
case 5:
return G__42925__5.call(this,self__,a,b,c,d);
case 6:
return G__42925__6.call(this,self__,a,b,c,d,e);
case 7:
return G__42925__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__42925__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__42925__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__42925__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__42925__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__42925__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__42925__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__42925__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__42925__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__42925__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__42925__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__42925__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__42925__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__42925__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__42925__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__42925__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__42925.cljs$core$IFn$_invoke$arity$1 = G__42925__1;
G__42925.cljs$core$IFn$_invoke$arity$2 = G__42925__2;
G__42925.cljs$core$IFn$_invoke$arity$3 = G__42925__3;
G__42925.cljs$core$IFn$_invoke$arity$4 = G__42925__4;
G__42925.cljs$core$IFn$_invoke$arity$5 = G__42925__5;
G__42925.cljs$core$IFn$_invoke$arity$6 = G__42925__6;
G__42925.cljs$core$IFn$_invoke$arity$7 = G__42925__7;
G__42925.cljs$core$IFn$_invoke$arity$8 = G__42925__8;
G__42925.cljs$core$IFn$_invoke$arity$9 = G__42925__9;
G__42925.cljs$core$IFn$_invoke$arity$10 = G__42925__10;
G__42925.cljs$core$IFn$_invoke$arity$11 = G__42925__11;
G__42925.cljs$core$IFn$_invoke$arity$12 = G__42925__12;
G__42925.cljs$core$IFn$_invoke$arity$13 = G__42925__13;
G__42925.cljs$core$IFn$_invoke$arity$14 = G__42925__14;
G__42925.cljs$core$IFn$_invoke$arity$15 = G__42925__15;
G__42925.cljs$core$IFn$_invoke$arity$16 = G__42925__16;
G__42925.cljs$core$IFn$_invoke$arity$17 = G__42925__17;
G__42925.cljs$core$IFn$_invoke$arity$18 = G__42925__18;
G__42925.cljs$core$IFn$_invoke$arity$19 = G__42925__19;
G__42925.cljs$core$IFn$_invoke$arity$20 = G__42925__20;
G__42925.cljs$core$IFn$_invoke$arity$21 = G__42925__21;
G__42925.cljs$core$IFn$_invoke$arity$22 = G__42925__22;
return G__42925;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args42880){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args42880)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__42903 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__42904 = a;
var G__42905 = b;
var G__42906 = c;
var G__42907 = d;
var G__42908 = e;
var G__42909 = f;
var G__42910 = g;
var G__42911 = h;
var G__42912 = i;
var G__42913 = j;
var G__42914 = k;
var G__42915 = l;
var G__42916 = m;
var G__42917 = n;
var G__42918 = o;
var G__42919 = p;
var G__42920 = q;
var G__42921 = r;
var G__42922 = s;
var G__42923 = t;
var G__42924 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__42903,G__42904,G__42905,G__42906,G__42907,G__42908,G__42909,G__42910,G__42911,G__42912,G__42913,G__42914,G__42915,G__42916,G__42917,G__42918,G__42919,G__42920,G__42921,G__42922,G__42923,G__42924) : cljs.core.apply.call(null,G__42903,G__42904,G__42905,G__42906,G__42907,G__42908,G__42909,G__42910,G__42911,G__42912,G__42913,G__42914,G__42915,G__42916,G__42917,G__42918,G__42919,G__42920,G__42921,G__42922,G__42923,G__42924));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__32524__auto__,writer__32525__auto__,opt__32526__auto__){
return cljs.core._write(writer__32525__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__42927 = x;
if(G__42927){
var bit__32618__auto__ = null;
if(cljs.core.truth_((function (){var or__31937__auto__ = bit__32618__auto__;
if(cljs.core.truth_(or__31937__auto__)){
return or__31937__auto__;
} else {
return G__42927.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__42927.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__42927);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__42927);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__42929 = value;
if(G__42929){
var bit__32618__auto__ = (G__42929.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__32618__auto__) || (G__42929.cljs$core$ICloneable$)){
return true;
} else {
if((!G__42929.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__42929);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__42929);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__42931 = coll;
if(G__42931){
var bit__32611__auto__ = (G__42931.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__32611__auto__) || (G__42931.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__42933 = coll;
if(G__42933){
var bit__32611__auto__ = (G__42933.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__32611__auto__) || (G__42933.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__42935 = coll;
if(G__42935){
var bit__32611__auto__ = (G__42935.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__32611__auto__) || (G__42935.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__42937 = coll;
if(G__42937){
var bit__32611__auto__ = (G__42937.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__32611__auto__) || (G__42937.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__42942__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__42943 = y;
var G__42944 = cljs.core.first(more);
var G__42945 = cljs.core.next(more);
x = G__42943;
y = G__42944;
more = G__42945;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__42942 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__42946__i = 0, G__42946__a = new Array(arguments.length -  2);
while (G__42946__i < G__42946__a.length) {G__42946__a[G__42946__i] = arguments[G__42946__i + 2]; ++G__42946__i;}
  more = new cljs.core.IndexedSeq(G__42946__a,0);
} 
return G__42942__delegate.call(this,x,y,more);};
G__42942.cljs$lang$maxFixedArity = 2;
G__42942.cljs$lang$applyTo = (function (arglist__42947){
var x = cljs.core.first(arglist__42947);
arglist__42947 = cljs.core.next(arglist__42947);
var y = cljs.core.first(arglist__42947);
var more = cljs.core.rest(arglist__42947);
return G__42942__delegate(x,y,more);
});
G__42942.cljs$core$IFn$_invoke$arity$variadic = G__42942__delegate;
return G__42942;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__42948 = null;
if (arguments.length > 2) {
var G__42949__i = 0, G__42949__a = new Array(arguments.length -  2);
while (G__42949__i < G__42949__a.length) {G__42949__a[G__42949__i] = arguments[G__42949__i + 2]; ++G__42949__i;}
G__42948 = new cljs.core.IndexedSeq(G__42949__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__42948);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__32524__auto__,writer__32525__auto__,opt__32526__auto__){
return cljs.core._write(writer__32525__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__42950 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__42950) : cljs.core.es6_iterator_seq.call(null,G__42950));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__32524__auto__,writer__32525__auto__,opt__32526__auto__){
return cljs.core._write(writer__32525__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__42951 = (n + (1));
var G__42952 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__42953 = cljs.core.next(coll__$1);
n = G__42951;
hash_code = G__42952;
coll__$1 = G__42953;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__42954 = (n + (1));
var G__42955 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__42956 = cljs.core.next(coll__$1);
n = G__42954;
hash_code = G__42955;
coll__$1 = G__42956;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__42957 = o;
return goog.getUid(G__42957);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__32524__auto__,writer__32525__auto__,opt__32526__auto__){
return cljs.core._write(writer__32525__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__42959 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__42959) : cljs.core.deref.call(null,G__42959));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__42966 = val;
var G__42967 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__42966,G__42967) : f.call(null,G__42966,G__42967));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__42972 = nval;
var G__42973 = (n + (1));
val = G__42972;
n = G__42973;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__42968 = val__$1;
var G__42969 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__42968,G__42969) : f.call(null,G__42968,G__42969));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__42974 = nval;
var G__42975 = (n + (1));
val__$1 = G__42974;
n = G__42975;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__42970 = val__$1;
var G__42971 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__42970,G__42971) : f.call(null,G__42970,G__42971));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__42976 = nval;
var G__42977 = (n + (1));
val__$1 = G__42976;
n = G__42977;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__42984 = val;
var G__42985 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__42984,G__42985) : f.call(null,G__42984,G__42985));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__42990 = nval;
var G__42991 = (n + (1));
val = G__42990;
n = G__42991;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__42986 = val__$1;
var G__42987 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__42986,G__42987) : f.call(null,G__42986,G__42987));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__42992 = nval;
var G__42993 = (n + (1));
val__$1 = G__42992;
n = G__42993;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__42988 = val__$1;
var G__42989 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__42988,G__42989) : f.call(null,G__42988,G__42989));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__42994 = nval;
var G__42995 = (n + (1));
val__$1 = G__42994;
n = G__42995;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__42997 = x;
if(G__42997){
var bit__32618__auto__ = (G__42997.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__32618__auto__) || (G__42997.cljs$core$ICounted$)){
return true;
} else {
if((!G__42997.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__42997);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__42997);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__42999 = x;
if(G__42999){
var bit__32618__auto__ = (G__42999.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__32618__auto__) || (G__42999.cljs$core$IIndexed$)){
return true;
} else {
if((!G__42999.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__42999);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__42999);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__32524__auto__,writer__32525__auto__,opt__32526__auto__){
return cljs.core._write(writer__32525__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__43000 = coll__$1;
var G__43001 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__43000,G__43001) : cljs.core.equiv_sequential.call(null,G__43000,G__43001));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__43002 = o;
var G__43003 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__43002,G__43003) : cljs.core.cons.call(null,G__43002,G__43003));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__32524__auto__,writer__32525__auto__,opt__32526__auto__){
return cljs.core._write(writer__32525__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__32915__auto__ = this;
return cljs.core.es6_iterator(this__32915__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__43006 = coll__$1;
var G__43007 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__43006,G__43007) : cljs.core.equiv_sequential.call(null,G__43006,G__43007));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__43008 = cljs.core.List.EMPTY;
var G__43009 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__43008,G__43009) : cljs.core.with_meta.call(null,G__43008,G__43009));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__43010 = f;
var G__43011 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__43010,G__43011) : cljs.core.seq_reduce.call(null,G__43010,G__43011));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__43012 = f;
var G__43013 = start;
var G__43014 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__43012,G__43013,G__43014) : cljs.core.seq_reduce.call(null,G__43012,G__43013,G__43014));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__43015 = o;
var G__43016 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__43015,G__43016) : cljs.core.cons.call(null,G__43015,G__43016));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__32524__auto__,writer__32525__auto__,opt__32526__auto__){
return cljs.core._write(writer__32525__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__32915__auto__ = this;
return cljs.core.es6_iterator(this__32915__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__43017 = sn;
s = G__43017;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__43022__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__43023 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__43024 = cljs.core.first(xs);
var G__43025 = cljs.core.next(xs);
coll = G__43023;
x = G__43024;
xs = G__43025;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__43022 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__43026__i = 0, G__43026__a = new Array(arguments.length -  2);
while (G__43026__i < G__43026__a.length) {G__43026__a[G__43026__i] = arguments[G__43026__i + 2]; ++G__43026__i;}
  xs = new cljs.core.IndexedSeq(G__43026__a,0);
} 
return G__43022__delegate.call(this,coll,x,xs);};
G__43022.cljs$lang$maxFixedArity = 2;
G__43022.cljs$lang$applyTo = (function (arglist__43027){
var coll = cljs.core.first(arglist__43027);
arglist__43027 = cljs.core.next(arglist__43027);
var x = cljs.core.first(arglist__43027);
var xs = cljs.core.rest(arglist__43027);
return G__43022__delegate(coll,x,xs);
});
G__43022.cljs$core$IFn$_invoke$arity$variadic = G__43022__delegate;
return G__43022;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__43028 = null;
if (arguments.length > 2) {
var G__43029__i = 0, G__43029__a = new Array(arguments.length -  2);
while (G__43029__i < G__43029__a.length) {G__43029__a[G__43029__i] = arguments[G__43029__i + 2]; ++G__43029__i;}
G__43028 = new cljs.core.IndexedSeq(G__43029__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__43028);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__43030 = cljs.core.next(s);
var G__43031 = (acc + (1));
s = G__43030;
acc = G__43031;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__43033 = coll;
if(G__43033){
var bit__32611__auto__ = (G__43033.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__32611__auto__) || (G__43033.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__43034 = cljs.core.next(coll);
var G__43035 = (n - (1));
coll = G__43034;
n = G__43035;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__43036 = cljs.core.next(coll);
var G__43037 = (n - (1));
var G__43038 = not_found;
coll = G__43036;
n = G__43037;
not_found = G__43038;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__43043 = coll;
if(G__43043){
var bit__32611__auto__ = (G__43043.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__32611__auto__) || (G__43043.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__43044 = coll;
if(G__43044){
var bit__32618__auto__ = (G__43044.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__32618__auto__) || (G__43044.cljs$core$ISeq$)){
return true;
} else {
if((!G__43044.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__43044);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__43044);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__43045 = coll;
if(G__43045){
var bit__32611__auto__ = (G__43045.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__32611__auto__) || (G__43045.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__43046 = coll;
if(G__43046){
var bit__32618__auto__ = (G__43046.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__32618__auto__) || (G__43046.cljs$core$ISeq$)){
return true;
} else {
if((!G__43046.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__43046);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__43046);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__43047 = (n__$1 - (1));
var G__43048 = cljs.core.rest(xs);
n__$1 = G__43047;
xs = G__43048;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__43051 = o;
if(G__43051){
var bit__32611__auto__ = (G__43051.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__32611__auto__) || (G__43051.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__43052 = o;
if(G__43052){
var bit__32611__auto__ = (G__43052.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__32611__auto__) || (G__43052.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__43056__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__43057 = ret;
var G__43058 = cljs.core.first(kvs);
var G__43059 = cljs.core.second(kvs);
var G__43060 = cljs.core.nnext(kvs);
coll = G__43057;
k = G__43058;
v = G__43059;
kvs = G__43060;
continue;
} else {
return ret;
}
break;
}
};
var G__43056 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__43061__i = 0, G__43061__a = new Array(arguments.length -  3);
while (G__43061__i < G__43061__a.length) {G__43061__a[G__43061__i] = arguments[G__43061__i + 3]; ++G__43061__i;}
  kvs = new cljs.core.IndexedSeq(G__43061__a,0);
} 
return G__43056__delegate.call(this,coll,k,v,kvs);};
G__43056.cljs$lang$maxFixedArity = 3;
G__43056.cljs$lang$applyTo = (function (arglist__43062){
var coll = cljs.core.first(arglist__43062);
arglist__43062 = cljs.core.next(arglist__43062);
var k = cljs.core.first(arglist__43062);
arglist__43062 = cljs.core.next(arglist__43062);
var v = cljs.core.first(arglist__43062);
var kvs = cljs.core.rest(arglist__43062);
return G__43056__delegate(coll,k,v,kvs);
});
G__43056.cljs$core$IFn$_invoke$arity$variadic = G__43056__delegate;
return G__43056;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__43063 = null;
if (arguments.length > 3) {
var G__43064__i = 0, G__43064__a = new Array(arguments.length -  3);
while (G__43064__i < G__43064__a.length) {G__43064__a[G__43064__i] = arguments[G__43064__i + 3]; ++G__43064__i;}
G__43063 = new cljs.core.IndexedSeq(G__43064__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__43063);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__43067__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__43068 = ret;
var G__43069 = cljs.core.first(ks);
var G__43070 = cljs.core.next(ks);
coll = G__43068;
k = G__43069;
ks = G__43070;
continue;
} else {
return ret;
}
}
break;
}
};
var G__43067 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__43071__i = 0, G__43071__a = new Array(arguments.length -  2);
while (G__43071__i < G__43071__a.length) {G__43071__a[G__43071__i] = arguments[G__43071__i + 2]; ++G__43071__i;}
  ks = new cljs.core.IndexedSeq(G__43071__a,0);
} 
return G__43067__delegate.call(this,coll,k,ks);};
G__43067.cljs$lang$maxFixedArity = 2;
G__43067.cljs$lang$applyTo = (function (arglist__43072){
var coll = cljs.core.first(arglist__43072);
arglist__43072 = cljs.core.next(arglist__43072);
var k = cljs.core.first(arglist__43072);
var ks = cljs.core.rest(arglist__43072);
return G__43067__delegate(coll,k,ks);
});
G__43067.cljs$core$IFn$_invoke$arity$variadic = G__43067__delegate;
return G__43067;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__43073 = null;
if (arguments.length > 2) {
var G__43074__i = 0, G__43074__a = new Array(arguments.length -  2);
while (G__43074__i < G__43074__a.length) {G__43074__a[G__43074__i] = arguments[G__43074__i + 2]; ++G__43074__i;}
G__43073 = new cljs.core.IndexedSeq(G__43074__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__43073);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__31937__auto__ = (function (){var G__43079 = f;
return goog.isFunction(G__43079);
})();
if(cljs.core.truth_(or__31937__auto__)){
return or__31937__auto__;
} else {
var G__43080 = f;
if(G__43080){
var bit__32618__auto__ = null;
if(cljs.core.truth_((function (){var or__31937__auto____$1 = bit__32618__auto__;
if(cljs.core.truth_(or__31937__auto____$1)){
return or__31937__auto____$1;
} else {
return G__43080.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__43080.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__43080);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__43080);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__43546 = null;
var G__43546__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__43546__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__43082 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__43082) : self__.afn.call(null,G__43082));
});
var G__43546__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__43083 = a;
var G__43084 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__43083,G__43084) : self__.afn.call(null,G__43083,G__43084));
});
var G__43546__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__43085 = a;
var G__43086 = b;
var G__43087 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__43085,G__43086,G__43087) : self__.afn.call(null,G__43085,G__43086,G__43087));
});
var G__43546__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__43088 = a;
var G__43089 = b;
var G__43090 = c;
var G__43091 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__43088,G__43089,G__43090,G__43091) : self__.afn.call(null,G__43088,G__43089,G__43090,G__43091));
});
var G__43546__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__43092 = a;
var G__43093 = b;
var G__43094 = c;
var G__43095 = d;
var G__43096 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__43092,G__43093,G__43094,G__43095,G__43096) : self__.afn.call(null,G__43092,G__43093,G__43094,G__43095,G__43096));
});
var G__43546__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__43097 = a;
var G__43098 = b;
var G__43099 = c;
var G__43100 = d;
var G__43101 = e;
var G__43102 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__43097,G__43098,G__43099,G__43100,G__43101,G__43102) : self__.afn.call(null,G__43097,G__43098,G__43099,G__43100,G__43101,G__43102));
});
var G__43546__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__43103 = a;
var G__43104 = b;
var G__43105 = c;
var G__43106 = d;
var G__43107 = e;
var G__43108 = f;
var G__43109 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__43103,G__43104,G__43105,G__43106,G__43107,G__43108,G__43109) : self__.afn.call(null,G__43103,G__43104,G__43105,G__43106,G__43107,G__43108,G__43109));
});
var G__43546__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__43110 = a;
var G__43111 = b;
var G__43112 = c;
var G__43113 = d;
var G__43114 = e;
var G__43115 = f;
var G__43116 = g;
var G__43117 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__43110,G__43111,G__43112,G__43113,G__43114,G__43115,G__43116,G__43117) : self__.afn.call(null,G__43110,G__43111,G__43112,G__43113,G__43114,G__43115,G__43116,G__43117));
});
var G__43546__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__43118 = a;
var G__43119 = b;
var G__43120 = c;
var G__43121 = d;
var G__43122 = e;
var G__43123 = f;
var G__43124 = g;
var G__43125 = h;
var G__43126 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__43118,G__43119,G__43120,G__43121,G__43122,G__43123,G__43124,G__43125,G__43126) : self__.afn.call(null,G__43118,G__43119,G__43120,G__43121,G__43122,G__43123,G__43124,G__43125,G__43126));
});
var G__43546__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__43127 = a;
var G__43128 = b;
var G__43129 = c;
var G__43130 = d;
var G__43131 = e;
var G__43132 = f;
var G__43133 = g;
var G__43134 = h;
var G__43135 = i;
var G__43136 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__43127,G__43128,G__43129,G__43130,G__43131,G__43132,G__43133,G__43134,G__43135,G__43136) : self__.afn.call(null,G__43127,G__43128,G__43129,G__43130,G__43131,G__43132,G__43133,G__43134,G__43135,G__43136));
});
var G__43546__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__43137 = a;
var G__43138 = b;
var G__43139 = c;
var G__43140 = d;
var G__43141 = e;
var G__43142 = f;
var G__43143 = g;
var G__43144 = h;
var G__43145 = i;
var G__43146 = j;
var G__43147 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__43137,G__43138,G__43139,G__43140,G__43141,G__43142,G__43143,G__43144,G__43145,G__43146,G__43147) : self__.afn.call(null,G__43137,G__43138,G__43139,G__43140,G__43141,G__43142,G__43143,G__43144,G__43145,G__43146,G__43147));
});
var G__43546__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__43148 = a;
var G__43149 = b;
var G__43150 = c;
var G__43151 = d;
var G__43152 = e;
var G__43153 = f;
var G__43154 = g;
var G__43155 = h;
var G__43156 = i;
var G__43157 = j;
var G__43158 = k;
var G__43159 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__43148,G__43149,G__43150,G__43151,G__43152,G__43153,G__43154,G__43155,G__43156,G__43157,G__43158,G__43159) : self__.afn.call(null,G__43148,G__43149,G__43150,G__43151,G__43152,G__43153,G__43154,G__43155,G__43156,G__43157,G__43158,G__43159));
});
var G__43546__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__43160 = a;
var G__43161 = b;
var G__43162 = c;
var G__43163 = d;
var G__43164 = e;
var G__43165 = f;
var G__43166 = g;
var G__43167 = h;
var G__43168 = i;
var G__43169 = j;
var G__43170 = k;
var G__43171 = l;
var G__43172 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__43160,G__43161,G__43162,G__43163,G__43164,G__43165,G__43166,G__43167,G__43168,G__43169,G__43170,G__43171,G__43172) : self__.afn.call(null,G__43160,G__43161,G__43162,G__43163,G__43164,G__43165,G__43166,G__43167,G__43168,G__43169,G__43170,G__43171,G__43172));
});
var G__43546__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__43173 = a;
var G__43174 = b;
var G__43175 = c;
var G__43176 = d;
var G__43177 = e;
var G__43178 = f;
var G__43179 = g;
var G__43180 = h;
var G__43181 = i;
var G__43182 = j;
var G__43183 = k;
var G__43184 = l;
var G__43185 = m;
var G__43186 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__43173,G__43174,G__43175,G__43176,G__43177,G__43178,G__43179,G__43180,G__43181,G__43182,G__43183,G__43184,G__43185,G__43186) : self__.afn.call(null,G__43173,G__43174,G__43175,G__43176,G__43177,G__43178,G__43179,G__43180,G__43181,G__43182,G__43183,G__43184,G__43185,G__43186));
});
var G__43546__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__43187 = a;
var G__43188 = b;
var G__43189 = c;
var G__43190 = d;
var G__43191 = e;
var G__43192 = f;
var G__43193 = g;
var G__43194 = h;
var G__43195 = i;
var G__43196 = j;
var G__43197 = k;
var G__43198 = l;
var G__43199 = m;
var G__43200 = n;
var G__43201 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__43187,G__43188,G__43189,G__43190,G__43191,G__43192,G__43193,G__43194,G__43195,G__43196,G__43197,G__43198,G__43199,G__43200,G__43201) : self__.afn.call(null,G__43187,G__43188,G__43189,G__43190,G__43191,G__43192,G__43193,G__43194,G__43195,G__43196,G__43197,G__43198,G__43199,G__43200,G__43201));
});
var G__43546__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__43202 = a;
var G__43203 = b;
var G__43204 = c;
var G__43205 = d;
var G__43206 = e;
var G__43207 = f;
var G__43208 = g;
var G__43209 = h;
var G__43210 = i;
var G__43211 = j;
var G__43212 = k;
var G__43213 = l;
var G__43214 = m;
var G__43215 = n;
var G__43216 = o;
var G__43217 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__43202,G__43203,G__43204,G__43205,G__43206,G__43207,G__43208,G__43209,G__43210,G__43211,G__43212,G__43213,G__43214,G__43215,G__43216,G__43217) : self__.afn.call(null,G__43202,G__43203,G__43204,G__43205,G__43206,G__43207,G__43208,G__43209,G__43210,G__43211,G__43212,G__43213,G__43214,G__43215,G__43216,G__43217));
});
var G__43546__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__43218 = a;
var G__43219 = b;
var G__43220 = c;
var G__43221 = d;
var G__43222 = e;
var G__43223 = f;
var G__43224 = g;
var G__43225 = h;
var G__43226 = i;
var G__43227 = j;
var G__43228 = k;
var G__43229 = l;
var G__43230 = m;
var G__43231 = n;
var G__43232 = o;
var G__43233 = p;
var G__43234 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__43218,G__43219,G__43220,G__43221,G__43222,G__43223,G__43224,G__43225,G__43226,G__43227,G__43228,G__43229,G__43230,G__43231,G__43232,G__43233,G__43234) : self__.afn.call(null,G__43218,G__43219,G__43220,G__43221,G__43222,G__43223,G__43224,G__43225,G__43226,G__43227,G__43228,G__43229,G__43230,G__43231,G__43232,G__43233,G__43234));
});
var G__43546__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__43235 = a;
var G__43236 = b;
var G__43237 = c;
var G__43238 = d;
var G__43239 = e;
var G__43240 = f;
var G__43241 = g;
var G__43242 = h;
var G__43243 = i;
var G__43244 = j;
var G__43245 = k;
var G__43246 = l;
var G__43247 = m;
var G__43248 = n;
var G__43249 = o;
var G__43250 = p;
var G__43251 = q;
var G__43252 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__43235,G__43236,G__43237,G__43238,G__43239,G__43240,G__43241,G__43242,G__43243,G__43244,G__43245,G__43246,G__43247,G__43248,G__43249,G__43250,G__43251,G__43252) : self__.afn.call(null,G__43235,G__43236,G__43237,G__43238,G__43239,G__43240,G__43241,G__43242,G__43243,G__43244,G__43245,G__43246,G__43247,G__43248,G__43249,G__43250,G__43251,G__43252));
});
var G__43546__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__43253 = a;
var G__43254 = b;
var G__43255 = c;
var G__43256 = d;
var G__43257 = e;
var G__43258 = f;
var G__43259 = g;
var G__43260 = h;
var G__43261 = i;
var G__43262 = j;
var G__43263 = k;
var G__43264 = l;
var G__43265 = m;
var G__43266 = n;
var G__43267 = o;
var G__43268 = p;
var G__43269 = q;
var G__43270 = r;
var G__43271 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__43253,G__43254,G__43255,G__43256,G__43257,G__43258,G__43259,G__43260,G__43261,G__43262,G__43263,G__43264,G__43265,G__43266,G__43267,G__43268,G__43269,G__43270,G__43271) : self__.afn.call(null,G__43253,G__43254,G__43255,G__43256,G__43257,G__43258,G__43259,G__43260,G__43261,G__43262,G__43263,G__43264,G__43265,G__43266,G__43267,G__43268,G__43269,G__43270,G__43271));
});
var G__43546__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__43272 = a;
var G__43273 = b;
var G__43274 = c;
var G__43275 = d;
var G__43276 = e;
var G__43277 = f;
var G__43278 = g;
var G__43279 = h;
var G__43280 = i;
var G__43281 = j;
var G__43282 = k;
var G__43283 = l;
var G__43284 = m;
var G__43285 = n;
var G__43286 = o;
var G__43287 = p;
var G__43288 = q;
var G__43289 = r;
var G__43290 = s;
var G__43291 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__43272,G__43273,G__43274,G__43275,G__43276,G__43277,G__43278,G__43279,G__43280,G__43281,G__43282,G__43283,G__43284,G__43285,G__43286,G__43287,G__43288,G__43289,G__43290,G__43291) : self__.afn.call(null,G__43272,G__43273,G__43274,G__43275,G__43276,G__43277,G__43278,G__43279,G__43280,G__43281,G__43282,G__43283,G__43284,G__43285,G__43286,G__43287,G__43288,G__43289,G__43290,G__43291));
});
var G__43546__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__43292 = self__.afn;
var G__43293 = a;
var G__43294 = b;
var G__43295 = c;
var G__43296 = d;
var G__43297 = e;
var G__43298 = f;
var G__43299 = g;
var G__43300 = h;
var G__43301 = i;
var G__43302 = j;
var G__43303 = k;
var G__43304 = l;
var G__43305 = m;
var G__43306 = n;
var G__43307 = o;
var G__43308 = p;
var G__43309 = q;
var G__43310 = r;
var G__43311 = s;
var G__43312 = t;
var G__43313 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__43292,G__43293,G__43294,G__43295,G__43296,G__43297,G__43298,G__43299,G__43300,G__43301,G__43302,G__43303,G__43304,G__43305,G__43306,G__43307,G__43308,G__43309,G__43310,G__43311,G__43312,G__43313) : cljs.core.apply.call(null,G__43292,G__43293,G__43294,G__43295,G__43296,G__43297,G__43298,G__43299,G__43300,G__43301,G__43302,G__43303,G__43304,G__43305,G__43306,G__43307,G__43308,G__43309,G__43310,G__43311,G__43312,G__43313));
});
G__43546 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__43546__1.call(this,self__);
case 2:
return G__43546__2.call(this,self__,a);
case 3:
return G__43546__3.call(this,self__,a,b);
case 4:
return G__43546__4.call(this,self__,a,b,c);
case 5:
return G__43546__5.call(this,self__,a,b,c,d);
case 6:
return G__43546__6.call(this,self__,a,b,c,d,e);
case 7:
return G__43546__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__43546__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__43546__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__43546__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__43546__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__43546__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__43546__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__43546__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__43546__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__43546__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__43546__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__43546__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__43546__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__43546__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__43546__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__43546__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__43546.cljs$core$IFn$_invoke$arity$1 = G__43546__1;
G__43546.cljs$core$IFn$_invoke$arity$2 = G__43546__2;
G__43546.cljs$core$IFn$_invoke$arity$3 = G__43546__3;
G__43546.cljs$core$IFn$_invoke$arity$4 = G__43546__4;
G__43546.cljs$core$IFn$_invoke$arity$5 = G__43546__5;
G__43546.cljs$core$IFn$_invoke$arity$6 = G__43546__6;
G__43546.cljs$core$IFn$_invoke$arity$7 = G__43546__7;
G__43546.cljs$core$IFn$_invoke$arity$8 = G__43546__8;
G__43546.cljs$core$IFn$_invoke$arity$9 = G__43546__9;
G__43546.cljs$core$IFn$_invoke$arity$10 = G__43546__10;
G__43546.cljs$core$IFn$_invoke$arity$11 = G__43546__11;
G__43546.cljs$core$IFn$_invoke$arity$12 = G__43546__12;
G__43546.cljs$core$IFn$_invoke$arity$13 = G__43546__13;
G__43546.cljs$core$IFn$_invoke$arity$14 = G__43546__14;
G__43546.cljs$core$IFn$_invoke$arity$15 = G__43546__15;
G__43546.cljs$core$IFn$_invoke$arity$16 = G__43546__16;
G__43546.cljs$core$IFn$_invoke$arity$17 = G__43546__17;
G__43546.cljs$core$IFn$_invoke$arity$18 = G__43546__18;
G__43546.cljs$core$IFn$_invoke$arity$19 = G__43546__19;
G__43546.cljs$core$IFn$_invoke$arity$20 = G__43546__20;
G__43546.cljs$core$IFn$_invoke$arity$21 = G__43546__21;
G__43546.cljs$core$IFn$_invoke$arity$22 = G__43546__22;
return G__43546;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args43081){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args43081)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__43314 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__43314) : self__.afn.call(null,G__43314));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__43315 = a;
var G__43316 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__43315,G__43316) : self__.afn.call(null,G__43315,G__43316));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__43317 = a;
var G__43318 = b;
var G__43319 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__43317,G__43318,G__43319) : self__.afn.call(null,G__43317,G__43318,G__43319));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__43320 = a;
var G__43321 = b;
var G__43322 = c;
var G__43323 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__43320,G__43321,G__43322,G__43323) : self__.afn.call(null,G__43320,G__43321,G__43322,G__43323));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__43324 = a;
var G__43325 = b;
var G__43326 = c;
var G__43327 = d;
var G__43328 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__43324,G__43325,G__43326,G__43327,G__43328) : self__.afn.call(null,G__43324,G__43325,G__43326,G__43327,G__43328));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__43329 = a;
var G__43330 = b;
var G__43331 = c;
var G__43332 = d;
var G__43333 = e;
var G__43334 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__43329,G__43330,G__43331,G__43332,G__43333,G__43334) : self__.afn.call(null,G__43329,G__43330,G__43331,G__43332,G__43333,G__43334));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__43335 = a;
var G__43336 = b;
var G__43337 = c;
var G__43338 = d;
var G__43339 = e;
var G__43340 = f;
var G__43341 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__43335,G__43336,G__43337,G__43338,G__43339,G__43340,G__43341) : self__.afn.call(null,G__43335,G__43336,G__43337,G__43338,G__43339,G__43340,G__43341));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__43342 = a;
var G__43343 = b;
var G__43344 = c;
var G__43345 = d;
var G__43346 = e;
var G__43347 = f;
var G__43348 = g;
var G__43349 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__43342,G__43343,G__43344,G__43345,G__43346,G__43347,G__43348,G__43349) : self__.afn.call(null,G__43342,G__43343,G__43344,G__43345,G__43346,G__43347,G__43348,G__43349));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__43350 = a;
var G__43351 = b;
var G__43352 = c;
var G__43353 = d;
var G__43354 = e;
var G__43355 = f;
var G__43356 = g;
var G__43357 = h;
var G__43358 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__43350,G__43351,G__43352,G__43353,G__43354,G__43355,G__43356,G__43357,G__43358) : self__.afn.call(null,G__43350,G__43351,G__43352,G__43353,G__43354,G__43355,G__43356,G__43357,G__43358));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__43359 = a;
var G__43360 = b;
var G__43361 = c;
var G__43362 = d;
var G__43363 = e;
var G__43364 = f;
var G__43365 = g;
var G__43366 = h;
var G__43367 = i;
var G__43368 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__43359,G__43360,G__43361,G__43362,G__43363,G__43364,G__43365,G__43366,G__43367,G__43368) : self__.afn.call(null,G__43359,G__43360,G__43361,G__43362,G__43363,G__43364,G__43365,G__43366,G__43367,G__43368));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__43369 = a;
var G__43370 = b;
var G__43371 = c;
var G__43372 = d;
var G__43373 = e;
var G__43374 = f;
var G__43375 = g;
var G__43376 = h;
var G__43377 = i;
var G__43378 = j;
var G__43379 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__43369,G__43370,G__43371,G__43372,G__43373,G__43374,G__43375,G__43376,G__43377,G__43378,G__43379) : self__.afn.call(null,G__43369,G__43370,G__43371,G__43372,G__43373,G__43374,G__43375,G__43376,G__43377,G__43378,G__43379));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__43380 = a;
var G__43381 = b;
var G__43382 = c;
var G__43383 = d;
var G__43384 = e;
var G__43385 = f;
var G__43386 = g;
var G__43387 = h;
var G__43388 = i;
var G__43389 = j;
var G__43390 = k;
var G__43391 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__43380,G__43381,G__43382,G__43383,G__43384,G__43385,G__43386,G__43387,G__43388,G__43389,G__43390,G__43391) : self__.afn.call(null,G__43380,G__43381,G__43382,G__43383,G__43384,G__43385,G__43386,G__43387,G__43388,G__43389,G__43390,G__43391));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__43392 = a;
var G__43393 = b;
var G__43394 = c;
var G__43395 = d;
var G__43396 = e;
var G__43397 = f;
var G__43398 = g;
var G__43399 = h;
var G__43400 = i;
var G__43401 = j;
var G__43402 = k;
var G__43403 = l;
var G__43404 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__43392,G__43393,G__43394,G__43395,G__43396,G__43397,G__43398,G__43399,G__43400,G__43401,G__43402,G__43403,G__43404) : self__.afn.call(null,G__43392,G__43393,G__43394,G__43395,G__43396,G__43397,G__43398,G__43399,G__43400,G__43401,G__43402,G__43403,G__43404));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__43405 = a;
var G__43406 = b;
var G__43407 = c;
var G__43408 = d;
var G__43409 = e;
var G__43410 = f;
var G__43411 = g;
var G__43412 = h;
var G__43413 = i;
var G__43414 = j;
var G__43415 = k;
var G__43416 = l;
var G__43417 = m;
var G__43418 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__43405,G__43406,G__43407,G__43408,G__43409,G__43410,G__43411,G__43412,G__43413,G__43414,G__43415,G__43416,G__43417,G__43418) : self__.afn.call(null,G__43405,G__43406,G__43407,G__43408,G__43409,G__43410,G__43411,G__43412,G__43413,G__43414,G__43415,G__43416,G__43417,G__43418));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__43419 = a;
var G__43420 = b;
var G__43421 = c;
var G__43422 = d;
var G__43423 = e;
var G__43424 = f;
var G__43425 = g;
var G__43426 = h;
var G__43427 = i;
var G__43428 = j;
var G__43429 = k;
var G__43430 = l;
var G__43431 = m;
var G__43432 = n;
var G__43433 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__43419,G__43420,G__43421,G__43422,G__43423,G__43424,G__43425,G__43426,G__43427,G__43428,G__43429,G__43430,G__43431,G__43432,G__43433) : self__.afn.call(null,G__43419,G__43420,G__43421,G__43422,G__43423,G__43424,G__43425,G__43426,G__43427,G__43428,G__43429,G__43430,G__43431,G__43432,G__43433));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__43434 = a;
var G__43435 = b;
var G__43436 = c;
var G__43437 = d;
var G__43438 = e;
var G__43439 = f;
var G__43440 = g;
var G__43441 = h;
var G__43442 = i;
var G__43443 = j;
var G__43444 = k;
var G__43445 = l;
var G__43446 = m;
var G__43447 = n;
var G__43448 = o;
var G__43449 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__43434,G__43435,G__43436,G__43437,G__43438,G__43439,G__43440,G__43441,G__43442,G__43443,G__43444,G__43445,G__43446,G__43447,G__43448,G__43449) : self__.afn.call(null,G__43434,G__43435,G__43436,G__43437,G__43438,G__43439,G__43440,G__43441,G__43442,G__43443,G__43444,G__43445,G__43446,G__43447,G__43448,G__43449));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__43450 = a;
var G__43451 = b;
var G__43452 = c;
var G__43453 = d;
var G__43454 = e;
var G__43455 = f;
var G__43456 = g;
var G__43457 = h;
var G__43458 = i;
var G__43459 = j;
var G__43460 = k;
var G__43461 = l;
var G__43462 = m;
var G__43463 = n;
var G__43464 = o;
var G__43465 = p;
var G__43466 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__43450,G__43451,G__43452,G__43453,G__43454,G__43455,G__43456,G__43457,G__43458,G__43459,G__43460,G__43461,G__43462,G__43463,G__43464,G__43465,G__43466) : self__.afn.call(null,G__43450,G__43451,G__43452,G__43453,G__43454,G__43455,G__43456,G__43457,G__43458,G__43459,G__43460,G__43461,G__43462,G__43463,G__43464,G__43465,G__43466));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__43467 = a;
var G__43468 = b;
var G__43469 = c;
var G__43470 = d;
var G__43471 = e;
var G__43472 = f;
var G__43473 = g;
var G__43474 = h;
var G__43475 = i;
var G__43476 = j;
var G__43477 = k;
var G__43478 = l;
var G__43479 = m;
var G__43480 = n;
var G__43481 = o;
var G__43482 = p;
var G__43483 = q;
var G__43484 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__43467,G__43468,G__43469,G__43470,G__43471,G__43472,G__43473,G__43474,G__43475,G__43476,G__43477,G__43478,G__43479,G__43480,G__43481,G__43482,G__43483,G__43484) : self__.afn.call(null,G__43467,G__43468,G__43469,G__43470,G__43471,G__43472,G__43473,G__43474,G__43475,G__43476,G__43477,G__43478,G__43479,G__43480,G__43481,G__43482,G__43483,G__43484));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__43485 = a;
var G__43486 = b;
var G__43487 = c;
var G__43488 = d;
var G__43489 = e;
var G__43490 = f;
var G__43491 = g;
var G__43492 = h;
var G__43493 = i;
var G__43494 = j;
var G__43495 = k;
var G__43496 = l;
var G__43497 = m;
var G__43498 = n;
var G__43499 = o;
var G__43500 = p;
var G__43501 = q;
var G__43502 = r;
var G__43503 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__43485,G__43486,G__43487,G__43488,G__43489,G__43490,G__43491,G__43492,G__43493,G__43494,G__43495,G__43496,G__43497,G__43498,G__43499,G__43500,G__43501,G__43502,G__43503) : self__.afn.call(null,G__43485,G__43486,G__43487,G__43488,G__43489,G__43490,G__43491,G__43492,G__43493,G__43494,G__43495,G__43496,G__43497,G__43498,G__43499,G__43500,G__43501,G__43502,G__43503));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__43504 = a;
var G__43505 = b;
var G__43506 = c;
var G__43507 = d;
var G__43508 = e;
var G__43509 = f;
var G__43510 = g;
var G__43511 = h;
var G__43512 = i;
var G__43513 = j;
var G__43514 = k;
var G__43515 = l;
var G__43516 = m;
var G__43517 = n;
var G__43518 = o;
var G__43519 = p;
var G__43520 = q;
var G__43521 = r;
var G__43522 = s;
var G__43523 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__43504,G__43505,G__43506,G__43507,G__43508,G__43509,G__43510,G__43511,G__43512,G__43513,G__43514,G__43515,G__43516,G__43517,G__43518,G__43519,G__43520,G__43521,G__43522,G__43523) : self__.afn.call(null,G__43504,G__43505,G__43506,G__43507,G__43508,G__43509,G__43510,G__43511,G__43512,G__43513,G__43514,G__43515,G__43516,G__43517,G__43518,G__43519,G__43520,G__43521,G__43522,G__43523));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__43524 = self__.afn;
var G__43525 = a;
var G__43526 = b;
var G__43527 = c;
var G__43528 = d;
var G__43529 = e;
var G__43530 = f;
var G__43531 = g;
var G__43532 = h;
var G__43533 = i;
var G__43534 = j;
var G__43535 = k;
var G__43536 = l;
var G__43537 = m;
var G__43538 = n;
var G__43539 = o;
var G__43540 = p;
var G__43541 = q;
var G__43542 = r;
var G__43543 = s;
var G__43544 = t;
var G__43545 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__43524,G__43525,G__43526,G__43527,G__43528,G__43529,G__43530,G__43531,G__43532,G__43533,G__43534,G__43535,G__43536,G__43537,G__43538,G__43539,G__43540,G__43541,G__43542,G__43543,G__43544,G__43545) : cljs.core.apply.call(null,G__43524,G__43525,G__43526,G__43527,G__43528,G__43529,G__43530,G__43531,G__43532,G__43533,G__43534,G__43535,G__43536,G__43537,G__43538,G__43539,G__43540,G__43541,G__43542,G__43543,G__43544,G__43545));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__32524__auto__,writer__32525__auto__,opt__32526__auto__){
return cljs.core._write(writer__32525__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__43550 = o;
if(G__43550){
var bit__32618__auto__ = (G__43550.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__32618__auto__) || (G__43550.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__43550.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__43550);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__43550);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__31925__auto__ = !((o == null));
if(and__31925__auto__){
var G__43554 = o;
if(G__43554){
var bit__32618__auto__ = (G__43554.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__32618__auto__) || (G__43554.cljs$core$IMeta$)){
return true;
} else {
if((!G__43554.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__43554);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__43554);
}
} else {
return and__31925__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__43557__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__43558 = ret;
var G__43559 = cljs.core.first(ks);
var G__43560 = cljs.core.next(ks);
coll = G__43558;
k = G__43559;
ks = G__43560;
continue;
} else {
return ret;
}
}
break;
}
};
var G__43557 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__43561__i = 0, G__43561__a = new Array(arguments.length -  2);
while (G__43561__i < G__43561__a.length) {G__43561__a[G__43561__i] = arguments[G__43561__i + 2]; ++G__43561__i;}
  ks = new cljs.core.IndexedSeq(G__43561__a,0);
} 
return G__43557__delegate.call(this,coll,k,ks);};
G__43557.cljs$lang$maxFixedArity = 2;
G__43557.cljs$lang$applyTo = (function (arglist__43562){
var coll = cljs.core.first(arglist__43562);
arglist__43562 = cljs.core.next(arglist__43562);
var k = cljs.core.first(arglist__43562);
var ks = cljs.core.rest(arglist__43562);
return G__43557__delegate(coll,k,ks);
});
G__43557.cljs$core$IFn$_invoke$arity$variadic = G__43557__delegate;
return G__43557;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__43563 = null;
if (arguments.length > 2) {
var G__43564__i = 0, G__43564__a = new Array(arguments.length -  2);
while (G__43564__i < G__43564__a.length) {G__43564__a[G__43564__i] = arguments[G__43564__i + 2]; ++G__43564__i;}
G__43563 = new cljs.core.IndexedSeq(G__43564__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__43563);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__43566 = x;
if(G__43566){
var bit__32618__auto__ = (G__43566.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__32618__auto__) || (G__43566.cljs$core$ICollection$)){
return true;
} else {
if((!G__43566.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__43566);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__43566);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__43568 = x;
if(G__43568){
var bit__32618__auto__ = (G__43568.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__32618__auto__) || (G__43568.cljs$core$ISet$)){
return true;
} else {
if((!G__43568.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__43568);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__43568);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__43570 = x;
if(G__43570){
var bit__32618__auto__ = (G__43570.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__32618__auto__) || (G__43570.cljs$core$IAssociative$)){
return true;
} else {
if((!G__43570.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__43570);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__43570);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__43572 = x;
if(G__43572){
var bit__32618__auto__ = (G__43572.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__32618__auto__) || (G__43572.cljs$core$ISequential$)){
return true;
} else {
if((!G__43572.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__43572);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__43572);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__43574 = x;
if(G__43574){
var bit__32618__auto__ = (G__43574.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__32618__auto__) || (G__43574.cljs$core$ISorted$)){
return true;
} else {
if((!G__43574.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__43574);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__43574);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__43576 = x;
if(G__43576){
var bit__32618__auto__ = (G__43576.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__32618__auto__) || (G__43576.cljs$core$IReduce$)){
return true;
} else {
if((!G__43576.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__43576);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__43576);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__43578 = x;
if(G__43578){
var bit__32618__auto__ = (G__43578.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__32618__auto__) || (G__43578.cljs$core$IMap$)){
return true;
} else {
if((!G__43578.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__43578);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__43578);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__43580 = x;
if(G__43580){
var bit__32618__auto__ = (G__43580.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__32618__auto__) || (G__43580.cljs$core$IVector$)){
return true;
} else {
if((!G__43580.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__43580);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__43580);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__43582 = x;
if(G__43582){
var bit__32611__auto__ = (G__43582.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__32611__auto__) || (G__43582.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj43588 = {};
return obj43588;
});
var js_obj__1 = (function() { 
var G__43591__delegate = function (keyvals){
var G__43589 = goog.object.create;
var G__43590 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__43589,G__43590) : cljs.core.apply.call(null,G__43589,G__43590));
};
var G__43591 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__43592__i = 0, G__43592__a = new Array(arguments.length -  0);
while (G__43592__i < G__43592__a.length) {G__43592__a[G__43592__i] = arguments[G__43592__i + 0]; ++G__43592__i;}
  keyvals = new cljs.core.IndexedSeq(G__43592__a,0);
} 
return G__43591__delegate.call(this,keyvals);};
G__43591.cljs$lang$maxFixedArity = 0;
G__43591.cljs$lang$applyTo = (function (arglist__43593){
var keyvals = cljs.core.seq(arglist__43593);
return G__43591__delegate(keyvals);
});
G__43591.cljs$core$IFn$_invoke$arity$variadic = G__43591__delegate;
return G__43591;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__43594 = null;
if (arguments.length > 0) {
var G__43595__i = 0, G__43595__a = new Array(arguments.length -  0);
while (G__43595__i < G__43595__a.length) {G__43595__a[G__43595__i] = arguments[G__43595__i + 0]; ++G__43595__i;}
G__43594 = new cljs.core.IndexedSeq(G__43595__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__43594);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__43598_43600 = obj;
var G__43599_43601 = ((function (G__43598_43600,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__43598_43600,keys))
;
goog.object.forEach(G__43598_43600,G__43599_43601);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__43602 = (i__$1 + (1));
var G__43603 = (j__$1 + (1));
var G__43604 = (len__$1 - (1));
i__$1 = G__43602;
j__$1 = G__43603;
len__$1 = G__43604;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__43605 = (i__$1 - (1));
var G__43606 = (j__$1 - (1));
var G__43607 = (len__$1 - (1));
i__$1 = G__43605;
j__$1 = G__43606;
len__$1 = G__43607;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj43609 = {};
return obj43609;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__43611 = s;
if(G__43611){
var bit__32618__auto__ = (G__43611.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__32618__auto__) || (G__43611.cljs$core$ISeq$)){
return true;
} else {
if((!G__43611.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__43611);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__43611);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__43613 = s;
if(G__43613){
var bit__32618__auto__ = (G__43613.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__32618__auto__) || (G__43613.cljs$core$ISeqable$)){
return true;
} else {
if((!G__43613.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__43613);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__43613);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__31937__auto__ = cljs.core.fn_QMARK_(f);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var G__43617 = f;
if(G__43617){
var bit__32618__auto__ = (G__43617.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__32618__auto__) || (G__43617.cljs$core$IFn$)){
return true;
} else {
if((!G__43617.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__43617);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__43617);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__43630 = n;
return isNaN(G__43630);
})())) && (!((n === Infinity))) && (((function (){var G__43631 = n;
return parseFloat(G__43631);
})() === (function (){var G__43632 = n;
var G__43633 = (10);
return parseInt(G__43632,G__43633);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__43634__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__43635 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__43636 = etc;
s = G__43635;
xs = G__43636;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__43634 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__43637__i = 0, G__43637__a = new Array(arguments.length -  2);
while (G__43637__i < G__43637__a.length) {G__43637__a[G__43637__i] = arguments[G__43637__i + 2]; ++G__43637__i;}
  more = new cljs.core.IndexedSeq(G__43637__a,0);
} 
return G__43634__delegate.call(this,x,y,more);};
G__43634.cljs$lang$maxFixedArity = 2;
G__43634.cljs$lang$applyTo = (function (arglist__43638){
var x = cljs.core.first(arglist__43638);
arglist__43638 = cljs.core.next(arglist__43638);
var y = cljs.core.first(arglist__43638);
var more = cljs.core.rest(arglist__43638);
return G__43634__delegate(x,y,more);
});
G__43634.cljs$core$IFn$_invoke$arity$variadic = G__43634__delegate;
return G__43634;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__43639 = null;
if (arguments.length > 2) {
var G__43640__i = 0, G__43640__a = new Array(arguments.length -  2);
while (G__43640__i < G__43640__a.length) {G__43640__a[G__43640__i] = arguments[G__43640__i + 2]; ++G__43640__i;}
G__43639 = new cljs.core.IndexedSeq(G__43640__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__43639);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__43644 = x;
if(G__43644){
var bit__32611__auto__ = (G__43644.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__32611__auto__) || (G__43644.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__43645 = x;
var G__43646 = y;
return goog.array.defaultCompare(G__43645,G__43646);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__43651 = xs;
var G__43652 = ys;
var G__43653 = len;
var G__43654 = (n + (1));
xs = G__43651;
ys = G__43652;
len = G__43653;
n = G__43654;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__43659 = x;
var G__43660 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__43659,G__43660) : f.call(null,G__43659,G__43660));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__43661 = y;
var G__43662 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__43661,G__43662) : f.call(null,G__43661,G__43662));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__43668 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__43668) : cljs.core.to_array.call(null,G__43668));
})();
var G__43669_43671 = a;
var G__43670_43672 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__43669_43671,G__43670_43672);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__43678 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__43678) : keyfn.call(null,G__43678));
})(),(function (){var G__43679 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__43679) : keyfn.call(null,G__43679));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__43685 = f;
var G__43686 = cljs.core.first(s);
var G__43687 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__43685,G__43686,G__43687) : cljs.core.reduce.call(null,G__43685,G__43686,G__43687));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__43688 = val__$1;
var G__43689 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__43688,G__43689) : f.call(null,G__43688,G__43689));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__43690 = nval;
var G__43691 = cljs.core.next(coll__$1);
val__$1 = G__43690;
coll__$1 = G__43691;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__43695 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__43695) : cljs.core.to_array.call(null,G__43695));
})();
var G__43696_43698 = a;
goog.array.shuffle(G__43696_43698);

var G__43697 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__43697) : cljs.core.vec.call(null,G__43697));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__43701 = coll;
if(G__43701){
var bit__32611__auto__ = (G__43701.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__32611__auto__) || (G__43701.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__43702 = coll;
if(G__43702){
var bit__32611__auto__ = (G__43702.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__32611__auto__) || (G__43702.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__43711 = null;
var G__43711__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__43711__1 = (function (x){
var G__43708 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__43708) : cf.call(null,G__43708));
});
var G__43711__2 = (function (x,y){
var G__43709 = x;
var G__43710 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__43709,G__43710) : f.call(null,G__43709,G__43710));
});
G__43711 = function(x,y){
switch(arguments.length){
case 0:
return G__43711__0.call(this);
case 1:
return G__43711__1.call(this,x);
case 2:
return G__43711__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__43711.cljs$core$IFn$_invoke$arity$0 = G__43711__0;
G__43711.cljs$core$IFn$_invoke$arity$1 = G__43711__1;
G__43711.cljs$core$IFn$_invoke$arity$2 = G__43711__2;
return G__43711;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__43718 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__43718) : xform.call(null,G__43718));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__43719 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__43719) : f__$1.call(null,G__43719));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__43720__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__43720 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__43721__i = 0, G__43721__a = new Array(arguments.length -  2);
while (G__43721__i < G__43721__a.length) {G__43721__a[G__43721__i] = arguments[G__43721__i + 2]; ++G__43721__i;}
  more = new cljs.core.IndexedSeq(G__43721__a,0);
} 
return G__43720__delegate.call(this,x,y,more);};
G__43720.cljs$lang$maxFixedArity = 2;
G__43720.cljs$lang$applyTo = (function (arglist__43722){
var x = cljs.core.first(arglist__43722);
arglist__43722 = cljs.core.next(arglist__43722);
var y = cljs.core.first(arglist__43722);
var more = cljs.core.rest(arglist__43722);
return G__43720__delegate(x,y,more);
});
G__43720.cljs$core$IFn$_invoke$arity$variadic = G__43720__delegate;
return G__43720;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__43723 = null;
if (arguments.length > 2) {
var G__43724__i = 0, G__43724__a = new Array(arguments.length -  2);
while (G__43724__i < G__43724__a.length) {G__43724__a[G__43724__i] = arguments[G__43724__i + 2]; ++G__43724__i;}
G__43723 = new cljs.core.IndexedSeq(G__43724__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__43723);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__43725__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__43725 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__43726__i = 0, G__43726__a = new Array(arguments.length -  2);
while (G__43726__i < G__43726__a.length) {G__43726__a[G__43726__i] = arguments[G__43726__i + 2]; ++G__43726__i;}
  more = new cljs.core.IndexedSeq(G__43726__a,0);
} 
return G__43725__delegate.call(this,x,y,more);};
G__43725.cljs$lang$maxFixedArity = 2;
G__43725.cljs$lang$applyTo = (function (arglist__43727){
var x = cljs.core.first(arglist__43727);
arglist__43727 = cljs.core.next(arglist__43727);
var y = cljs.core.first(arglist__43727);
var more = cljs.core.rest(arglist__43727);
return G__43725__delegate(x,y,more);
});
G__43725.cljs$core$IFn$_invoke$arity$variadic = G__43725__delegate;
return G__43725;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__43728 = null;
if (arguments.length > 2) {
var G__43729__i = 0, G__43729__a = new Array(arguments.length -  2);
while (G__43729__i < G__43729__a.length) {G__43729__a[G__43729__i] = arguments[G__43729__i + 2]; ++G__43729__i;}
G__43728 = new cljs.core.IndexedSeq(G__43729__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__43728);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__43730__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__43730 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__43731__i = 0, G__43731__a = new Array(arguments.length -  2);
while (G__43731__i < G__43731__a.length) {G__43731__a[G__43731__i] = arguments[G__43731__i + 2]; ++G__43731__i;}
  more = new cljs.core.IndexedSeq(G__43731__a,0);
} 
return G__43730__delegate.call(this,x,y,more);};
G__43730.cljs$lang$maxFixedArity = 2;
G__43730.cljs$lang$applyTo = (function (arglist__43732){
var x = cljs.core.first(arglist__43732);
arglist__43732 = cljs.core.next(arglist__43732);
var y = cljs.core.first(arglist__43732);
var more = cljs.core.rest(arglist__43732);
return G__43730__delegate(x,y,more);
});
G__43730.cljs$core$IFn$_invoke$arity$variadic = G__43730__delegate;
return G__43730;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__43733 = null;
if (arguments.length > 2) {
var G__43734__i = 0, G__43734__a = new Array(arguments.length -  2);
while (G__43734__i < G__43734__a.length) {G__43734__a[G__43734__i] = arguments[G__43734__i + 2]; ++G__43734__i;}
G__43733 = new cljs.core.IndexedSeq(G__43734__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__43733);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__43739__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__43739 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__43740__i = 0, G__43740__a = new Array(arguments.length -  2);
while (G__43740__i < G__43740__a.length) {G__43740__a[G__43740__i] = arguments[G__43740__i + 2]; ++G__43740__i;}
  more = new cljs.core.IndexedSeq(G__43740__a,0);
} 
return G__43739__delegate.call(this,x,y,more);};
G__43739.cljs$lang$maxFixedArity = 2;
G__43739.cljs$lang$applyTo = (function (arglist__43741){
var x = cljs.core.first(arglist__43741);
arglist__43741 = cljs.core.next(arglist__43741);
var y = cljs.core.first(arglist__43741);
var more = cljs.core.rest(arglist__43741);
return G__43739__delegate(x,y,more);
});
G__43739.cljs$core$IFn$_invoke$arity$variadic = G__43739__delegate;
return G__43739;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__43742 = null;
if (arguments.length > 2) {
var G__43743__i = 0, G__43743__a = new Array(arguments.length -  2);
while (G__43743__i < G__43743__a.length) {G__43743__a[G__43743__i] = arguments[G__43743__i + 2]; ++G__43743__i;}
G__43742 = new cljs.core.IndexedSeq(G__43743__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__43742);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__43744__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__43745 = y;
var G__43746 = cljs.core.first(more);
var G__43747 = cljs.core.next(more);
x = G__43745;
y = G__43746;
more = G__43747;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__43744 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__43748__i = 0, G__43748__a = new Array(arguments.length -  2);
while (G__43748__i < G__43748__a.length) {G__43748__a[G__43748__i] = arguments[G__43748__i + 2]; ++G__43748__i;}
  more = new cljs.core.IndexedSeq(G__43748__a,0);
} 
return G__43744__delegate.call(this,x,y,more);};
G__43744.cljs$lang$maxFixedArity = 2;
G__43744.cljs$lang$applyTo = (function (arglist__43749){
var x = cljs.core.first(arglist__43749);
arglist__43749 = cljs.core.next(arglist__43749);
var y = cljs.core.first(arglist__43749);
var more = cljs.core.rest(arglist__43749);
return G__43744__delegate(x,y,more);
});
G__43744.cljs$core$IFn$_invoke$arity$variadic = G__43744__delegate;
return G__43744;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__43750 = null;
if (arguments.length > 2) {
var G__43751__i = 0, G__43751__a = new Array(arguments.length -  2);
while (G__43751__i < G__43751__a.length) {G__43751__a[G__43751__i] = arguments[G__43751__i + 2]; ++G__43751__i;}
G__43750 = new cljs.core.IndexedSeq(G__43751__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__43750);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__43752__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__43753 = y;
var G__43754 = cljs.core.first(more);
var G__43755 = cljs.core.next(more);
x = G__43753;
y = G__43754;
more = G__43755;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__43752 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__43756__i = 0, G__43756__a = new Array(arguments.length -  2);
while (G__43756__i < G__43756__a.length) {G__43756__a[G__43756__i] = arguments[G__43756__i + 2]; ++G__43756__i;}
  more = new cljs.core.IndexedSeq(G__43756__a,0);
} 
return G__43752__delegate.call(this,x,y,more);};
G__43752.cljs$lang$maxFixedArity = 2;
G__43752.cljs$lang$applyTo = (function (arglist__43757){
var x = cljs.core.first(arglist__43757);
arglist__43757 = cljs.core.next(arglist__43757);
var y = cljs.core.first(arglist__43757);
var more = cljs.core.rest(arglist__43757);
return G__43752__delegate(x,y,more);
});
G__43752.cljs$core$IFn$_invoke$arity$variadic = G__43752__delegate;
return G__43752;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__43758 = null;
if (arguments.length > 2) {
var G__43759__i = 0, G__43759__a = new Array(arguments.length -  2);
while (G__43759__i < G__43759__a.length) {G__43759__a[G__43759__i] = arguments[G__43759__i + 2]; ++G__43759__i;}
G__43758 = new cljs.core.IndexedSeq(G__43759__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__43758);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__43760__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__43761 = y;
var G__43762 = cljs.core.first(more);
var G__43763 = cljs.core.next(more);
x = G__43761;
y = G__43762;
more = G__43763;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__43760 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__43764__i = 0, G__43764__a = new Array(arguments.length -  2);
while (G__43764__i < G__43764__a.length) {G__43764__a[G__43764__i] = arguments[G__43764__i + 2]; ++G__43764__i;}
  more = new cljs.core.IndexedSeq(G__43764__a,0);
} 
return G__43760__delegate.call(this,x,y,more);};
G__43760.cljs$lang$maxFixedArity = 2;
G__43760.cljs$lang$applyTo = (function (arglist__43765){
var x = cljs.core.first(arglist__43765);
arglist__43765 = cljs.core.next(arglist__43765);
var y = cljs.core.first(arglist__43765);
var more = cljs.core.rest(arglist__43765);
return G__43760__delegate(x,y,more);
});
G__43760.cljs$core$IFn$_invoke$arity$variadic = G__43760__delegate;
return G__43760;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__43766 = null;
if (arguments.length > 2) {
var G__43767__i = 0, G__43767__a = new Array(arguments.length -  2);
while (G__43767__i < G__43767__a.length) {G__43767__a[G__43767__i] = arguments[G__43767__i + 2]; ++G__43767__i;}
G__43766 = new cljs.core.IndexedSeq(G__43767__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__43766);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__43768__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__43769 = y;
var G__43770 = cljs.core.first(more);
var G__43771 = cljs.core.next(more);
x = G__43769;
y = G__43770;
more = G__43771;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__43768 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__43772__i = 0, G__43772__a = new Array(arguments.length -  2);
while (G__43772__i < G__43772__a.length) {G__43772__a[G__43772__i] = arguments[G__43772__i + 2]; ++G__43772__i;}
  more = new cljs.core.IndexedSeq(G__43772__a,0);
} 
return G__43768__delegate.call(this,x,y,more);};
G__43768.cljs$lang$maxFixedArity = 2;
G__43768.cljs$lang$applyTo = (function (arglist__43773){
var x = cljs.core.first(arglist__43773);
arglist__43773 = cljs.core.next(arglist__43773);
var y = cljs.core.first(arglist__43773);
var more = cljs.core.rest(arglist__43773);
return G__43768__delegate(x,y,more);
});
G__43768.cljs$core$IFn$_invoke$arity$variadic = G__43768__delegate;
return G__43768;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__43774 = null;
if (arguments.length > 2) {
var G__43775__i = 0, G__43775__a = new Array(arguments.length -  2);
while (G__43775__i < G__43775__a.length) {G__43775__a[G__43775__i] = arguments[G__43775__i + 2]; ++G__43775__i;}
G__43774 = new cljs.core.IndexedSeq(G__43775__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__43774);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__32254__auto__ = x;
var y__32255__auto__ = y;
return ((x__32254__auto__ > y__32255__auto__) ? x__32254__auto__ : y__32255__auto__);
});
var max__3 = (function() { 
var G__43776__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__32254__auto__ = x;
var y__32255__auto__ = y;
return ((x__32254__auto__ > y__32255__auto__) ? x__32254__auto__ : y__32255__auto__);
})(),more);
};
var G__43776 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__43777__i = 0, G__43777__a = new Array(arguments.length -  2);
while (G__43777__i < G__43777__a.length) {G__43777__a[G__43777__i] = arguments[G__43777__i + 2]; ++G__43777__i;}
  more = new cljs.core.IndexedSeq(G__43777__a,0);
} 
return G__43776__delegate.call(this,x,y,more);};
G__43776.cljs$lang$maxFixedArity = 2;
G__43776.cljs$lang$applyTo = (function (arglist__43778){
var x = cljs.core.first(arglist__43778);
arglist__43778 = cljs.core.next(arglist__43778);
var y = cljs.core.first(arglist__43778);
var more = cljs.core.rest(arglist__43778);
return G__43776__delegate(x,y,more);
});
G__43776.cljs$core$IFn$_invoke$arity$variadic = G__43776__delegate;
return G__43776;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__43779 = null;
if (arguments.length > 2) {
var G__43780__i = 0, G__43780__a = new Array(arguments.length -  2);
while (G__43780__i < G__43780__a.length) {G__43780__a[G__43780__i] = arguments[G__43780__i + 2]; ++G__43780__i;}
G__43779 = new cljs.core.IndexedSeq(G__43780__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__43779);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__32261__auto__ = x;
var y__32262__auto__ = y;
return ((x__32261__auto__ < y__32262__auto__) ? x__32261__auto__ : y__32262__auto__);
});
var min__3 = (function() { 
var G__43781__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__32261__auto__ = x;
var y__32262__auto__ = y;
return ((x__32261__auto__ < y__32262__auto__) ? x__32261__auto__ : y__32262__auto__);
})(),more);
};
var G__43781 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__43782__i = 0, G__43782__a = new Array(arguments.length -  2);
while (G__43782__i < G__43782__a.length) {G__43782__a[G__43782__i] = arguments[G__43782__i + 2]; ++G__43782__i;}
  more = new cljs.core.IndexedSeq(G__43782__a,0);
} 
return G__43781__delegate.call(this,x,y,more);};
G__43781.cljs$lang$maxFixedArity = 2;
G__43781.cljs$lang$applyTo = (function (arglist__43783){
var x = cljs.core.first(arglist__43783);
arglist__43783 = cljs.core.next(arglist__43783);
var y = cljs.core.first(arglist__43783);
var more = cljs.core.rest(arglist__43783);
return G__43781__delegate(x,y,more);
});
G__43781.cljs$core$IFn$_invoke$arity$variadic = G__43781__delegate;
return G__43781;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__43784 = null;
if (arguments.length > 2) {
var G__43785__i = 0, G__43785__a = new Array(arguments.length -  2);
while (G__43785__i < G__43785__a.length) {G__43785__a[G__43785__i] = arguments[G__43785__i + 2]; ++G__43785__i;}
G__43784 = new cljs.core.IndexedSeq(G__43785__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__43784);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__43786__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__43786 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__43787__i = 0, G__43787__a = new Array(arguments.length -  2);
while (G__43787__i < G__43787__a.length) {G__43787__a[G__43787__i] = arguments[G__43787__i + 2]; ++G__43787__i;}
  more = new cljs.core.IndexedSeq(G__43787__a,0);
} 
return G__43786__delegate.call(this,x,y,more);};
G__43786.cljs$lang$maxFixedArity = 2;
G__43786.cljs$lang$applyTo = (function (arglist__43788){
var x = cljs.core.first(arglist__43788);
arglist__43788 = cljs.core.next(arglist__43788);
var y = cljs.core.first(arglist__43788);
var more = cljs.core.rest(arglist__43788);
return G__43786__delegate(x,y,more);
});
G__43786.cljs$core$IFn$_invoke$arity$variadic = G__43786__delegate;
return G__43786;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__43789 = null;
if (arguments.length > 2) {
var G__43790__i = 0, G__43790__a = new Array(arguments.length -  2);
while (G__43790__i < G__43790__a.length) {G__43790__a[G__43790__i] = arguments[G__43790__i + 2]; ++G__43790__i;}
G__43789 = new cljs.core.IndexedSeq(G__43790__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__43789);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__43791__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__43791 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__43792__i = 0, G__43792__a = new Array(arguments.length -  2);
while (G__43792__i < G__43792__a.length) {G__43792__a[G__43792__i] = arguments[G__43792__i + 2]; ++G__43792__i;}
  more = new cljs.core.IndexedSeq(G__43792__a,0);
} 
return G__43791__delegate.call(this,x,y,more);};
G__43791.cljs$lang$maxFixedArity = 2;
G__43791.cljs$lang$applyTo = (function (arglist__43793){
var x = cljs.core.first(arglist__43793);
arglist__43793 = cljs.core.next(arglist__43793);
var y = cljs.core.first(arglist__43793);
var more = cljs.core.rest(arglist__43793);
return G__43791__delegate(x,y,more);
});
G__43791.cljs$core$IFn$_invoke$arity$variadic = G__43791__delegate;
return G__43791;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__43794 = null;
if (arguments.length > 2) {
var G__43795__i = 0, G__43795__a = new Array(arguments.length -  2);
while (G__43795__i < G__43795__a.length) {G__43795__a[G__43795__i] = arguments[G__43795__i + 2]; ++G__43795__i;}
G__43794 = new cljs.core.IndexedSeq(G__43795__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__43794);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__43800__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__43800 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__43801__i = 0, G__43801__a = new Array(arguments.length -  2);
while (G__43801__i < G__43801__a.length) {G__43801__a[G__43801__i] = arguments[G__43801__i + 2]; ++G__43801__i;}
  more = new cljs.core.IndexedSeq(G__43801__a,0);
} 
return G__43800__delegate.call(this,x,y,more);};
G__43800.cljs$lang$maxFixedArity = 2;
G__43800.cljs$lang$applyTo = (function (arglist__43802){
var x = cljs.core.first(arglist__43802);
arglist__43802 = cljs.core.next(arglist__43802);
var y = cljs.core.first(arglist__43802);
var more = cljs.core.rest(arglist__43802);
return G__43800__delegate(x,y,more);
});
G__43800.cljs$core$IFn$_invoke$arity$variadic = G__43800__delegate;
return G__43800;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__43803 = null;
if (arguments.length > 2) {
var G__43804__i = 0, G__43804__a = new Array(arguments.length -  2);
while (G__43804__i < G__43804__a.length) {G__43804__a[G__43804__i] = arguments[G__43804__i + 2]; ++G__43804__i;}
G__43803 = new cljs.core.IndexedSeq(G__43804__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__43803);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__43805__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__43805 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__43806__i = 0, G__43806__a = new Array(arguments.length -  2);
while (G__43806__i < G__43806__a.length) {G__43806__a[G__43806__i] = arguments[G__43806__i + 2]; ++G__43806__i;}
  more = new cljs.core.IndexedSeq(G__43806__a,0);
} 
return G__43805__delegate.call(this,x,y,more);};
G__43805.cljs$lang$maxFixedArity = 2;
G__43805.cljs$lang$applyTo = (function (arglist__43807){
var x = cljs.core.first(arglist__43807);
arglist__43807 = cljs.core.next(arglist__43807);
var y = cljs.core.first(arglist__43807);
var more = cljs.core.rest(arglist__43807);
return G__43805__delegate(x,y,more);
});
G__43805.cljs$core$IFn$_invoke$arity$variadic = G__43805__delegate;
return G__43805;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__43808 = null;
if (arguments.length > 2) {
var G__43809__i = 0, G__43809__a = new Array(arguments.length -  2);
while (G__43809__i < G__43809__a.length) {G__43809__a[G__43809__i] = arguments[G__43809__i + 2]; ++G__43809__i;}
G__43808 = new cljs.core.IndexedSeq(G__43809__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__43808);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__43810__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__43810 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__43811__i = 0, G__43811__a = new Array(arguments.length -  2);
while (G__43811__i < G__43811__a.length) {G__43811__a[G__43811__i] = arguments[G__43811__i + 2]; ++G__43811__i;}
  more = new cljs.core.IndexedSeq(G__43811__a,0);
} 
return G__43810__delegate.call(this,x,y,more);};
G__43810.cljs$lang$maxFixedArity = 2;
G__43810.cljs$lang$applyTo = (function (arglist__43812){
var x = cljs.core.first(arglist__43812);
arglist__43812 = cljs.core.next(arglist__43812);
var y = cljs.core.first(arglist__43812);
var more = cljs.core.rest(arglist__43812);
return G__43810__delegate(x,y,more);
});
G__43810.cljs$core$IFn$_invoke$arity$variadic = G__43810__delegate;
return G__43810;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__43813 = null;
if (arguments.length > 2) {
var G__43814__i = 0, G__43814__a = new Array(arguments.length -  2);
while (G__43814__i < G__43814__a.length) {G__43814__a[G__43814__i] = arguments[G__43814__i + 2]; ++G__43814__i;}
G__43813 = new cljs.core.IndexedSeq(G__43814__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__43813);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__43817 = x;
var G__43818 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__43817,G__43818) : cljs.core.mod.call(null,G__43817,G__43818));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__43819__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__43819 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__43820__i = 0, G__43820__a = new Array(arguments.length -  2);
while (G__43820__i < G__43820__a.length) {G__43820__a[G__43820__i] = arguments[G__43820__i + 2]; ++G__43820__i;}
  more = new cljs.core.IndexedSeq(G__43820__a,0);
} 
return G__43819__delegate.call(this,x,y,more);};
G__43819.cljs$lang$maxFixedArity = 2;
G__43819.cljs$lang$applyTo = (function (arglist__43821){
var x = cljs.core.first(arglist__43821);
arglist__43821 = cljs.core.next(arglist__43821);
var y = cljs.core.first(arglist__43821);
var more = cljs.core.rest(arglist__43821);
return G__43819__delegate(x,y,more);
});
G__43819.cljs$core$IFn$_invoke$arity$variadic = G__43819__delegate;
return G__43819;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__43822 = null;
if (arguments.length > 2) {
var G__43823__i = 0, G__43823__a = new Array(arguments.length -  2);
while (G__43823__i < G__43823__a.length) {G__43823__a[G__43823__i] = arguments[G__43823__i + 2]; ++G__43823__i;}
G__43822 = new cljs.core.IndexedSeq(G__43823__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__43822);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__43824__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__43824 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__43825__i = 0, G__43825__a = new Array(arguments.length -  2);
while (G__43825__i < G__43825__a.length) {G__43825__a[G__43825__i] = arguments[G__43825__i + 2]; ++G__43825__i;}
  more = new cljs.core.IndexedSeq(G__43825__a,0);
} 
return G__43824__delegate.call(this,x,y,more);};
G__43824.cljs$lang$maxFixedArity = 2;
G__43824.cljs$lang$applyTo = (function (arglist__43826){
var x = cljs.core.first(arglist__43826);
arglist__43826 = cljs.core.next(arglist__43826);
var y = cljs.core.first(arglist__43826);
var more = cljs.core.rest(arglist__43826);
return G__43824__delegate(x,y,more);
});
G__43824.cljs$core$IFn$_invoke$arity$variadic = G__43824__delegate;
return G__43824;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__43827 = null;
if (arguments.length > 2) {
var G__43828__i = 0, G__43828__a = new Array(arguments.length -  2);
while (G__43828__i < G__43828__a.length) {G__43828__a[G__43828__i] = arguments[G__43828__i + 2]; ++G__43828__i;}
G__43827 = new cljs.core.IndexedSeq(G__43828__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__43827);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__43831 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__43831) : Math.floor.call(null,G__43831));
} else {
var G__43832 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__43832) : Math.ceil.call(null,G__43832));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__43833__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__43833 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__43834__i = 0, G__43834__a = new Array(arguments.length -  2);
while (G__43834__i < G__43834__a.length) {G__43834__a[G__43834__i] = arguments[G__43834__i + 2]; ++G__43834__i;}
  more = new cljs.core.IndexedSeq(G__43834__a,0);
} 
return G__43833__delegate.call(this,x,y,more);};
G__43833.cljs$lang$maxFixedArity = 2;
G__43833.cljs$lang$applyTo = (function (arglist__43835){
var x = cljs.core.first(arglist__43835);
arglist__43835 = cljs.core.next(arglist__43835);
var y = cljs.core.first(arglist__43835);
var more = cljs.core.rest(arglist__43835);
return G__43833__delegate(x,y,more);
});
G__43833.cljs$core$IFn$_invoke$arity$variadic = G__43833__delegate;
return G__43833;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__43836 = null;
if (arguments.length > 2) {
var G__43837__i = 0, G__43837__a = new Array(arguments.length -  2);
while (G__43837__i < G__43837__a.length) {G__43837__a[G__43837__i] = arguments[G__43837__i + 2]; ++G__43837__i;}
G__43836 = new cljs.core.IndexedSeq(G__43837__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__43836);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__43838__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__43838 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__43839__i = 0, G__43839__a = new Array(arguments.length -  2);
while (G__43839__i < G__43839__a.length) {G__43839__a[G__43839__i] = arguments[G__43839__i + 2]; ++G__43839__i;}
  more = new cljs.core.IndexedSeq(G__43839__a,0);
} 
return G__43838__delegate.call(this,x,y,more);};
G__43838.cljs$lang$maxFixedArity = 2;
G__43838.cljs$lang$applyTo = (function (arglist__43840){
var x = cljs.core.first(arglist__43840);
arglist__43840 = cljs.core.next(arglist__43840);
var y = cljs.core.first(arglist__43840);
var more = cljs.core.rest(arglist__43840);
return G__43838__delegate(x,y,more);
});
G__43838.cljs$core$IFn$_invoke$arity$variadic = G__43838__delegate;
return G__43838;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__43841 = null;
if (arguments.length > 2) {
var G__43842__i = 0, G__43842__a = new Array(arguments.length -  2);
while (G__43842__i < G__43842__a.length) {G__43842__a[G__43842__i] = arguments[G__43842__i + 2]; ++G__43842__i;}
G__43841 = new cljs.core.IndexedSeq(G__43842__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__43841);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__43843__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__43843 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__43844__i = 0, G__43844__a = new Array(arguments.length -  2);
while (G__43844__i < G__43844__a.length) {G__43844__a[G__43844__i] = arguments[G__43844__i + 2]; ++G__43844__i;}
  more = new cljs.core.IndexedSeq(G__43844__a,0);
} 
return G__43843__delegate.call(this,x,y,more);};
G__43843.cljs$lang$maxFixedArity = 2;
G__43843.cljs$lang$applyTo = (function (arglist__43845){
var x = cljs.core.first(arglist__43845);
arglist__43845 = cljs.core.next(arglist__43845);
var y = cljs.core.first(arglist__43845);
var more = cljs.core.rest(arglist__43845);
return G__43843__delegate(x,y,more);
});
G__43843.cljs$core$IFn$_invoke$arity$variadic = G__43843__delegate;
return G__43843;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__43846 = null;
if (arguments.length > 2) {
var G__43847__i = 0, G__43847__a = new Array(arguments.length -  2);
while (G__43847__i < G__43847__a.length) {G__43847__a[G__43847__i] = arguments[G__43847__i + 2]; ++G__43847__i;}
G__43846 = new cljs.core.IndexedSeq(G__43847__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__43846);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__43848__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__43848 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__43849__i = 0, G__43849__a = new Array(arguments.length -  2);
while (G__43849__i < G__43849__a.length) {G__43849__a[G__43849__i] = arguments[G__43849__i + 2]; ++G__43849__i;}
  more = new cljs.core.IndexedSeq(G__43849__a,0);
} 
return G__43848__delegate.call(this,x,y,more);};
G__43848.cljs$lang$maxFixedArity = 2;
G__43848.cljs$lang$applyTo = (function (arglist__43850){
var x = cljs.core.first(arglist__43850);
arglist__43850 = cljs.core.next(arglist__43850);
var y = cljs.core.first(arglist__43850);
var more = cljs.core.rest(arglist__43850);
return G__43848__delegate(x,y,more);
});
G__43848.cljs$core$IFn$_invoke$arity$variadic = G__43848__delegate;
return G__43848;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__43851 = null;
if (arguments.length > 2) {
var G__43852__i = 0, G__43852__a = new Array(arguments.length -  2);
while (G__43852__i < G__43852__a.length) {G__43852__a[G__43852__i] = arguments[G__43852__i + 2]; ++G__43852__i;}
G__43851 = new cljs.core.IndexedSeq(G__43852__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__43851);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__43857__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__43858 = y;
var G__43859 = cljs.core.first(more);
var G__43860 = cljs.core.next(more);
x = G__43858;
y = G__43859;
more = G__43860;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__43857 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__43861__i = 0, G__43861__a = new Array(arguments.length -  2);
while (G__43861__i < G__43861__a.length) {G__43861__a[G__43861__i] = arguments[G__43861__i + 2]; ++G__43861__i;}
  more = new cljs.core.IndexedSeq(G__43861__a,0);
} 
return G__43857__delegate.call(this,x,y,more);};
G__43857.cljs$lang$maxFixedArity = 2;
G__43857.cljs$lang$applyTo = (function (arglist__43862){
var x = cljs.core.first(arglist__43862);
arglist__43862 = cljs.core.next(arglist__43862);
var y = cljs.core.first(arglist__43862);
var more = cljs.core.rest(arglist__43862);
return G__43857__delegate(x,y,more);
});
G__43857.cljs$core$IFn$_invoke$arity$variadic = G__43857__delegate;
return G__43857;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__43863 = null;
if (arguments.length > 2) {
var G__43864__i = 0, G__43864__a = new Array(arguments.length -  2);
while (G__43864__i < G__43864__a.length) {G__43864__a[G__43864__i] = arguments[G__43864__i + 2]; ++G__43864__i;}
G__43863 = new cljs.core.IndexedSeq(G__43864__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__43863);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__43865 = (n__$1 - (1));
var G__43866 = cljs.core.next(xs);
n__$1 = G__43865;
xs = G__43866;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__43870 = x;
return goog.string.buildString(G__43870);
}
});
var str__2 = (function() { 
var G__43871__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__43872 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__43873 = cljs.core.next(more);
sb = G__43872;
more = G__43873;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__43871 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__43874__i = 0, G__43874__a = new Array(arguments.length -  1);
while (G__43874__i < G__43874__a.length) {G__43874__a[G__43874__i] = arguments[G__43874__i + 1]; ++G__43874__i;}
  ys = new cljs.core.IndexedSeq(G__43874__a,0);
} 
return G__43871__delegate.call(this,x,ys);};
G__43871.cljs$lang$maxFixedArity = 1;
G__43871.cljs$lang$applyTo = (function (arglist__43875){
var x = cljs.core.first(arglist__43875);
var ys = cljs.core.rest(arglist__43875);
return G__43871__delegate(x,ys);
});
G__43871.cljs$core$IFn$_invoke$arity$variadic = G__43871__delegate;
return G__43871;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__43876 = null;
if (arguments.length > 1) {
var G__43877__i = 0, G__43877__a = new Array(arguments.length -  1);
while (G__43877__i < G__43877__a.length) {G__43877__a[G__43877__i] = arguments[G__43877__i + 1]; ++G__43877__i;}
G__43876 = new cljs.core.IndexedSeq(G__43877__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__43876);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__43878 = cljs.core.next(xs);
var G__43879 = cljs.core.next(ys);
xs = G__43878;
ys = G__43879;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__43880 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__43881 = cljs.core.next(s);
res = G__43880;
s = G__43881;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__43886 = ((h + (cljs.core.hash((function (){var G__43884 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__43884) : cljs.core.key.call(null,G__43884));
})()) ^ cljs.core.hash((function (){var G__43885 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__43885) : cljs.core.val.call(null,G__43885));
})()))) % (4503599627370496));
var G__43887 = cljs.core.next(s);
h = G__43886;
s = G__43887;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__43888 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__43889 = cljs.core.next(s__$1);
h = G__43888;
s__$1 = G__43889;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__43900_43910 = cljs.core.seq(fn_map);
var chunk__43901_43911 = null;
var count__43902_43912 = (0);
var i__43903_43913 = (0);
while(true){
if((i__43903_43913 < count__43902_43912)){
var vec__43904_43914 = chunk__43901_43911.cljs$core$IIndexed$_nth$arity$2(null,i__43903_43913);
var key_name_43915 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43904_43914,(0),null);
var f_43916 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43904_43914,(1),null);
var str_name_43917 = (function (){var G__43905 = key_name_43915;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__43905) : cljs.core.name.call(null,G__43905));
})();
(obj[str_name_43917] = f_43916);

var G__43918 = seq__43900_43910;
var G__43919 = chunk__43901_43911;
var G__43920 = count__43902_43912;
var G__43921 = (i__43903_43913 + (1));
seq__43900_43910 = G__43918;
chunk__43901_43911 = G__43919;
count__43902_43912 = G__43920;
i__43903_43913 = G__43921;
continue;
} else {
var temp__4126__auto___43922 = cljs.core.seq(seq__43900_43910);
if(temp__4126__auto___43922){
var seq__43900_43923__$1 = temp__4126__auto___43922;
if(cljs.core.chunked_seq_QMARK_(seq__43900_43923__$1)){
var c__32724__auto___43924 = (function (){var G__43906 = seq__43900_43923__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__43906) : cljs.core.chunk_first.call(null,G__43906));
})();
var G__43925 = (function (){var G__43907 = seq__43900_43923__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__43907) : cljs.core.chunk_rest.call(null,G__43907));
})();
var G__43926 = c__32724__auto___43924;
var G__43927 = cljs.core.count(c__32724__auto___43924);
var G__43928 = (0);
seq__43900_43910 = G__43925;
chunk__43901_43911 = G__43926;
count__43902_43912 = G__43927;
i__43903_43913 = G__43928;
continue;
} else {
var vec__43908_43929 = cljs.core.first(seq__43900_43923__$1);
var key_name_43930 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43908_43929,(0),null);
var f_43931 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43908_43929,(1),null);
var str_name_43932 = (function (){var G__43909 = key_name_43930;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__43909) : cljs.core.name.call(null,G__43909));
})();
(obj[str_name_43932] = f_43931);

var G__43933 = cljs.core.next(seq__43900_43923__$1);
var G__43934 = null;
var G__43935 = (0);
var G__43936 = (0);
seq__43900_43910 = G__43933;
chunk__43901_43911 = G__43934;
count__43902_43912 = G__43935;
i__43903_43913 = G__43936;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__32358__auto__ = self__.__hash;
if(!((h__32358__auto__ == null))){
return h__32358__auto__;
} else {
var h__32358__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__32358__auto____$1;

return h__32358__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__32524__auto__,writer__32525__auto__,opt__32526__auto__){
return cljs.core._write(writer__32525__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__32915__auto__ = this;
return cljs.core.es6_iterator(this__32915__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__32524__auto__,writer__32525__auto__,opt__32526__auto__){
return cljs.core._write(writer__32525__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__32915__auto__ = this;
return cljs.core.es6_iterator(this__32915__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__43938 = coll;
if(G__43938){
var bit__32618__auto__ = (G__43938.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__32618__auto__) || (G__43938.cljs$core$IReversible$)){
return true;
} else {
if((!G__43938.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__43938);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__43938);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__43939 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__43939;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__43940 = (i - (1));
var G__43941 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__43940;
r = G__43941;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__43942__i = 0, G__43942__a = new Array(arguments.length -  0);
while (G__43942__i < G__43942__a.length) {G__43942__a[G__43942__i] = arguments[G__43942__i + 0]; ++G__43942__i;}
  xs = new cljs.core.IndexedSeq(G__43942__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__43943){
var xs = cljs.core.seq(arglist__43943);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__32358__auto__ = self__.__hash;
if(!((h__32358__auto__ == null))){
return h__32358__auto__;
} else {
var h__32358__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__32358__auto____$1;

return h__32358__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__32524__auto__,writer__32525__auto__,opt__32526__auto__){
return cljs.core._write(writer__32525__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__32915__auto__ = this;
return cljs.core.es6_iterator(this__32915__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__31937__auto__ = (coll == null);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var G__43947 = coll;
if(G__43947){
var bit__32611__auto__ = (G__43947.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__32611__auto__) || (G__43947.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__43949 = x;
if(G__43949){
var bit__32618__auto__ = (G__43949.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__32618__auto__) || (G__43949.cljs$core$IList$)){
return true;
} else {
if((!G__43949.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__43949);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__43949);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__31925__auto__ = cljs.core.not(a.ns);
if(and__31925__auto__){
return b.ns;
} else {
return and__31925__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__43956 = a.ns;
var G__43957 = b.ns;
return goog.array.defaultCompare(G__43956,G__43957);
})();
if(((0) === nsc)){
var G__43958 = a.name;
var G__43959 = b.name;
return goog.array.defaultCompare(G__43958,G__43959);
} else {
return nsc;
}
}
} else {
var G__43960 = a.name;
var G__43961 = b.name;
return goog.array.defaultCompare(G__43960,G__43961);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__32358__auto__ = self__._hash;
if(!((h__32358__auto__ == null))){
return h__32358__auto__;
} else {
var h__32358__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__32358__auto____$1;

return h__32358__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__43963 = null;
var G__43963__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__43963__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__43963 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__43963__2.call(this,self__,coll);
case 3:
return G__43963__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__43963.cljs$core$IFn$_invoke$arity$2 = G__43963__2;
G__43963.cljs$core$IFn$_invoke$arity$3 = G__43963__3;
return G__43963;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args43962){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args43962)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__32524__auto__,writer__32525__auto__,opt__32526__auto__){
return cljs.core._write(writer__32525__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__43965 = x;
if(G__43965){
var bit__32611__auto__ = (G__43965.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__32611__auto__) || (G__43965.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__43967 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__43967) : cljs.core.name.call(null,G__43967));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__32358__auto__ = self__.__hash;
if(!((h__32358__auto__ == null))){
return h__32358__auto__;
} else {
var h__32358__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__32358__auto____$1;

return h__32358__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__43968 = ls.sval();
ls = G__43968;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__32524__auto__,writer__32525__auto__,opt__32526__auto__){
return cljs.core._write(writer__32525__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__32915__auto__ = this;
return cljs.core.es6_iterator(this__32915__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__32524__auto__,writer__32525__auto__,opt__32526__auto__){
return cljs.core._write(writer__32525__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__32524__auto__,writer__32525__auto__,opt__32526__auto__){
return cljs.core._write(writer__32525__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__32358__auto__ = self__.__hash;
if(!((h__32358__auto__ == null))){
return h__32358__auto__;
} else {
var h__32358__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__32358__auto____$1;

return h__32358__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__32524__auto__,writer__32525__auto__,opt__32526__auto__){
return cljs.core._write(writer__32525__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__32915__auto__ = this;
return cljs.core.es6_iterator(this__32915__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__43970 = s;
if(G__43970){
var bit__32611__auto__ = (G__43970.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__32611__auto__) || (G__43970.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__43971 = cljs.core.next(s__$1);
s__$1 = G__43971;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_43972 = (0);
var xs_43973 = cljs.core.seq(coll);
while(true){
if(xs_43973){
(ret[i_43972] = cljs.core.to_array(cljs.core.first(xs_43973)));

var G__43974 = (i_43972 + (1));
var G__43975 = cljs.core.next(xs_43973);
i_43972 = G__43974;
xs_43973 = G__43975;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__43978 = (i + (1));
var G__43979 = cljs.core.next(s__$1);
i = G__43978;
s__$1 = G__43979;
continue;
} else {
return a;
}
break;
}
} else {
var n__32824__auto___43980 = size;
var i_43981 = (0);
while(true){
if((i_43981 < n__32824__auto___43980)){
(a[i_43981] = init_val_or_seq);

var G__43982 = (i_43981 + (1));
i_43981 = G__43982;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__43985 = (i + (1));
var G__43986 = cljs.core.next(s__$1);
i = G__43985;
s__$1 = G__43986;
continue;
} else {
return a;
}
break;
}
} else {
var n__32824__auto___43987 = size;
var i_43988 = (0);
while(true){
if((i_43988 < n__32824__auto___43987)){
(a[i_43988] = init_val_or_seq);

var G__43989 = (i_43988 + (1));
i_43988 = G__43989;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__43992 = (i + (1));
var G__43993 = cljs.core.next(s__$1);
i = G__43992;
s__$1 = G__43993;
continue;
} else {
return a;
}
break;
}
} else {
var n__32824__auto___43994 = size;
var i_43995 = (0);
while(true){
if((i_43995 < n__32824__auto___43994)){
(a[i_43995] = init_val_or_seq);

var G__43996 = (i_43995 + (1));
i_43995 = G__43996;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__43999 = (i + (1));
var G__44000 = cljs.core.next(s__$1);
i = G__43999;
s__$1 = G__44000;
continue;
} else {
return a;
}
break;
}
} else {
var n__32824__auto___44001 = size;
var i_44002 = (0);
while(true){
if((i_44002 < n__32824__auto___44001)){
(a[i_44002] = init_val_or_seq);

var G__44003 = (i_44002 + (1));
i_44002 = G__44003;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__44004 = cljs.core.next(s__$1);
var G__44005 = (i - (1));
var G__44006 = (sum + (1));
s__$1 = G__44004;
i = G__44005;
sum = G__44006;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__44026__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__44026 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__44027__i = 0, G__44027__a = new Array(arguments.length -  2);
while (G__44027__i < G__44027__a.length) {G__44027__a[G__44027__i] = arguments[G__44027__i + 2]; ++G__44027__i;}
  zs = new cljs.core.IndexedSeq(G__44027__a,0);
} 
return G__44026__delegate.call(this,x,y,zs);};
G__44026.cljs$lang$maxFixedArity = 2;
G__44026.cljs$lang$applyTo = (function (arglist__44028){
var x = cljs.core.first(arglist__44028);
arglist__44028 = cljs.core.next(arglist__44028);
var y = cljs.core.first(arglist__44028);
var zs = cljs.core.rest(arglist__44028);
return G__44026__delegate(x,y,zs);
});
G__44026.cljs$core$IFn$_invoke$arity$variadic = G__44026__delegate;
return G__44026;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__44029 = null;
if (arguments.length > 2) {
var G__44030__i = 0, G__44030__a = new Array(arguments.length -  2);
while (G__44030__i < G__44030__a.length) {G__44030__a[G__44030__i] = arguments[G__44030__i + 2]; ++G__44030__i;}
G__44029 = new cljs.core.IndexedSeq(G__44030__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__44029);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__44031__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__44031 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__44032__i = 0, G__44032__a = new Array(arguments.length -  4);
while (G__44032__i < G__44032__a.length) {G__44032__a[G__44032__i] = arguments[G__44032__i + 4]; ++G__44032__i;}
  more = new cljs.core.IndexedSeq(G__44032__a,0);
} 
return G__44031__delegate.call(this,a,b,c,d,more);};
G__44031.cljs$lang$maxFixedArity = 4;
G__44031.cljs$lang$applyTo = (function (arglist__44033){
var a = cljs.core.first(arglist__44033);
arglist__44033 = cljs.core.next(arglist__44033);
var b = cljs.core.first(arglist__44033);
arglist__44033 = cljs.core.next(arglist__44033);
var c = cljs.core.first(arglist__44033);
arglist__44033 = cljs.core.next(arglist__44033);
var d = cljs.core.first(arglist__44033);
var more = cljs.core.rest(arglist__44033);
return G__44031__delegate(a,b,c,d,more);
});
G__44031.cljs$core$IFn$_invoke$arity$variadic = G__44031__delegate;
return G__44031;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__44034 = null;
if (arguments.length > 4) {
var G__44035__i = 0, G__44035__a = new Array(arguments.length -  4);
while (G__44035__i < G__44035__a.length) {G__44035__a[G__44035__i] = arguments[G__44035__i + 4]; ++G__44035__i;}
G__44034 = new cljs.core.IndexedSeq(G__44035__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__44034);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__44036__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__44037 = ntcoll;
var G__44038 = cljs.core.first(vals);
var G__44039 = cljs.core.next(vals);
tcoll = G__44037;
val = G__44038;
vals = G__44039;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__44036 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__44040__i = 0, G__44040__a = new Array(arguments.length -  2);
while (G__44040__i < G__44040__a.length) {G__44040__a[G__44040__i] = arguments[G__44040__i + 2]; ++G__44040__i;}
  vals = new cljs.core.IndexedSeq(G__44040__a,0);
} 
return G__44036__delegate.call(this,tcoll,val,vals);};
G__44036.cljs$lang$maxFixedArity = 2;
G__44036.cljs$lang$applyTo = (function (arglist__44041){
var tcoll = cljs.core.first(arglist__44041);
arglist__44041 = cljs.core.next(arglist__44041);
var val = cljs.core.first(arglist__44041);
var vals = cljs.core.rest(arglist__44041);
return G__44036__delegate(tcoll,val,vals);
});
G__44036.cljs$core$IFn$_invoke$arity$variadic = G__44036__delegate;
return G__44036;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__44042 = null;
if (arguments.length > 2) {
var G__44043__i = 0, G__44043__a = new Array(arguments.length -  2);
while (G__44043__i < G__44043__a.length) {G__44043__a[G__44043__i] = arguments[G__44043__i + 2]; ++G__44043__i;}
G__44042 = new cljs.core.IndexedSeq(G__44043__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__44042);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__44044__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__44045 = ntcoll;
var G__44046 = cljs.core.first(kvs);
var G__44047 = cljs.core.second(kvs);
var G__44048 = cljs.core.nnext(kvs);
tcoll = G__44045;
key = G__44046;
val = G__44047;
kvs = G__44048;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__44044 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__44049__i = 0, G__44049__a = new Array(arguments.length -  3);
while (G__44049__i < G__44049__a.length) {G__44049__a[G__44049__i] = arguments[G__44049__i + 3]; ++G__44049__i;}
  kvs = new cljs.core.IndexedSeq(G__44049__a,0);
} 
return G__44044__delegate.call(this,tcoll,key,val,kvs);};
G__44044.cljs$lang$maxFixedArity = 3;
G__44044.cljs$lang$applyTo = (function (arglist__44050){
var tcoll = cljs.core.first(arglist__44050);
arglist__44050 = cljs.core.next(arglist__44050);
var key = cljs.core.first(arglist__44050);
arglist__44050 = cljs.core.next(arglist__44050);
var val = cljs.core.first(arglist__44050);
var kvs = cljs.core.rest(arglist__44050);
return G__44044__delegate(tcoll,key,val,kvs);
});
G__44044.cljs$core$IFn$_invoke$arity$variadic = G__44044__delegate;
return G__44044;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__44051 = null;
if (arguments.length > 3) {
var G__44052__i = 0, G__44052__a = new Array(arguments.length -  3);
while (G__44052__i < G__44052__a.length) {G__44052__a[G__44052__i] = arguments[G__44052__i + 3]; ++G__44052__i;}
G__44051 = new cljs.core.IndexedSeq(G__44052__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__44051);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__44053__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__44054 = ntcoll;
var G__44055 = cljs.core.first(ks);
var G__44056 = cljs.core.next(ks);
tcoll = G__44054;
key = G__44055;
ks = G__44056;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__44053 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__44057__i = 0, G__44057__a = new Array(arguments.length -  2);
while (G__44057__i < G__44057__a.length) {G__44057__a[G__44057__i] = arguments[G__44057__i + 2]; ++G__44057__i;}
  ks = new cljs.core.IndexedSeq(G__44057__a,0);
} 
return G__44053__delegate.call(this,tcoll,key,ks);};
G__44053.cljs$lang$maxFixedArity = 2;
G__44053.cljs$lang$applyTo = (function (arglist__44058){
var tcoll = cljs.core.first(arglist__44058);
arglist__44058 = cljs.core.next(arglist__44058);
var key = cljs.core.first(arglist__44058);
var ks = cljs.core.rest(arglist__44058);
return G__44053__delegate(tcoll,key,ks);
});
G__44053.cljs$core$IFn$_invoke$arity$variadic = G__44053__delegate;
return G__44053;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__44059 = null;
if (arguments.length > 2) {
var G__44060__i = 0, G__44060__a = new Array(arguments.length -  2);
while (G__44060__i < G__44060__a.length) {G__44060__a[G__44060__i] = arguments[G__44060__i + 2]; ++G__44060__i;}
G__44059 = new cljs.core.IndexedSeq(G__44060__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__44059);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__44061__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__44062 = ntcoll;
var G__44063 = cljs.core.first(vals);
var G__44064 = cljs.core.next(vals);
tcoll = G__44062;
val = G__44063;
vals = G__44064;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__44061 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__44065__i = 0, G__44065__a = new Array(arguments.length -  2);
while (G__44065__i < G__44065__a.length) {G__44065__a[G__44065__i] = arguments[G__44065__i + 2]; ++G__44065__i;}
  vals = new cljs.core.IndexedSeq(G__44065__a,0);
} 
return G__44061__delegate.call(this,tcoll,val,vals);};
G__44061.cljs$lang$maxFixedArity = 2;
G__44061.cljs$lang$applyTo = (function (arglist__44066){
var tcoll = cljs.core.first(arglist__44066);
arglist__44066 = cljs.core.next(arglist__44066);
var val = cljs.core.first(arglist__44066);
var vals = cljs.core.rest(arglist__44066);
return G__44061__delegate(tcoll,val,vals);
});
G__44061.cljs$core$IFn$_invoke$arity$variadic = G__44061__delegate;
return G__44061;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__44067 = null;
if (arguments.length > 2) {
var G__44068__i = 0, G__44068__a = new Array(arguments.length -  2);
while (G__44068__i < G__44068__a.length) {G__44068__a[G__44068__i] = arguments[G__44068__i + 2]; ++G__44068__i;}
G__44067 = new cljs.core.IndexedSeq(G__44068__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__44067);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a32868 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a32868);
} else {
var G__44279 = a32868;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__44279) : f.call(null,G__44279));
}
} else {
var b32869 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a32868,b32869);
} else {
var G__44280 = a32868;
var G__44281 = b32869;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__44280,G__44281) : f.call(null,G__44280,G__44281));
}
} else {
var c32870 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a32868,b32869,c32870);
} else {
var G__44282 = a32868;
var G__44283 = b32869;
var G__44284 = c32870;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__44282,G__44283,G__44284) : f.call(null,G__44282,G__44283,G__44284));
}
} else {
var d32871 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a32868,b32869,c32870,d32871);
} else {
var G__44285 = a32868;
var G__44286 = b32869;
var G__44287 = c32870;
var G__44288 = d32871;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__44285,G__44286,G__44287,G__44288) : f.call(null,G__44285,G__44286,G__44287,G__44288));
}
} else {
var e32872 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a32868,b32869,c32870,d32871,e32872);
} else {
var G__44289 = a32868;
var G__44290 = b32869;
var G__44291 = c32870;
var G__44292 = d32871;
var G__44293 = e32872;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__44289,G__44290,G__44291,G__44292,G__44293) : f.call(null,G__44289,G__44290,G__44291,G__44292,G__44293));
}
} else {
var f32873 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a32868,b32869,c32870,d32871,e32872,f32873);
} else {
var G__44294 = a32868;
var G__44295 = b32869;
var G__44296 = c32870;
var G__44297 = d32871;
var G__44298 = e32872;
var G__44299 = f32873;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__44294,G__44295,G__44296,G__44297,G__44298,G__44299) : f.call(null,G__44294,G__44295,G__44296,G__44297,G__44298,G__44299));
}
} else {
var g32874 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a32868,b32869,c32870,d32871,e32872,f32873,g32874);
} else {
var G__44300 = a32868;
var G__44301 = b32869;
var G__44302 = c32870;
var G__44303 = d32871;
var G__44304 = e32872;
var G__44305 = f32873;
var G__44306 = g32874;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__44300,G__44301,G__44302,G__44303,G__44304,G__44305,G__44306) : f.call(null,G__44300,G__44301,G__44302,G__44303,G__44304,G__44305,G__44306));
}
} else {
var h32875 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a32868,b32869,c32870,d32871,e32872,f32873,g32874,h32875);
} else {
var G__44307 = a32868;
var G__44308 = b32869;
var G__44309 = c32870;
var G__44310 = d32871;
var G__44311 = e32872;
var G__44312 = f32873;
var G__44313 = g32874;
var G__44314 = h32875;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__44307,G__44308,G__44309,G__44310,G__44311,G__44312,G__44313,G__44314) : f.call(null,G__44307,G__44308,G__44309,G__44310,G__44311,G__44312,G__44313,G__44314));
}
} else {
var i32876 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a32868,b32869,c32870,d32871,e32872,f32873,g32874,h32875,i32876);
} else {
var G__44315 = a32868;
var G__44316 = b32869;
var G__44317 = c32870;
var G__44318 = d32871;
var G__44319 = e32872;
var G__44320 = f32873;
var G__44321 = g32874;
var G__44322 = h32875;
var G__44323 = i32876;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__44315,G__44316,G__44317,G__44318,G__44319,G__44320,G__44321,G__44322,G__44323) : f.call(null,G__44315,G__44316,G__44317,G__44318,G__44319,G__44320,G__44321,G__44322,G__44323));
}
} else {
var j32877 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a32868,b32869,c32870,d32871,e32872,f32873,g32874,h32875,i32876,j32877);
} else {
var G__44324 = a32868;
var G__44325 = b32869;
var G__44326 = c32870;
var G__44327 = d32871;
var G__44328 = e32872;
var G__44329 = f32873;
var G__44330 = g32874;
var G__44331 = h32875;
var G__44332 = i32876;
var G__44333 = j32877;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__44324,G__44325,G__44326,G__44327,G__44328,G__44329,G__44330,G__44331,G__44332,G__44333) : f.call(null,G__44324,G__44325,G__44326,G__44327,G__44328,G__44329,G__44330,G__44331,G__44332,G__44333));
}
} else {
var k32878 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a32868,b32869,c32870,d32871,e32872,f32873,g32874,h32875,i32876,j32877,k32878);
} else {
var G__44334 = a32868;
var G__44335 = b32869;
var G__44336 = c32870;
var G__44337 = d32871;
var G__44338 = e32872;
var G__44339 = f32873;
var G__44340 = g32874;
var G__44341 = h32875;
var G__44342 = i32876;
var G__44343 = j32877;
var G__44344 = k32878;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__44334,G__44335,G__44336,G__44337,G__44338,G__44339,G__44340,G__44341,G__44342,G__44343,G__44344) : f.call(null,G__44334,G__44335,G__44336,G__44337,G__44338,G__44339,G__44340,G__44341,G__44342,G__44343,G__44344));
}
} else {
var l32879 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a32868,b32869,c32870,d32871,e32872,f32873,g32874,h32875,i32876,j32877,k32878,l32879);
} else {
var G__44345 = a32868;
var G__44346 = b32869;
var G__44347 = c32870;
var G__44348 = d32871;
var G__44349 = e32872;
var G__44350 = f32873;
var G__44351 = g32874;
var G__44352 = h32875;
var G__44353 = i32876;
var G__44354 = j32877;
var G__44355 = k32878;
var G__44356 = l32879;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__44345,G__44346,G__44347,G__44348,G__44349,G__44350,G__44351,G__44352,G__44353,G__44354,G__44355,G__44356) : f.call(null,G__44345,G__44346,G__44347,G__44348,G__44349,G__44350,G__44351,G__44352,G__44353,G__44354,G__44355,G__44356));
}
} else {
var m32880 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a32868,b32869,c32870,d32871,e32872,f32873,g32874,h32875,i32876,j32877,k32878,l32879,m32880);
} else {
var G__44357 = a32868;
var G__44358 = b32869;
var G__44359 = c32870;
var G__44360 = d32871;
var G__44361 = e32872;
var G__44362 = f32873;
var G__44363 = g32874;
var G__44364 = h32875;
var G__44365 = i32876;
var G__44366 = j32877;
var G__44367 = k32878;
var G__44368 = l32879;
var G__44369 = m32880;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__44357,G__44358,G__44359,G__44360,G__44361,G__44362,G__44363,G__44364,G__44365,G__44366,G__44367,G__44368,G__44369) : f.call(null,G__44357,G__44358,G__44359,G__44360,G__44361,G__44362,G__44363,G__44364,G__44365,G__44366,G__44367,G__44368,G__44369));
}
} else {
var n32881 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a32868,b32869,c32870,d32871,e32872,f32873,g32874,h32875,i32876,j32877,k32878,l32879,m32880,n32881);
} else {
var G__44370 = a32868;
var G__44371 = b32869;
var G__44372 = c32870;
var G__44373 = d32871;
var G__44374 = e32872;
var G__44375 = f32873;
var G__44376 = g32874;
var G__44377 = h32875;
var G__44378 = i32876;
var G__44379 = j32877;
var G__44380 = k32878;
var G__44381 = l32879;
var G__44382 = m32880;
var G__44383 = n32881;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__44370,G__44371,G__44372,G__44373,G__44374,G__44375,G__44376,G__44377,G__44378,G__44379,G__44380,G__44381,G__44382,G__44383) : f.call(null,G__44370,G__44371,G__44372,G__44373,G__44374,G__44375,G__44376,G__44377,G__44378,G__44379,G__44380,G__44381,G__44382,G__44383));
}
} else {
var o32882 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a32868,b32869,c32870,d32871,e32872,f32873,g32874,h32875,i32876,j32877,k32878,l32879,m32880,n32881,o32882);
} else {
var G__44384 = a32868;
var G__44385 = b32869;
var G__44386 = c32870;
var G__44387 = d32871;
var G__44388 = e32872;
var G__44389 = f32873;
var G__44390 = g32874;
var G__44391 = h32875;
var G__44392 = i32876;
var G__44393 = j32877;
var G__44394 = k32878;
var G__44395 = l32879;
var G__44396 = m32880;
var G__44397 = n32881;
var G__44398 = o32882;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__44384,G__44385,G__44386,G__44387,G__44388,G__44389,G__44390,G__44391,G__44392,G__44393,G__44394,G__44395,G__44396,G__44397,G__44398) : f.call(null,G__44384,G__44385,G__44386,G__44387,G__44388,G__44389,G__44390,G__44391,G__44392,G__44393,G__44394,G__44395,G__44396,G__44397,G__44398));
}
} else {
var p32883 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a32868,b32869,c32870,d32871,e32872,f32873,g32874,h32875,i32876,j32877,k32878,l32879,m32880,n32881,o32882,p32883);
} else {
var G__44399 = a32868;
var G__44400 = b32869;
var G__44401 = c32870;
var G__44402 = d32871;
var G__44403 = e32872;
var G__44404 = f32873;
var G__44405 = g32874;
var G__44406 = h32875;
var G__44407 = i32876;
var G__44408 = j32877;
var G__44409 = k32878;
var G__44410 = l32879;
var G__44411 = m32880;
var G__44412 = n32881;
var G__44413 = o32882;
var G__44414 = p32883;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__44399,G__44400,G__44401,G__44402,G__44403,G__44404,G__44405,G__44406,G__44407,G__44408,G__44409,G__44410,G__44411,G__44412,G__44413,G__44414) : f.call(null,G__44399,G__44400,G__44401,G__44402,G__44403,G__44404,G__44405,G__44406,G__44407,G__44408,G__44409,G__44410,G__44411,G__44412,G__44413,G__44414));
}
} else {
var q32884 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a32868,b32869,c32870,d32871,e32872,f32873,g32874,h32875,i32876,j32877,k32878,l32879,m32880,n32881,o32882,p32883,q32884);
} else {
var G__44415 = a32868;
var G__44416 = b32869;
var G__44417 = c32870;
var G__44418 = d32871;
var G__44419 = e32872;
var G__44420 = f32873;
var G__44421 = g32874;
var G__44422 = h32875;
var G__44423 = i32876;
var G__44424 = j32877;
var G__44425 = k32878;
var G__44426 = l32879;
var G__44427 = m32880;
var G__44428 = n32881;
var G__44429 = o32882;
var G__44430 = p32883;
var G__44431 = q32884;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__44415,G__44416,G__44417,G__44418,G__44419,G__44420,G__44421,G__44422,G__44423,G__44424,G__44425,G__44426,G__44427,G__44428,G__44429,G__44430,G__44431) : f.call(null,G__44415,G__44416,G__44417,G__44418,G__44419,G__44420,G__44421,G__44422,G__44423,G__44424,G__44425,G__44426,G__44427,G__44428,G__44429,G__44430,G__44431));
}
} else {
var r32885 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a32868,b32869,c32870,d32871,e32872,f32873,g32874,h32875,i32876,j32877,k32878,l32879,m32880,n32881,o32882,p32883,q32884,r32885);
} else {
var G__44432 = a32868;
var G__44433 = b32869;
var G__44434 = c32870;
var G__44435 = d32871;
var G__44436 = e32872;
var G__44437 = f32873;
var G__44438 = g32874;
var G__44439 = h32875;
var G__44440 = i32876;
var G__44441 = j32877;
var G__44442 = k32878;
var G__44443 = l32879;
var G__44444 = m32880;
var G__44445 = n32881;
var G__44446 = o32882;
var G__44447 = p32883;
var G__44448 = q32884;
var G__44449 = r32885;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__44432,G__44433,G__44434,G__44435,G__44436,G__44437,G__44438,G__44439,G__44440,G__44441,G__44442,G__44443,G__44444,G__44445,G__44446,G__44447,G__44448,G__44449) : f.call(null,G__44432,G__44433,G__44434,G__44435,G__44436,G__44437,G__44438,G__44439,G__44440,G__44441,G__44442,G__44443,G__44444,G__44445,G__44446,G__44447,G__44448,G__44449));
}
} else {
var s32886 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a32868,b32869,c32870,d32871,e32872,f32873,g32874,h32875,i32876,j32877,k32878,l32879,m32880,n32881,o32882,p32883,q32884,r32885,s32886);
} else {
var G__44450 = a32868;
var G__44451 = b32869;
var G__44452 = c32870;
var G__44453 = d32871;
var G__44454 = e32872;
var G__44455 = f32873;
var G__44456 = g32874;
var G__44457 = h32875;
var G__44458 = i32876;
var G__44459 = j32877;
var G__44460 = k32878;
var G__44461 = l32879;
var G__44462 = m32880;
var G__44463 = n32881;
var G__44464 = o32882;
var G__44465 = p32883;
var G__44466 = q32884;
var G__44467 = r32885;
var G__44468 = s32886;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__44450,G__44451,G__44452,G__44453,G__44454,G__44455,G__44456,G__44457,G__44458,G__44459,G__44460,G__44461,G__44462,G__44463,G__44464,G__44465,G__44466,G__44467,G__44468) : f.call(null,G__44450,G__44451,G__44452,G__44453,G__44454,G__44455,G__44456,G__44457,G__44458,G__44459,G__44460,G__44461,G__44462,G__44463,G__44464,G__44465,G__44466,G__44467,G__44468));
}
} else {
var t32887 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a32868,b32869,c32870,d32871,e32872,f32873,g32874,h32875,i32876,j32877,k32878,l32879,m32880,n32881,o32882,p32883,q32884,r32885,s32886,t32887);
} else {
var G__44469 = a32868;
var G__44470 = b32869;
var G__44471 = c32870;
var G__44472 = d32871;
var G__44473 = e32872;
var G__44474 = f32873;
var G__44475 = g32874;
var G__44476 = h32875;
var G__44477 = i32876;
var G__44478 = j32877;
var G__44479 = k32878;
var G__44480 = l32879;
var G__44481 = m32880;
var G__44482 = n32881;
var G__44483 = o32882;
var G__44484 = p32883;
var G__44485 = q32884;
var G__44486 = r32885;
var G__44487 = s32886;
var G__44488 = t32887;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__44469,G__44470,G__44471,G__44472,G__44473,G__44474,G__44475,G__44476,G__44477,G__44478,G__44479,G__44480,G__44481,G__44482,G__44483,G__44484,G__44485,G__44486,G__44487,G__44488) : f.call(null,G__44469,G__44470,G__44471,G__44472,G__44473,G__44474,G__44475,G__44476,G__44477,G__44478,G__44479,G__44480,G__44481,G__44482,G__44483,G__44484,G__44485,G__44486,G__44487,G__44488));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__44489__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__44489 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__44490__i = 0, G__44490__a = new Array(arguments.length -  5);
while (G__44490__i < G__44490__a.length) {G__44490__a[G__44490__i] = arguments[G__44490__i + 5]; ++G__44490__i;}
  args = new cljs.core.IndexedSeq(G__44490__a,0);
} 
return G__44489__delegate.call(this,f,a,b,c,d,args);};
G__44489.cljs$lang$maxFixedArity = 5;
G__44489.cljs$lang$applyTo = (function (arglist__44491){
var f = cljs.core.first(arglist__44491);
arglist__44491 = cljs.core.next(arglist__44491);
var a = cljs.core.first(arglist__44491);
arglist__44491 = cljs.core.next(arglist__44491);
var b = cljs.core.first(arglist__44491);
arglist__44491 = cljs.core.next(arglist__44491);
var c = cljs.core.first(arglist__44491);
arglist__44491 = cljs.core.next(arglist__44491);
var d = cljs.core.first(arglist__44491);
var args = cljs.core.rest(arglist__44491);
return G__44489__delegate(f,a,b,c,d,args);
});
G__44489.cljs$core$IFn$_invoke$arity$variadic = G__44489__delegate;
return G__44489;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__44492 = null;
if (arguments.length > 5) {
var G__44493__i = 0, G__44493__a = new Array(arguments.length -  5);
while (G__44493__i < G__44493__a.length) {G__44493__a[G__44493__i] = arguments[G__44493__i + 5]; ++G__44493__i;}
G__44492 = new cljs.core.IndexedSeq(G__44493__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__44492);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__44509 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__44509) : f.call(null,G__44509));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__44510 = cljs.core.meta(obj);
var G__44511 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__44510,G__44511) : f.call(null,G__44510,G__44511));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__44512 = cljs.core.meta(obj);
var G__44513 = a;
var G__44514 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__44512,G__44513,G__44514) : f.call(null,G__44512,G__44513,G__44514));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__44515 = cljs.core.meta(obj);
var G__44516 = a;
var G__44517 = b;
var G__44518 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__44515,G__44516,G__44517,G__44518) : f.call(null,G__44515,G__44516,G__44517,G__44518));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__44519 = cljs.core.meta(obj);
var G__44520 = a;
var G__44521 = b;
var G__44522 = c;
var G__44523 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__44519,G__44520,G__44521,G__44522,G__44523) : f.call(null,G__44519,G__44520,G__44521,G__44522,G__44523));
})());
});
var vary_meta__7 = (function() { 
var G__44524__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__44524 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__44525__i = 0, G__44525__a = new Array(arguments.length -  6);
while (G__44525__i < G__44525__a.length) {G__44525__a[G__44525__i] = arguments[G__44525__i + 6]; ++G__44525__i;}
  args = new cljs.core.IndexedSeq(G__44525__a,0);
} 
return G__44524__delegate.call(this,obj,f,a,b,c,d,args);};
G__44524.cljs$lang$maxFixedArity = 6;
G__44524.cljs$lang$applyTo = (function (arglist__44526){
var obj = cljs.core.first(arglist__44526);
arglist__44526 = cljs.core.next(arglist__44526);
var f = cljs.core.first(arglist__44526);
arglist__44526 = cljs.core.next(arglist__44526);
var a = cljs.core.first(arglist__44526);
arglist__44526 = cljs.core.next(arglist__44526);
var b = cljs.core.first(arglist__44526);
arglist__44526 = cljs.core.next(arglist__44526);
var c = cljs.core.first(arglist__44526);
arglist__44526 = cljs.core.next(arglist__44526);
var d = cljs.core.first(arglist__44526);
var args = cljs.core.rest(arglist__44526);
return G__44524__delegate(obj,f,a,b,c,d,args);
});
G__44524.cljs$core$IFn$_invoke$arity$variadic = G__44524__delegate;
return G__44524;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__44527 = null;
if (arguments.length > 6) {
var G__44528__i = 0, G__44528__a = new Array(arguments.length -  6);
while (G__44528__i < G__44528__a.length) {G__44528__a[G__44528__i] = arguments[G__44528__i + 6]; ++G__44528__i;}
G__44527 = new cljs.core.IndexedSeq(G__44528__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__44527);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__44529__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__44529 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__44530__i = 0, G__44530__a = new Array(arguments.length -  2);
while (G__44530__i < G__44530__a.length) {G__44530__a[G__44530__i] = arguments[G__44530__i + 2]; ++G__44530__i;}
  more = new cljs.core.IndexedSeq(G__44530__a,0);
} 
return G__44529__delegate.call(this,x,y,more);};
G__44529.cljs$lang$maxFixedArity = 2;
G__44529.cljs$lang$applyTo = (function (arglist__44531){
var x = cljs.core.first(arglist__44531);
arglist__44531 = cljs.core.next(arglist__44531);
var y = cljs.core.first(arglist__44531);
var more = cljs.core.rest(arglist__44531);
return G__44529__delegate(x,y,more);
});
G__44529.cljs$core$IFn$_invoke$arity$variadic = G__44529__delegate;
return G__44529;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__44532 = null;
if (arguments.length > 2) {
var G__44533__i = 0, G__44533__a = new Array(arguments.length -  2);
while (G__44533__i < G__44533__a.length) {G__44533__a[G__44533__i] = arguments[G__44533__i + 2]; ++G__44533__i;}
G__44532 = new cljs.core.IndexedSeq(G__44533__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__44532);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t44537 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t44537 = (function (nil_iter,meta44538){
this.nil_iter = nil_iter;
this.meta44538 = meta44538;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t44537.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t44537.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t44537.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t44537.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_44539){
var self__ = this;
var _44539__$1 = this;
return self__.meta44538;
});

cljs.core.t44537.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_44539,meta44538__$1){
var self__ = this;
var _44539__$1 = this;
return (new cljs.core.t44537(self__.nil_iter,meta44538__$1));
});

cljs.core.t44537.cljs$lang$type = true;

cljs.core.t44537.cljs$lang$ctorStr = "cljs.core/t44537";

cljs.core.t44537.cljs$lang$ctorPrWriter = (function (this__32524__auto__,writer__32525__auto__,opt__32526__auto__){
return cljs.core._write(writer__32525__auto__,"cljs.core/t44537");
});

cljs.core.__GT_t44537 = (function __GT_t44537(nil_iter__$1,meta44538){
return (new cljs.core.t44537(nil_iter__$1,meta44538));
});

}

return (new cljs.core.t44537(nil_iter,cljs.core.PersistentArrayMap.EMPTY));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__32524__auto__,writer__32525__auto__,opt__32526__auto__){
return cljs.core._write(writer__32525__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__32524__auto__,writer__32525__auto__,opt__32526__auto__){
return cljs.core._write(writer__32525__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__32524__auto__,writer__32525__auto__,opt__32526__auto__){
return cljs.core._write(writer__32525__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__31925__auto__ = !((lt.stepper == null));
if(and__31925__auto__){
return self__.iter.hasNext();
} else {
return and__31925__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__44540 = lt;
var G__44541 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__44540,G__44541) : self__.xform.call(null,G__44540,G__44541));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__44542 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__44542) : self__.xform.call(null,G__44542));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__32524__auto__,writer__32525__auto__,opt__32526__auto__){
return cljs.core._write(writer__32525__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__44544 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__44544) : xform.call(null,G__44544));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__44546 = cljs.core.next(iters__$1);
iters__$1 = G__44546;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__32824__auto___44547 = self__.iters.length;
var i_44548 = (0);
while(true){
if((i_44548 < n__32824__auto___44547)){
(self__.nexts[i_44548] = (self__.iters[i_44548]).next());

var G__44549 = (i_44548 + (1));
i_44548 = G__44549;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__31925__auto__ = !((lt.stepper == null));
if(and__31925__auto__){
return this$.hasNext();
} else {
return and__31925__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__44545 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__44545) : self__.xform.call(null,G__44545));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__32524__auto__,writer__32525__auto__,opt__32526__auto__){
return cljs.core._write(writer__32525__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__44554 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__44554) : xform.call(null,G__44554));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__32524__auto__,writer__32525__auto__,opt__32526__auto__){
return cljs.core._write(writer__32525__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__32915__auto__ = this;
return cljs.core.es6_iterator(this__32915__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__44555_44559 = cljs.core.seq(colls);
var chunk__44556_44560 = null;
var count__44557_44561 = (0);
var i__44558_44562 = (0);
while(true){
if((i__44558_44562 < count__44557_44561)){
var coll_44563 = chunk__44556_44560.cljs$core$IIndexed$_nth$arity$2(null,i__44558_44562);
iters.push(cljs.core.iter(coll_44563));

var G__44564 = seq__44555_44559;
var G__44565 = chunk__44556_44560;
var G__44566 = count__44557_44561;
var G__44567 = (i__44558_44562 + (1));
seq__44555_44559 = G__44564;
chunk__44556_44560 = G__44565;
count__44557_44561 = G__44566;
i__44558_44562 = G__44567;
continue;
} else {
var temp__4126__auto___44568 = cljs.core.seq(seq__44555_44559);
if(temp__4126__auto___44568){
var seq__44555_44569__$1 = temp__4126__auto___44568;
if(cljs.core.chunked_seq_QMARK_(seq__44555_44569__$1)){
var c__32724__auto___44570 = cljs.core.chunk_first(seq__44555_44569__$1);
var G__44571 = cljs.core.chunk_rest(seq__44555_44569__$1);
var G__44572 = c__32724__auto___44570;
var G__44573 = cljs.core.count(c__32724__auto___44570);
var G__44574 = (0);
seq__44555_44559 = G__44571;
chunk__44556_44560 = G__44572;
count__44557_44561 = G__44573;
i__44558_44562 = G__44574;
continue;
} else {
var coll_44575 = cljs.core.first(seq__44555_44569__$1);
iters.push(cljs.core.iter(coll_44575));

var G__44576 = cljs.core.next(seq__44555_44569__$1);
var G__44577 = null;
var G__44578 = (0);
var G__44579 = (0);
seq__44555_44559 = G__44576;
chunk__44556_44560 = G__44577;
count__44557_44561 = G__44578;
i__44558_44562 = G__44579;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__31937__auto__ = cljs.core.seq(coll);
if(or__31937__auto__){
return or__31937__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__44580__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__44580 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__44581__i = 0, G__44581__a = new Array(arguments.length -  2);
while (G__44581__i < G__44581__a.length) {G__44581__a[G__44581__i] = arguments[G__44581__i + 2]; ++G__44581__i;}
  colls = new cljs.core.IndexedSeq(G__44581__a,0);
} 
return G__44580__delegate.call(this,xform,coll,colls);};
G__44580.cljs$lang$maxFixedArity = 2;
G__44580.cljs$lang$applyTo = (function (arglist__44582){
var xform = cljs.core.first(arglist__44582);
arglist__44582 = cljs.core.next(arglist__44582);
var coll = cljs.core.first(arglist__44582);
var colls = cljs.core.rest(arglist__44582);
return G__44580__delegate(xform,coll,colls);
});
G__44580.cljs$core$IFn$_invoke$arity$variadic = G__44580__delegate;
return G__44580;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__44583 = null;
if (arguments.length > 2) {
var G__44584__i = 0, G__44584__a = new Array(arguments.length -  2);
while (G__44584__i < G__44584__a.length) {G__44584__a[G__44584__i] = arguments[G__44584__i + 2]; ++G__44584__i;}
G__44583 = new cljs.core.IndexedSeq(G__44584__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__44583);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__44586 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__44586) : pred.call(null,G__44586));
})())){
var G__44587 = pred;
var G__44588 = cljs.core.next(coll);
pred = G__44587;
coll = G__44588;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__31937__auto__ = (function (){var G__44592 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__44592) : pred.call(null,G__44592));
})();
if(cljs.core.truth_(or__31937__auto__)){
return or__31937__auto__;
} else {
var G__44593 = pred;
var G__44594 = cljs.core.next(coll);
pred = G__44593;
coll = G__44594;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__44601 = null;
var G__44601__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__44601__1 = (function (x){
return cljs.core.not((function (){var G__44598 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__44598) : f.call(null,G__44598));
})());
});
var G__44601__2 = (function (x,y){
return cljs.core.not((function (){var G__44599 = x;
var G__44600 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__44599,G__44600) : f.call(null,G__44599,G__44600));
})());
});
var G__44601__3 = (function() { 
var G__44602__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__44602 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__44603__i = 0, G__44603__a = new Array(arguments.length -  2);
while (G__44603__i < G__44603__a.length) {G__44603__a[G__44603__i] = arguments[G__44603__i + 2]; ++G__44603__i;}
  zs = new cljs.core.IndexedSeq(G__44603__a,0);
} 
return G__44602__delegate.call(this,x,y,zs);};
G__44602.cljs$lang$maxFixedArity = 2;
G__44602.cljs$lang$applyTo = (function (arglist__44604){
var x = cljs.core.first(arglist__44604);
arglist__44604 = cljs.core.next(arglist__44604);
var y = cljs.core.first(arglist__44604);
var zs = cljs.core.rest(arglist__44604);
return G__44602__delegate(x,y,zs);
});
G__44602.cljs$core$IFn$_invoke$arity$variadic = G__44602__delegate;
return G__44602;
})()
;
G__44601 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__44601__0.call(this);
case 1:
return G__44601__1.call(this,x);
case 2:
return G__44601__2.call(this,x,y);
default:
var G__44605 = null;
if (arguments.length > 2) {
var G__44606__i = 0, G__44606__a = new Array(arguments.length -  2);
while (G__44606__i < G__44606__a.length) {G__44606__a[G__44606__i] = arguments[G__44606__i + 2]; ++G__44606__i;}
G__44605 = new cljs.core.IndexedSeq(G__44606__a,0);
}
return G__44601__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__44605);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__44601.cljs$lang$maxFixedArity = 2;
G__44601.cljs$lang$applyTo = G__44601__3.cljs$lang$applyTo;
G__44601.cljs$core$IFn$_invoke$arity$0 = G__44601__0;
G__44601.cljs$core$IFn$_invoke$arity$1 = G__44601__1;
G__44601.cljs$core$IFn$_invoke$arity$2 = G__44601__2;
G__44601.cljs$core$IFn$_invoke$arity$variadic = G__44601__3.cljs$core$IFn$_invoke$arity$variadic;
return G__44601;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__44607__delegate = function (args){
return x;
};
var G__44607 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__44608__i = 0, G__44608__a = new Array(arguments.length -  0);
while (G__44608__i < G__44608__a.length) {G__44608__a[G__44608__i] = arguments[G__44608__i + 0]; ++G__44608__i;}
  args = new cljs.core.IndexedSeq(G__44608__a,0);
} 
return G__44607__delegate.call(this,args);};
G__44607.cljs$lang$maxFixedArity = 0;
G__44607.cljs$lang$applyTo = (function (arglist__44609){
var args = cljs.core.seq(arglist__44609);
return G__44607__delegate(args);
});
G__44607.cljs$core$IFn$_invoke$arity$variadic = G__44607__delegate;
return G__44607;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__44664 = null;
var G__44664__0 = (function (){
var G__44637 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__44637) : f.call(null,G__44637));
});
var G__44664__1 = (function (x){
var G__44638 = (function (){var G__44639 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__44639) : g.call(null,G__44639));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__44638) : f.call(null,G__44638));
});
var G__44664__2 = (function (x,y){
var G__44640 = (function (){var G__44641 = x;
var G__44642 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__44641,G__44642) : g.call(null,G__44641,G__44642));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__44640) : f.call(null,G__44640));
});
var G__44664__3 = (function (x,y,z){
var G__44643 = (function (){var G__44644 = x;
var G__44645 = y;
var G__44646 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__44644,G__44645,G__44646) : g.call(null,G__44644,G__44645,G__44646));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__44643) : f.call(null,G__44643));
});
var G__44664__4 = (function() { 
var G__44665__delegate = function (x,y,z,args){
var G__44647 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__44647) : f.call(null,G__44647));
};
var G__44665 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__44666__i = 0, G__44666__a = new Array(arguments.length -  3);
while (G__44666__i < G__44666__a.length) {G__44666__a[G__44666__i] = arguments[G__44666__i + 3]; ++G__44666__i;}
  args = new cljs.core.IndexedSeq(G__44666__a,0);
} 
return G__44665__delegate.call(this,x,y,z,args);};
G__44665.cljs$lang$maxFixedArity = 3;
G__44665.cljs$lang$applyTo = (function (arglist__44667){
var x = cljs.core.first(arglist__44667);
arglist__44667 = cljs.core.next(arglist__44667);
var y = cljs.core.first(arglist__44667);
arglist__44667 = cljs.core.next(arglist__44667);
var z = cljs.core.first(arglist__44667);
var args = cljs.core.rest(arglist__44667);
return G__44665__delegate(x,y,z,args);
});
G__44665.cljs$core$IFn$_invoke$arity$variadic = G__44665__delegate;
return G__44665;
})()
;
G__44664 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__44664__0.call(this);
case 1:
return G__44664__1.call(this,x);
case 2:
return G__44664__2.call(this,x,y);
case 3:
return G__44664__3.call(this,x,y,z);
default:
var G__44668 = null;
if (arguments.length > 3) {
var G__44669__i = 0, G__44669__a = new Array(arguments.length -  3);
while (G__44669__i < G__44669__a.length) {G__44669__a[G__44669__i] = arguments[G__44669__i + 3]; ++G__44669__i;}
G__44668 = new cljs.core.IndexedSeq(G__44669__a,0);
}
return G__44664__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__44668);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__44664.cljs$lang$maxFixedArity = 3;
G__44664.cljs$lang$applyTo = G__44664__4.cljs$lang$applyTo;
G__44664.cljs$core$IFn$_invoke$arity$0 = G__44664__0;
G__44664.cljs$core$IFn$_invoke$arity$1 = G__44664__1;
G__44664.cljs$core$IFn$_invoke$arity$2 = G__44664__2;
G__44664.cljs$core$IFn$_invoke$arity$3 = G__44664__3;
G__44664.cljs$core$IFn$_invoke$arity$variadic = G__44664__4.cljs$core$IFn$_invoke$arity$variadic;
return G__44664;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__44670 = null;
var G__44670__0 = (function (){
var G__44648 = (function (){var G__44649 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__44649) : g.call(null,G__44649));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__44648) : f.call(null,G__44648));
});
var G__44670__1 = (function (x){
var G__44650 = (function (){var G__44651 = (function (){var G__44652 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__44652) : h.call(null,G__44652));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__44651) : g.call(null,G__44651));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__44650) : f.call(null,G__44650));
});
var G__44670__2 = (function (x,y){
var G__44653 = (function (){var G__44654 = (function (){var G__44655 = x;
var G__44656 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__44655,G__44656) : h.call(null,G__44655,G__44656));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__44654) : g.call(null,G__44654));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__44653) : f.call(null,G__44653));
});
var G__44670__3 = (function (x,y,z){
var G__44657 = (function (){var G__44658 = (function (){var G__44659 = x;
var G__44660 = y;
var G__44661 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__44659,G__44660,G__44661) : h.call(null,G__44659,G__44660,G__44661));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__44658) : g.call(null,G__44658));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__44657) : f.call(null,G__44657));
});
var G__44670__4 = (function() { 
var G__44671__delegate = function (x,y,z,args){
var G__44662 = (function (){var G__44663 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__44663) : g.call(null,G__44663));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__44662) : f.call(null,G__44662));
};
var G__44671 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__44672__i = 0, G__44672__a = new Array(arguments.length -  3);
while (G__44672__i < G__44672__a.length) {G__44672__a[G__44672__i] = arguments[G__44672__i + 3]; ++G__44672__i;}
  args = new cljs.core.IndexedSeq(G__44672__a,0);
} 
return G__44671__delegate.call(this,x,y,z,args);};
G__44671.cljs$lang$maxFixedArity = 3;
G__44671.cljs$lang$applyTo = (function (arglist__44673){
var x = cljs.core.first(arglist__44673);
arglist__44673 = cljs.core.next(arglist__44673);
var y = cljs.core.first(arglist__44673);
arglist__44673 = cljs.core.next(arglist__44673);
var z = cljs.core.first(arglist__44673);
var args = cljs.core.rest(arglist__44673);
return G__44671__delegate(x,y,z,args);
});
G__44671.cljs$core$IFn$_invoke$arity$variadic = G__44671__delegate;
return G__44671;
})()
;
G__44670 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__44670__0.call(this);
case 1:
return G__44670__1.call(this,x);
case 2:
return G__44670__2.call(this,x,y);
case 3:
return G__44670__3.call(this,x,y,z);
default:
var G__44674 = null;
if (arguments.length > 3) {
var G__44675__i = 0, G__44675__a = new Array(arguments.length -  3);
while (G__44675__i < G__44675__a.length) {G__44675__a[G__44675__i] = arguments[G__44675__i + 3]; ++G__44675__i;}
G__44674 = new cljs.core.IndexedSeq(G__44675__a,0);
}
return G__44670__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__44674);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__44670.cljs$lang$maxFixedArity = 3;
G__44670.cljs$lang$applyTo = G__44670__4.cljs$lang$applyTo;
G__44670.cljs$core$IFn$_invoke$arity$0 = G__44670__0;
G__44670.cljs$core$IFn$_invoke$arity$1 = G__44670__1;
G__44670.cljs$core$IFn$_invoke$arity$2 = G__44670__2;
G__44670.cljs$core$IFn$_invoke$arity$3 = G__44670__3;
G__44670.cljs$core$IFn$_invoke$arity$variadic = G__44670__4.cljs$core$IFn$_invoke$arity$variadic;
return G__44670;
})()
});
var comp__4 = (function() { 
var G__44676__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__44677__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__44678 = cljs.core.first(fs__$2).call(null,ret);
var G__44679 = cljs.core.next(fs__$2);
ret = G__44678;
fs__$2 = G__44679;
continue;
} else {
return ret;
}
break;
}
};
var G__44677 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__44680__i = 0, G__44680__a = new Array(arguments.length -  0);
while (G__44680__i < G__44680__a.length) {G__44680__a[G__44680__i] = arguments[G__44680__i + 0]; ++G__44680__i;}
  args = new cljs.core.IndexedSeq(G__44680__a,0);
} 
return G__44677__delegate.call(this,args);};
G__44677.cljs$lang$maxFixedArity = 0;
G__44677.cljs$lang$applyTo = (function (arglist__44681){
var args = cljs.core.seq(arglist__44681);
return G__44677__delegate(args);
});
G__44677.cljs$core$IFn$_invoke$arity$variadic = G__44677__delegate;
return G__44677;
})()
;
;})(fs__$1))
};
var G__44676 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__44682__i = 0, G__44682__a = new Array(arguments.length -  3);
while (G__44682__i < G__44682__a.length) {G__44682__a[G__44682__i] = arguments[G__44682__i + 3]; ++G__44682__i;}
  fs = new cljs.core.IndexedSeq(G__44682__a,0);
} 
return G__44676__delegate.call(this,f1,f2,f3,fs);};
G__44676.cljs$lang$maxFixedArity = 3;
G__44676.cljs$lang$applyTo = (function (arglist__44683){
var f1 = cljs.core.first(arglist__44683);
arglist__44683 = cljs.core.next(arglist__44683);
var f2 = cljs.core.first(arglist__44683);
arglist__44683 = cljs.core.next(arglist__44683);
var f3 = cljs.core.first(arglist__44683);
var fs = cljs.core.rest(arglist__44683);
return G__44676__delegate(f1,f2,f3,fs);
});
G__44676.cljs$core$IFn$_invoke$arity$variadic = G__44676__delegate;
return G__44676;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__44684 = null;
if (arguments.length > 3) {
var G__44685__i = 0, G__44685__a = new Array(arguments.length -  3);
while (G__44685__i < G__44685__a.length) {G__44685__a[G__44685__i] = arguments[G__44685__i + 3]; ++G__44685__i;}
G__44684 = new cljs.core.IndexedSeq(G__44685__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__44684);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__44770 = null;
var G__44770__0 = (function (){
var G__44728 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__44728) : f.call(null,G__44728));
});
var G__44770__1 = (function (x){
var G__44729 = arg1;
var G__44730 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__44729,G__44730) : f.call(null,G__44729,G__44730));
});
var G__44770__2 = (function (x,y){
var G__44731 = arg1;
var G__44732 = x;
var G__44733 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__44731,G__44732,G__44733) : f.call(null,G__44731,G__44732,G__44733));
});
var G__44770__3 = (function (x,y,z){
var G__44734 = arg1;
var G__44735 = x;
var G__44736 = y;
var G__44737 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__44734,G__44735,G__44736,G__44737) : f.call(null,G__44734,G__44735,G__44736,G__44737));
});
var G__44770__4 = (function() { 
var G__44771__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__44771 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__44772__i = 0, G__44772__a = new Array(arguments.length -  3);
while (G__44772__i < G__44772__a.length) {G__44772__a[G__44772__i] = arguments[G__44772__i + 3]; ++G__44772__i;}
  args = new cljs.core.IndexedSeq(G__44772__a,0);
} 
return G__44771__delegate.call(this,x,y,z,args);};
G__44771.cljs$lang$maxFixedArity = 3;
G__44771.cljs$lang$applyTo = (function (arglist__44773){
var x = cljs.core.first(arglist__44773);
arglist__44773 = cljs.core.next(arglist__44773);
var y = cljs.core.first(arglist__44773);
arglist__44773 = cljs.core.next(arglist__44773);
var z = cljs.core.first(arglist__44773);
var args = cljs.core.rest(arglist__44773);
return G__44771__delegate(x,y,z,args);
});
G__44771.cljs$core$IFn$_invoke$arity$variadic = G__44771__delegate;
return G__44771;
})()
;
G__44770 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__44770__0.call(this);
case 1:
return G__44770__1.call(this,x);
case 2:
return G__44770__2.call(this,x,y);
case 3:
return G__44770__3.call(this,x,y,z);
default:
var G__44774 = null;
if (arguments.length > 3) {
var G__44775__i = 0, G__44775__a = new Array(arguments.length -  3);
while (G__44775__i < G__44775__a.length) {G__44775__a[G__44775__i] = arguments[G__44775__i + 3]; ++G__44775__i;}
G__44774 = new cljs.core.IndexedSeq(G__44775__a,0);
}
return G__44770__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__44774);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__44770.cljs$lang$maxFixedArity = 3;
G__44770.cljs$lang$applyTo = G__44770__4.cljs$lang$applyTo;
G__44770.cljs$core$IFn$_invoke$arity$0 = G__44770__0;
G__44770.cljs$core$IFn$_invoke$arity$1 = G__44770__1;
G__44770.cljs$core$IFn$_invoke$arity$2 = G__44770__2;
G__44770.cljs$core$IFn$_invoke$arity$3 = G__44770__3;
G__44770.cljs$core$IFn$_invoke$arity$variadic = G__44770__4.cljs$core$IFn$_invoke$arity$variadic;
return G__44770;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__44776 = null;
var G__44776__0 = (function (){
var G__44738 = arg1;
var G__44739 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__44738,G__44739) : f.call(null,G__44738,G__44739));
});
var G__44776__1 = (function (x){
var G__44740 = arg1;
var G__44741 = arg2;
var G__44742 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__44740,G__44741,G__44742) : f.call(null,G__44740,G__44741,G__44742));
});
var G__44776__2 = (function (x,y){
var G__44743 = arg1;
var G__44744 = arg2;
var G__44745 = x;
var G__44746 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__44743,G__44744,G__44745,G__44746) : f.call(null,G__44743,G__44744,G__44745,G__44746));
});
var G__44776__3 = (function (x,y,z){
var G__44747 = arg1;
var G__44748 = arg2;
var G__44749 = x;
var G__44750 = y;
var G__44751 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__44747,G__44748,G__44749,G__44750,G__44751) : f.call(null,G__44747,G__44748,G__44749,G__44750,G__44751));
});
var G__44776__4 = (function() { 
var G__44777__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__44777 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__44778__i = 0, G__44778__a = new Array(arguments.length -  3);
while (G__44778__i < G__44778__a.length) {G__44778__a[G__44778__i] = arguments[G__44778__i + 3]; ++G__44778__i;}
  args = new cljs.core.IndexedSeq(G__44778__a,0);
} 
return G__44777__delegate.call(this,x,y,z,args);};
G__44777.cljs$lang$maxFixedArity = 3;
G__44777.cljs$lang$applyTo = (function (arglist__44779){
var x = cljs.core.first(arglist__44779);
arglist__44779 = cljs.core.next(arglist__44779);
var y = cljs.core.first(arglist__44779);
arglist__44779 = cljs.core.next(arglist__44779);
var z = cljs.core.first(arglist__44779);
var args = cljs.core.rest(arglist__44779);
return G__44777__delegate(x,y,z,args);
});
G__44777.cljs$core$IFn$_invoke$arity$variadic = G__44777__delegate;
return G__44777;
})()
;
G__44776 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__44776__0.call(this);
case 1:
return G__44776__1.call(this,x);
case 2:
return G__44776__2.call(this,x,y);
case 3:
return G__44776__3.call(this,x,y,z);
default:
var G__44780 = null;
if (arguments.length > 3) {
var G__44781__i = 0, G__44781__a = new Array(arguments.length -  3);
while (G__44781__i < G__44781__a.length) {G__44781__a[G__44781__i] = arguments[G__44781__i + 3]; ++G__44781__i;}
G__44780 = new cljs.core.IndexedSeq(G__44781__a,0);
}
return G__44776__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__44780);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__44776.cljs$lang$maxFixedArity = 3;
G__44776.cljs$lang$applyTo = G__44776__4.cljs$lang$applyTo;
G__44776.cljs$core$IFn$_invoke$arity$0 = G__44776__0;
G__44776.cljs$core$IFn$_invoke$arity$1 = G__44776__1;
G__44776.cljs$core$IFn$_invoke$arity$2 = G__44776__2;
G__44776.cljs$core$IFn$_invoke$arity$3 = G__44776__3;
G__44776.cljs$core$IFn$_invoke$arity$variadic = G__44776__4.cljs$core$IFn$_invoke$arity$variadic;
return G__44776;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__44782 = null;
var G__44782__0 = (function (){
var G__44752 = arg1;
var G__44753 = arg2;
var G__44754 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__44752,G__44753,G__44754) : f.call(null,G__44752,G__44753,G__44754));
});
var G__44782__1 = (function (x){
var G__44755 = arg1;
var G__44756 = arg2;
var G__44757 = arg3;
var G__44758 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__44755,G__44756,G__44757,G__44758) : f.call(null,G__44755,G__44756,G__44757,G__44758));
});
var G__44782__2 = (function (x,y){
var G__44759 = arg1;
var G__44760 = arg2;
var G__44761 = arg3;
var G__44762 = x;
var G__44763 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__44759,G__44760,G__44761,G__44762,G__44763) : f.call(null,G__44759,G__44760,G__44761,G__44762,G__44763));
});
var G__44782__3 = (function (x,y,z){
var G__44764 = arg1;
var G__44765 = arg2;
var G__44766 = arg3;
var G__44767 = x;
var G__44768 = y;
var G__44769 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__44764,G__44765,G__44766,G__44767,G__44768,G__44769) : f.call(null,G__44764,G__44765,G__44766,G__44767,G__44768,G__44769));
});
var G__44782__4 = (function() { 
var G__44783__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__44783 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__44784__i = 0, G__44784__a = new Array(arguments.length -  3);
while (G__44784__i < G__44784__a.length) {G__44784__a[G__44784__i] = arguments[G__44784__i + 3]; ++G__44784__i;}
  args = new cljs.core.IndexedSeq(G__44784__a,0);
} 
return G__44783__delegate.call(this,x,y,z,args);};
G__44783.cljs$lang$maxFixedArity = 3;
G__44783.cljs$lang$applyTo = (function (arglist__44785){
var x = cljs.core.first(arglist__44785);
arglist__44785 = cljs.core.next(arglist__44785);
var y = cljs.core.first(arglist__44785);
arglist__44785 = cljs.core.next(arglist__44785);
var z = cljs.core.first(arglist__44785);
var args = cljs.core.rest(arglist__44785);
return G__44783__delegate(x,y,z,args);
});
G__44783.cljs$core$IFn$_invoke$arity$variadic = G__44783__delegate;
return G__44783;
})()
;
G__44782 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__44782__0.call(this);
case 1:
return G__44782__1.call(this,x);
case 2:
return G__44782__2.call(this,x,y);
case 3:
return G__44782__3.call(this,x,y,z);
default:
var G__44786 = null;
if (arguments.length > 3) {
var G__44787__i = 0, G__44787__a = new Array(arguments.length -  3);
while (G__44787__i < G__44787__a.length) {G__44787__a[G__44787__i] = arguments[G__44787__i + 3]; ++G__44787__i;}
G__44786 = new cljs.core.IndexedSeq(G__44787__a,0);
}
return G__44782__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__44786);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__44782.cljs$lang$maxFixedArity = 3;
G__44782.cljs$lang$applyTo = G__44782__4.cljs$lang$applyTo;
G__44782.cljs$core$IFn$_invoke$arity$0 = G__44782__0;
G__44782.cljs$core$IFn$_invoke$arity$1 = G__44782__1;
G__44782.cljs$core$IFn$_invoke$arity$2 = G__44782__2;
G__44782.cljs$core$IFn$_invoke$arity$3 = G__44782__3;
G__44782.cljs$core$IFn$_invoke$arity$variadic = G__44782__4.cljs$core$IFn$_invoke$arity$variadic;
return G__44782;
})()
});
var partial__5 = (function() { 
var G__44788__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__44789__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__44789 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__44790__i = 0, G__44790__a = new Array(arguments.length -  0);
while (G__44790__i < G__44790__a.length) {G__44790__a[G__44790__i] = arguments[G__44790__i + 0]; ++G__44790__i;}
  args = new cljs.core.IndexedSeq(G__44790__a,0);
} 
return G__44789__delegate.call(this,args);};
G__44789.cljs$lang$maxFixedArity = 0;
G__44789.cljs$lang$applyTo = (function (arglist__44791){
var args = cljs.core.seq(arglist__44791);
return G__44789__delegate(args);
});
G__44789.cljs$core$IFn$_invoke$arity$variadic = G__44789__delegate;
return G__44789;
})()
;
};
var G__44788 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__44792__i = 0, G__44792__a = new Array(arguments.length -  4);
while (G__44792__i < G__44792__a.length) {G__44792__a[G__44792__i] = arguments[G__44792__i + 4]; ++G__44792__i;}
  more = new cljs.core.IndexedSeq(G__44792__a,0);
} 
return G__44788__delegate.call(this,f,arg1,arg2,arg3,more);};
G__44788.cljs$lang$maxFixedArity = 4;
G__44788.cljs$lang$applyTo = (function (arglist__44793){
var f = cljs.core.first(arglist__44793);
arglist__44793 = cljs.core.next(arglist__44793);
var arg1 = cljs.core.first(arglist__44793);
arglist__44793 = cljs.core.next(arglist__44793);
var arg2 = cljs.core.first(arglist__44793);
arglist__44793 = cljs.core.next(arglist__44793);
var arg3 = cljs.core.first(arglist__44793);
var more = cljs.core.rest(arglist__44793);
return G__44788__delegate(f,arg1,arg2,arg3,more);
});
G__44788.cljs$core$IFn$_invoke$arity$variadic = G__44788__delegate;
return G__44788;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__44794 = null;
if (arguments.length > 4) {
var G__44795__i = 0, G__44795__a = new Array(arguments.length -  4);
while (G__44795__i < G__44795__a.length) {G__44795__a[G__44795__i] = arguments[G__44795__i + 4]; ++G__44795__i;}
G__44794 = new cljs.core.IndexedSeq(G__44795__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__44794);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__44828 = null;
var G__44828__1 = (function (a){
var G__44812 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__44812) : f.call(null,G__44812));
});
var G__44828__2 = (function (a,b){
var G__44813 = (((a == null))?x:a);
var G__44814 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__44813,G__44814) : f.call(null,G__44813,G__44814));
});
var G__44828__3 = (function (a,b,c){
var G__44815 = (((a == null))?x:a);
var G__44816 = b;
var G__44817 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__44815,G__44816,G__44817) : f.call(null,G__44815,G__44816,G__44817));
});
var G__44828__4 = (function() { 
var G__44829__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__44829 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__44830__i = 0, G__44830__a = new Array(arguments.length -  3);
while (G__44830__i < G__44830__a.length) {G__44830__a[G__44830__i] = arguments[G__44830__i + 3]; ++G__44830__i;}
  ds = new cljs.core.IndexedSeq(G__44830__a,0);
} 
return G__44829__delegate.call(this,a,b,c,ds);};
G__44829.cljs$lang$maxFixedArity = 3;
G__44829.cljs$lang$applyTo = (function (arglist__44831){
var a = cljs.core.first(arglist__44831);
arglist__44831 = cljs.core.next(arglist__44831);
var b = cljs.core.first(arglist__44831);
arglist__44831 = cljs.core.next(arglist__44831);
var c = cljs.core.first(arglist__44831);
var ds = cljs.core.rest(arglist__44831);
return G__44829__delegate(a,b,c,ds);
});
G__44829.cljs$core$IFn$_invoke$arity$variadic = G__44829__delegate;
return G__44829;
})()
;
G__44828 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__44828__1.call(this,a);
case 2:
return G__44828__2.call(this,a,b);
case 3:
return G__44828__3.call(this,a,b,c);
default:
var G__44832 = null;
if (arguments.length > 3) {
var G__44833__i = 0, G__44833__a = new Array(arguments.length -  3);
while (G__44833__i < G__44833__a.length) {G__44833__a[G__44833__i] = arguments[G__44833__i + 3]; ++G__44833__i;}
G__44832 = new cljs.core.IndexedSeq(G__44833__a,0);
}
return G__44828__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__44832);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__44828.cljs$lang$maxFixedArity = 3;
G__44828.cljs$lang$applyTo = G__44828__4.cljs$lang$applyTo;
G__44828.cljs$core$IFn$_invoke$arity$1 = G__44828__1;
G__44828.cljs$core$IFn$_invoke$arity$2 = G__44828__2;
G__44828.cljs$core$IFn$_invoke$arity$3 = G__44828__3;
G__44828.cljs$core$IFn$_invoke$arity$variadic = G__44828__4.cljs$core$IFn$_invoke$arity$variadic;
return G__44828;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__44834 = null;
var G__44834__2 = (function (a,b){
var G__44818 = (((a == null))?x:a);
var G__44819 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__44818,G__44819) : f.call(null,G__44818,G__44819));
});
var G__44834__3 = (function (a,b,c){
var G__44820 = (((a == null))?x:a);
var G__44821 = (((b == null))?y:b);
var G__44822 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__44820,G__44821,G__44822) : f.call(null,G__44820,G__44821,G__44822));
});
var G__44834__4 = (function() { 
var G__44835__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__44835 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__44836__i = 0, G__44836__a = new Array(arguments.length -  3);
while (G__44836__i < G__44836__a.length) {G__44836__a[G__44836__i] = arguments[G__44836__i + 3]; ++G__44836__i;}
  ds = new cljs.core.IndexedSeq(G__44836__a,0);
} 
return G__44835__delegate.call(this,a,b,c,ds);};
G__44835.cljs$lang$maxFixedArity = 3;
G__44835.cljs$lang$applyTo = (function (arglist__44837){
var a = cljs.core.first(arglist__44837);
arglist__44837 = cljs.core.next(arglist__44837);
var b = cljs.core.first(arglist__44837);
arglist__44837 = cljs.core.next(arglist__44837);
var c = cljs.core.first(arglist__44837);
var ds = cljs.core.rest(arglist__44837);
return G__44835__delegate(a,b,c,ds);
});
G__44835.cljs$core$IFn$_invoke$arity$variadic = G__44835__delegate;
return G__44835;
})()
;
G__44834 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__44834__2.call(this,a,b);
case 3:
return G__44834__3.call(this,a,b,c);
default:
var G__44838 = null;
if (arguments.length > 3) {
var G__44839__i = 0, G__44839__a = new Array(arguments.length -  3);
while (G__44839__i < G__44839__a.length) {G__44839__a[G__44839__i] = arguments[G__44839__i + 3]; ++G__44839__i;}
G__44838 = new cljs.core.IndexedSeq(G__44839__a,0);
}
return G__44834__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__44838);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__44834.cljs$lang$maxFixedArity = 3;
G__44834.cljs$lang$applyTo = G__44834__4.cljs$lang$applyTo;
G__44834.cljs$core$IFn$_invoke$arity$2 = G__44834__2;
G__44834.cljs$core$IFn$_invoke$arity$3 = G__44834__3;
G__44834.cljs$core$IFn$_invoke$arity$variadic = G__44834__4.cljs$core$IFn$_invoke$arity$variadic;
return G__44834;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__44840 = null;
var G__44840__2 = (function (a,b){
var G__44823 = (((a == null))?x:a);
var G__44824 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__44823,G__44824) : f.call(null,G__44823,G__44824));
});
var G__44840__3 = (function (a,b,c){
var G__44825 = (((a == null))?x:a);
var G__44826 = (((b == null))?y:b);
var G__44827 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__44825,G__44826,G__44827) : f.call(null,G__44825,G__44826,G__44827));
});
var G__44840__4 = (function() { 
var G__44841__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__44841 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__44842__i = 0, G__44842__a = new Array(arguments.length -  3);
while (G__44842__i < G__44842__a.length) {G__44842__a[G__44842__i] = arguments[G__44842__i + 3]; ++G__44842__i;}
  ds = new cljs.core.IndexedSeq(G__44842__a,0);
} 
return G__44841__delegate.call(this,a,b,c,ds);};
G__44841.cljs$lang$maxFixedArity = 3;
G__44841.cljs$lang$applyTo = (function (arglist__44843){
var a = cljs.core.first(arglist__44843);
arglist__44843 = cljs.core.next(arglist__44843);
var b = cljs.core.first(arglist__44843);
arglist__44843 = cljs.core.next(arglist__44843);
var c = cljs.core.first(arglist__44843);
var ds = cljs.core.rest(arglist__44843);
return G__44841__delegate(a,b,c,ds);
});
G__44841.cljs$core$IFn$_invoke$arity$variadic = G__44841__delegate;
return G__44841;
})()
;
G__44840 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__44840__2.call(this,a,b);
case 3:
return G__44840__3.call(this,a,b,c);
default:
var G__44844 = null;
if (arguments.length > 3) {
var G__44845__i = 0, G__44845__a = new Array(arguments.length -  3);
while (G__44845__i < G__44845__a.length) {G__44845__a[G__44845__i] = arguments[G__44845__i + 3]; ++G__44845__i;}
G__44844 = new cljs.core.IndexedSeq(G__44845__a,0);
}
return G__44840__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__44844);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__44840.cljs$lang$maxFixedArity = 3;
G__44840.cljs$lang$applyTo = G__44840__4.cljs$lang$applyTo;
G__44840.cljs$core$IFn$_invoke$arity$2 = G__44840__2;
G__44840.cljs$core$IFn$_invoke$arity$3 = G__44840__3;
G__44840.cljs$core$IFn$_invoke$arity$variadic = G__44840__4.cljs$core$IFn$_invoke$arity$variadic;
return G__44840;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__44876 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__44876) : cljs.core.volatile_BANG_.call(null,G__44876));
})();
return ((function (i){
return (function() {
var G__44906 = null;
var G__44906__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__44906__1 = (function (result){
var G__44877 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__44877) : rf.call(null,G__44877));
});
var G__44906__2 = (function (result,input){
var G__44878 = result;
var G__44879 = (function (){var G__44880 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__44881 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__44880,G__44881) : f.call(null,G__44880,G__44881));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__44878,G__44879) : rf.call(null,G__44878,G__44879));
});
G__44906 = function(result,input){
switch(arguments.length){
case 0:
return G__44906__0.call(this);
case 1:
return G__44906__1.call(this,result);
case 2:
return G__44906__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__44906.cljs$core$IFn$_invoke$arity$0 = G__44906__0;
G__44906.cljs$core$IFn$_invoke$arity$1 = G__44906__1;
G__44906.cljs$core$IFn$_invoke$arity$2 = G__44906__2;
return G__44906;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__32824__auto___44907 = size;
var i_44908 = (0);
while(true){
if((i_44908 < n__32824__auto___44907)){
cljs.core.chunk_append(b,(function (){var G__44902 = (idx + i_44908);
var G__44903 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_44908);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__44902,G__44903) : f.call(null,G__44902,G__44903));
})());

var G__44909 = (i_44908 + (1));
i_44908 = G__44909;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__44904 = idx;
var G__44905 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__44904,G__44905) : f.call(null,G__44904,G__44905));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__44928 = null;
var G__44928__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__44928__1 = (function (result){
var G__44922 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__44922) : rf.call(null,G__44922));
});
var G__44928__2 = (function (result,input){
var v = (function (){var G__44923 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__44923) : f.call(null,G__44923));
})();
if((v == null)){
return result;
} else {
var G__44924 = result;
var G__44925 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__44924,G__44925) : rf.call(null,G__44924,G__44925));
}
});
G__44928 = function(result,input){
switch(arguments.length){
case 0:
return G__44928__0.call(this);
case 1:
return G__44928__1.call(this,result);
case 2:
return G__44928__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__44928.cljs$core$IFn$_invoke$arity$0 = G__44928__0;
G__44928.cljs$core$IFn$_invoke$arity$1 = G__44928__1;
G__44928.cljs$core$IFn$_invoke$arity$2 = G__44928__2;
return G__44928;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__32824__auto___44929 = size;
var i_44930 = (0);
while(true){
if((i_44930 < n__32824__auto___44929)){
var x_44931 = (function (){var G__44926 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_44930);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__44926) : f.call(null,G__44926));
})();
if((x_44931 == null)){
} else {
cljs.core.chunk_append(b,x_44931);
}

var G__44932 = (i_44930 + (1));
i_44930 = G__44932;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__44927 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__44927) : f.call(null,G__44927));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__44933 = this$__$1;
return goog.getUid(G__44933);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__44934 = cljs.core.seq(self__.watches);
var chunk__44935 = null;
var count__44936 = (0);
var i__44937 = (0);
while(true){
if((i__44937 < count__44936)){
var vec__44938 = chunk__44935.cljs$core$IIndexed$_nth$arity$2(null,i__44937);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__44938,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__44938,(1),null);
var G__44939_44948 = key;
var G__44940_44949 = this$__$1;
var G__44941_44950 = oldval;
var G__44942_44951 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__44939_44948,G__44940_44949,G__44941_44950,G__44942_44951) : f.call(null,G__44939_44948,G__44940_44949,G__44941_44950,G__44942_44951));

var G__44952 = seq__44934;
var G__44953 = chunk__44935;
var G__44954 = count__44936;
var G__44955 = (i__44937 + (1));
seq__44934 = G__44952;
chunk__44935 = G__44953;
count__44936 = G__44954;
i__44937 = G__44955;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__44934);
if(temp__4126__auto__){
var seq__44934__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__44934__$1)){
var c__32724__auto__ = cljs.core.chunk_first(seq__44934__$1);
var G__44956 = cljs.core.chunk_rest(seq__44934__$1);
var G__44957 = c__32724__auto__;
var G__44958 = cljs.core.count(c__32724__auto__);
var G__44959 = (0);
seq__44934 = G__44956;
chunk__44935 = G__44957;
count__44936 = G__44958;
i__44937 = G__44959;
continue;
} else {
var vec__44943 = cljs.core.first(seq__44934__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__44943,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__44943,(1),null);
var G__44944_44960 = key;
var G__44945_44961 = this$__$1;
var G__44946_44962 = oldval;
var G__44947_44963 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__44944_44960,G__44945_44961,G__44946_44962,G__44947_44963) : f.call(null,G__44944_44960,G__44945_44961,G__44946_44962,G__44947_44963));

var G__44964 = cljs.core.next(seq__44934__$1);
var G__44965 = null;
var G__44966 = (0);
var G__44967 = (0);
seq__44934 = G__44964;
chunk__44935 = G__44965;
count__44936 = G__44966;
i__44937 = G__44967;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__32524__auto__,writer__32525__auto__,opt__32526__auto__){
return cljs.core._write(writer__32525__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__44971__delegate = function (x,p__44968){
var map__44970 = p__44968;
var map__44970__$1 = ((cljs.core.seq_QMARK_(map__44970))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__44970):map__44970);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__44970__$1,cljs.core.constant$keyword$8);
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__44970__$1,cljs.core.constant$keyword$3);
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__44971 = function (x,var_args){
var p__44968 = null;
if (arguments.length > 1) {
var G__44972__i = 0, G__44972__a = new Array(arguments.length -  1);
while (G__44972__i < G__44972__a.length) {G__44972__a[G__44972__i] = arguments[G__44972__i + 1]; ++G__44972__i;}
  p__44968 = new cljs.core.IndexedSeq(G__44972__a,0);
} 
return G__44971__delegate.call(this,x,p__44968);};
G__44971.cljs$lang$maxFixedArity = 1;
G__44971.cljs$lang$applyTo = (function (arglist__44973){
var x = cljs.core.first(arglist__44973);
var p__44968 = cljs.core.rest(arglist__44973);
return G__44971__delegate(x,p__44968);
});
G__44971.cljs$core$IFn$_invoke$arity$variadic = G__44971__delegate;
return G__44971;
})()
;
atom = function(x,var_args){
var p__44968 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__44974 = null;
if (arguments.length > 1) {
var G__44975__i = 0, G__44975__a = new Array(arguments.length -  1);
while (G__44975__i < G__44975__a.length) {G__44975__a[G__44975__i] = arguments[G__44975__i + 1]; ++G__44975__i;}
G__44974 = new cljs.core.IndexedSeq(G__44975__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__44974);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__44978 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__44978) : validate.call(null,G__44978));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__44979 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__44979) : cljs.core.pr_str.call(null,G__44979));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__44986 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__44986) : f.call(null,G__44986));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__44987 = a.state;
var G__44988 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__44987,G__44988) : f.call(null,G__44987,G__44988));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__44989 = a.state;
var G__44990 = x;
var G__44991 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__44989,G__44990,G__44991) : f.call(null,G__44989,G__44990,G__44991));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__44992__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__44992 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__44993__i = 0, G__44993__a = new Array(arguments.length -  4);
while (G__44993__i < G__44993__a.length) {G__44993__a[G__44993__i] = arguments[G__44993__i + 4]; ++G__44993__i;}
  more = new cljs.core.IndexedSeq(G__44993__a,0);
} 
return G__44992__delegate.call(this,a,f,x,y,more);};
G__44992.cljs$lang$maxFixedArity = 4;
G__44992.cljs$lang$applyTo = (function (arglist__44994){
var a = cljs.core.first(arglist__44994);
arglist__44994 = cljs.core.next(arglist__44994);
var f = cljs.core.first(arglist__44994);
arglist__44994 = cljs.core.next(arglist__44994);
var x = cljs.core.first(arglist__44994);
arglist__44994 = cljs.core.next(arglist__44994);
var y = cljs.core.first(arglist__44994);
var more = cljs.core.rest(arglist__44994);
return G__44992__delegate(a,f,x,y,more);
});
G__44992.cljs$core$IFn$_invoke$arity$variadic = G__44992__delegate;
return G__44992;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__44995 = null;
if (arguments.length > 4) {
var G__44996__i = 0, G__44996__a = new Array(arguments.length -  4);
while (G__44996__i < G__44996__a.length) {G__44996__a[G__44996__i] = arguments[G__44996__i + 4]; ++G__44996__i;}
G__44995 = new cljs.core.IndexedSeq(G__44996__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__44995);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__32524__auto__,writer__32525__auto__,opt__32526__auto__){
return cljs.core._write(writer__32525__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__45063 = null;
var G__45063__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__45063__1 = (function (result){
var G__45030 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__45030) : rf.call(null,G__45030));
});
var G__45063__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__45031 = i;
var G__45032 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__45031,G__45032) : f.call(null,G__45031,G__45032));
})();
if((v == null)){
return result;
} else {
var G__45033 = result;
var G__45034 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__45033,G__45034) : rf.call(null,G__45033,G__45034));
}
});
G__45063 = function(result,input){
switch(arguments.length){
case 0:
return G__45063__0.call(this);
case 1:
return G__45063__1.call(this,result);
case 2:
return G__45063__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__45063.cljs$core$IFn$_invoke$arity$0 = G__45063__0;
G__45063.cljs$core$IFn$_invoke$arity$1 = G__45063__1;
G__45063.cljs$core$IFn$_invoke$arity$2 = G__45063__2;
return G__45063;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__32824__auto___45064 = size;
var i_45065 = (0);
while(true){
if((i_45065 < n__32824__auto___45064)){
var x_45066 = (function (){var G__45059 = (idx + i_45065);
var G__45060 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_45065);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__45059,G__45060) : f.call(null,G__45059,G__45060));
})();
if((x_45066 == null)){
} else {
cljs.core.chunk_append(b,x_45066);
}

var G__45067 = (i_45065 + (1));
i_45065 = G__45067;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__45061 = idx;
var G__45062 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__45061,G__45062) : f.call(null,G__45061,G__45062));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__45281 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__45281) : p.call(null,G__45281));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__31925__auto__ = (function (){var G__45283 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__45283) : p.call(null,G__45283));
})();
if(cljs.core.truth_(and__31925__auto__)){
var G__45284 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__45284) : p.call(null,G__45284));
} else {
return and__31925__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__31925__auto__ = (function (){var G__45286 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__45286) : p.call(null,G__45286));
})();
if(cljs.core.truth_(and__31925__auto__)){
var and__31925__auto____$1 = (function (){var G__45288 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__45288) : p.call(null,G__45288));
})();
if(cljs.core.truth_(and__31925__auto____$1)){
var G__45289 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__45289) : p.call(null,G__45289));
} else {
return and__31925__auto____$1;
}
} else {
return and__31925__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__45458__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__45458 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__45459__i = 0, G__45459__a = new Array(arguments.length -  3);
while (G__45459__i < G__45459__a.length) {G__45459__a[G__45459__i] = arguments[G__45459__i + 3]; ++G__45459__i;}
  args = new cljs.core.IndexedSeq(G__45459__a,0);
} 
return G__45458__delegate.call(this,x,y,z,args);};
G__45458.cljs$lang$maxFixedArity = 3;
G__45458.cljs$lang$applyTo = (function (arglist__45460){
var x = cljs.core.first(arglist__45460);
arglist__45460 = cljs.core.next(arglist__45460);
var y = cljs.core.first(arglist__45460);
arglist__45460 = cljs.core.next(arglist__45460);
var z = cljs.core.first(arglist__45460);
var args = cljs.core.rest(arglist__45460);
return G__45458__delegate(x,y,z,args);
});
G__45458.cljs$core$IFn$_invoke$arity$variadic = G__45458__delegate;
return G__45458;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__45461 = null;
if (arguments.length > 3) {
var G__45462__i = 0, G__45462__a = new Array(arguments.length -  3);
while (G__45462__i < G__45462__a.length) {G__45462__a[G__45462__i] = arguments[G__45462__i + 3]; ++G__45462__i;}
G__45461 = new cljs.core.IndexedSeq(G__45462__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__45461);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__31925__auto__ = (function (){var G__45321 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__45321) : p1.call(null,G__45321));
})();
if(cljs.core.truth_(and__31925__auto__)){
var G__45322 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__45322) : p2.call(null,G__45322));
} else {
return and__31925__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__31925__auto__ = (function (){var G__45324 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__45324) : p1.call(null,G__45324));
})();
if(cljs.core.truth_(and__31925__auto__)){
var and__31925__auto____$1 = (function (){var G__45326 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__45326) : p1.call(null,G__45326));
})();
if(cljs.core.truth_(and__31925__auto____$1)){
var and__31925__auto____$2 = (function (){var G__45328 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__45328) : p2.call(null,G__45328));
})();
if(cljs.core.truth_(and__31925__auto____$2)){
var G__45329 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__45329) : p2.call(null,G__45329));
} else {
return and__31925__auto____$2;
}
} else {
return and__31925__auto____$1;
}
} else {
return and__31925__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__31925__auto__ = (function (){var G__45331 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__45331) : p1.call(null,G__45331));
})();
if(cljs.core.truth_(and__31925__auto__)){
var and__31925__auto____$1 = (function (){var G__45333 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__45333) : p1.call(null,G__45333));
})();
if(cljs.core.truth_(and__31925__auto____$1)){
var and__31925__auto____$2 = (function (){var G__45335 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__45335) : p1.call(null,G__45335));
})();
if(cljs.core.truth_(and__31925__auto____$2)){
var and__31925__auto____$3 = (function (){var G__45337 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__45337) : p2.call(null,G__45337));
})();
if(cljs.core.truth_(and__31925__auto____$3)){
var and__31925__auto____$4 = (function (){var G__45339 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__45339) : p2.call(null,G__45339));
})();
if(cljs.core.truth_(and__31925__auto____$4)){
var G__45340 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__45340) : p2.call(null,G__45340));
} else {
return and__31925__auto____$4;
}
} else {
return and__31925__auto____$3;
}
} else {
return and__31925__auto____$2;
}
} else {
return and__31925__auto____$1;
}
} else {
return and__31925__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__45463__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__45068_SHARP_){
var and__31925__auto__ = (function (){var G__45345 = p1__45068_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__45345) : p1.call(null,G__45345));
})();
if(cljs.core.truth_(and__31925__auto__)){
var G__45346 = p1__45068_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__45346) : p2.call(null,G__45346));
} else {
return and__31925__auto__;
}
}),args)));
};
var G__45463 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__45464__i = 0, G__45464__a = new Array(arguments.length -  3);
while (G__45464__i < G__45464__a.length) {G__45464__a[G__45464__i] = arguments[G__45464__i + 3]; ++G__45464__i;}
  args = new cljs.core.IndexedSeq(G__45464__a,0);
} 
return G__45463__delegate.call(this,x,y,z,args);};
G__45463.cljs$lang$maxFixedArity = 3;
G__45463.cljs$lang$applyTo = (function (arglist__45465){
var x = cljs.core.first(arglist__45465);
arglist__45465 = cljs.core.next(arglist__45465);
var y = cljs.core.first(arglist__45465);
arglist__45465 = cljs.core.next(arglist__45465);
var z = cljs.core.first(arglist__45465);
var args = cljs.core.rest(arglist__45465);
return G__45463__delegate(x,y,z,args);
});
G__45463.cljs$core$IFn$_invoke$arity$variadic = G__45463__delegate;
return G__45463;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__45466 = null;
if (arguments.length > 3) {
var G__45467__i = 0, G__45467__a = new Array(arguments.length -  3);
while (G__45467__i < G__45467__a.length) {G__45467__a[G__45467__i] = arguments[G__45467__i + 3]; ++G__45467__i;}
G__45466 = new cljs.core.IndexedSeq(G__45467__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__45466);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__31925__auto__ = (function (){var G__45392 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__45392) : p1.call(null,G__45392));
})();
if(cljs.core.truth_(and__31925__auto__)){
var and__31925__auto____$1 = (function (){var G__45394 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__45394) : p2.call(null,G__45394));
})();
if(cljs.core.truth_(and__31925__auto____$1)){
var G__45395 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__45395) : p3.call(null,G__45395));
} else {
return and__31925__auto____$1;
}
} else {
return and__31925__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__31925__auto__ = (function (){var G__45397 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__45397) : p1.call(null,G__45397));
})();
if(cljs.core.truth_(and__31925__auto__)){
var and__31925__auto____$1 = (function (){var G__45399 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__45399) : p2.call(null,G__45399));
})();
if(cljs.core.truth_(and__31925__auto____$1)){
var and__31925__auto____$2 = (function (){var G__45401 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__45401) : p3.call(null,G__45401));
})();
if(cljs.core.truth_(and__31925__auto____$2)){
var and__31925__auto____$3 = (function (){var G__45403 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__45403) : p1.call(null,G__45403));
})();
if(cljs.core.truth_(and__31925__auto____$3)){
var and__31925__auto____$4 = (function (){var G__45405 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__45405) : p2.call(null,G__45405));
})();
if(cljs.core.truth_(and__31925__auto____$4)){
var G__45406 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__45406) : p3.call(null,G__45406));
} else {
return and__31925__auto____$4;
}
} else {
return and__31925__auto____$3;
}
} else {
return and__31925__auto____$2;
}
} else {
return and__31925__auto____$1;
}
} else {
return and__31925__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__31925__auto__ = (function (){var G__45408 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__45408) : p1.call(null,G__45408));
})();
if(cljs.core.truth_(and__31925__auto__)){
var and__31925__auto____$1 = (function (){var G__45410 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__45410) : p2.call(null,G__45410));
})();
if(cljs.core.truth_(and__31925__auto____$1)){
var and__31925__auto____$2 = (function (){var G__45412 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__45412) : p3.call(null,G__45412));
})();
if(cljs.core.truth_(and__31925__auto____$2)){
var and__31925__auto____$3 = (function (){var G__45414 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__45414) : p1.call(null,G__45414));
})();
if(cljs.core.truth_(and__31925__auto____$3)){
var and__31925__auto____$4 = (function (){var G__45416 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__45416) : p2.call(null,G__45416));
})();
if(cljs.core.truth_(and__31925__auto____$4)){
var and__31925__auto____$5 = (function (){var G__45418 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__45418) : p3.call(null,G__45418));
})();
if(cljs.core.truth_(and__31925__auto____$5)){
var and__31925__auto____$6 = (function (){var G__45420 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__45420) : p1.call(null,G__45420));
})();
if(cljs.core.truth_(and__31925__auto____$6)){
var and__31925__auto____$7 = (function (){var G__45422 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__45422) : p2.call(null,G__45422));
})();
if(cljs.core.truth_(and__31925__auto____$7)){
var G__45423 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__45423) : p3.call(null,G__45423));
} else {
return and__31925__auto____$7;
}
} else {
return and__31925__auto____$6;
}
} else {
return and__31925__auto____$5;
}
} else {
return and__31925__auto____$4;
}
} else {
return and__31925__auto____$3;
}
} else {
return and__31925__auto____$2;
}
} else {
return and__31925__auto____$1;
}
} else {
return and__31925__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__45468__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__45069_SHARP_){
var and__31925__auto__ = (function (){var G__45430 = p1__45069_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__45430) : p1.call(null,G__45430));
})();
if(cljs.core.truth_(and__31925__auto__)){
var and__31925__auto____$1 = (function (){var G__45432 = p1__45069_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__45432) : p2.call(null,G__45432));
})();
if(cljs.core.truth_(and__31925__auto____$1)){
var G__45433 = p1__45069_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__45433) : p3.call(null,G__45433));
} else {
return and__31925__auto____$1;
}
} else {
return and__31925__auto__;
}
}),args)));
};
var G__45468 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__45469__i = 0, G__45469__a = new Array(arguments.length -  3);
while (G__45469__i < G__45469__a.length) {G__45469__a[G__45469__i] = arguments[G__45469__i + 3]; ++G__45469__i;}
  args = new cljs.core.IndexedSeq(G__45469__a,0);
} 
return G__45468__delegate.call(this,x,y,z,args);};
G__45468.cljs$lang$maxFixedArity = 3;
G__45468.cljs$lang$applyTo = (function (arglist__45470){
var x = cljs.core.first(arglist__45470);
arglist__45470 = cljs.core.next(arglist__45470);
var y = cljs.core.first(arglist__45470);
arglist__45470 = cljs.core.next(arglist__45470);
var z = cljs.core.first(arglist__45470);
var args = cljs.core.rest(arglist__45470);
return G__45468__delegate(x,y,z,args);
});
G__45468.cljs$core$IFn$_invoke$arity$variadic = G__45468__delegate;
return G__45468;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__45471 = null;
if (arguments.length > 3) {
var G__45472__i = 0, G__45472__a = new Array(arguments.length -  3);
while (G__45472__i < G__45472__a.length) {G__45472__a[G__45472__i] = arguments[G__45472__i + 3]; ++G__45472__i;}
G__45471 = new cljs.core.IndexedSeq(G__45472__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__45471);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__45473__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__45070_SHARP_){
var G__45449 = x;
return (p1__45070_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__45070_SHARP_.cljs$core$IFn$_invoke$arity$1(G__45449) : p1__45070_SHARP_.call(null,G__45449));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__45071_SHARP_){
var and__31925__auto__ = (function (){var G__45451 = x;
return (p1__45071_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__45071_SHARP_.cljs$core$IFn$_invoke$arity$1(G__45451) : p1__45071_SHARP_.call(null,G__45451));
})();
if(cljs.core.truth_(and__31925__auto__)){
var G__45452 = y;
return (p1__45071_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__45071_SHARP_.cljs$core$IFn$_invoke$arity$1(G__45452) : p1__45071_SHARP_.call(null,G__45452));
} else {
return and__31925__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__45072_SHARP_){
var and__31925__auto__ = (function (){var G__45454 = x;
return (p1__45072_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__45072_SHARP_.cljs$core$IFn$_invoke$arity$1(G__45454) : p1__45072_SHARP_.call(null,G__45454));
})();
if(cljs.core.truth_(and__31925__auto__)){
var and__31925__auto____$1 = (function (){var G__45456 = y;
return (p1__45072_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__45072_SHARP_.cljs$core$IFn$_invoke$arity$1(G__45456) : p1__45072_SHARP_.call(null,G__45456));
})();
if(cljs.core.truth_(and__31925__auto____$1)){
var G__45457 = z;
return (p1__45072_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__45072_SHARP_.cljs$core$IFn$_invoke$arity$1(G__45457) : p1__45072_SHARP_.call(null,G__45457));
} else {
return and__31925__auto____$1;
}
} else {
return and__31925__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__45474__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__45073_SHARP_){
return cljs.core.every_QMARK_(p1__45073_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__45474 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__45475__i = 0, G__45475__a = new Array(arguments.length -  3);
while (G__45475__i < G__45475__a.length) {G__45475__a[G__45475__i] = arguments[G__45475__i + 3]; ++G__45475__i;}
  args = new cljs.core.IndexedSeq(G__45475__a,0);
} 
return G__45474__delegate.call(this,x,y,z,args);};
G__45474.cljs$lang$maxFixedArity = 3;
G__45474.cljs$lang$applyTo = (function (arglist__45476){
var x = cljs.core.first(arglist__45476);
arglist__45476 = cljs.core.next(arglist__45476);
var y = cljs.core.first(arglist__45476);
arglist__45476 = cljs.core.next(arglist__45476);
var z = cljs.core.first(arglist__45476);
var args = cljs.core.rest(arglist__45476);
return G__45474__delegate(x,y,z,args);
});
G__45474.cljs$core$IFn$_invoke$arity$variadic = G__45474__delegate;
return G__45474;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__45477 = null;
if (arguments.length > 3) {
var G__45478__i = 0, G__45478__a = new Array(arguments.length -  3);
while (G__45478__i < G__45478__a.length) {G__45478__a[G__45478__i] = arguments[G__45478__i + 3]; ++G__45478__i;}
G__45477 = new cljs.core.IndexedSeq(G__45478__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__45477);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__45473 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__45479__i = 0, G__45479__a = new Array(arguments.length -  3);
while (G__45479__i < G__45479__a.length) {G__45479__a[G__45479__i] = arguments[G__45479__i + 3]; ++G__45479__i;}
  ps = new cljs.core.IndexedSeq(G__45479__a,0);
} 
return G__45473__delegate.call(this,p1,p2,p3,ps);};
G__45473.cljs$lang$maxFixedArity = 3;
G__45473.cljs$lang$applyTo = (function (arglist__45480){
var p1 = cljs.core.first(arglist__45480);
arglist__45480 = cljs.core.next(arglist__45480);
var p2 = cljs.core.first(arglist__45480);
arglist__45480 = cljs.core.next(arglist__45480);
var p3 = cljs.core.first(arglist__45480);
var ps = cljs.core.rest(arglist__45480);
return G__45473__delegate(p1,p2,p3,ps);
});
G__45473.cljs$core$IFn$_invoke$arity$variadic = G__45473__delegate;
return G__45473;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__45481 = null;
if (arguments.length > 3) {
var G__45482__i = 0, G__45482__a = new Array(arguments.length -  3);
while (G__45482__i < G__45482__a.length) {G__45482__a[G__45482__i] = arguments[G__45482__i + 3]; ++G__45482__i;}
G__45481 = new cljs.core.IndexedSeq(G__45482__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__45481);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__45688 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__45688) : p.call(null,G__45688));
});
var sp1__2 = (function (x,y){
var or__31937__auto__ = (function (){var G__45690 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__45690) : p.call(null,G__45690));
})();
if(cljs.core.truth_(or__31937__auto__)){
return or__31937__auto__;
} else {
var G__45691 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__45691) : p.call(null,G__45691));
}
});
var sp1__3 = (function (x,y,z){
var or__31937__auto__ = (function (){var G__45693 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__45693) : p.call(null,G__45693));
})();
if(cljs.core.truth_(or__31937__auto__)){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (function (){var G__45695 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__45695) : p.call(null,G__45695));
})();
if(cljs.core.truth_(or__31937__auto____$1)){
return or__31937__auto____$1;
} else {
var G__45696 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__45696) : p.call(null,G__45696));
}
}
});
var sp1__4 = (function() { 
var G__45857__delegate = function (x,y,z,args){
var or__31937__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__31937__auto__)){
return or__31937__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__45857 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__45858__i = 0, G__45858__a = new Array(arguments.length -  3);
while (G__45858__i < G__45858__a.length) {G__45858__a[G__45858__i] = arguments[G__45858__i + 3]; ++G__45858__i;}
  args = new cljs.core.IndexedSeq(G__45858__a,0);
} 
return G__45857__delegate.call(this,x,y,z,args);};
G__45857.cljs$lang$maxFixedArity = 3;
G__45857.cljs$lang$applyTo = (function (arglist__45859){
var x = cljs.core.first(arglist__45859);
arglist__45859 = cljs.core.next(arglist__45859);
var y = cljs.core.first(arglist__45859);
arglist__45859 = cljs.core.next(arglist__45859);
var z = cljs.core.first(arglist__45859);
var args = cljs.core.rest(arglist__45859);
return G__45857__delegate(x,y,z,args);
});
G__45857.cljs$core$IFn$_invoke$arity$variadic = G__45857__delegate;
return G__45857;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__45860 = null;
if (arguments.length > 3) {
var G__45861__i = 0, G__45861__a = new Array(arguments.length -  3);
while (G__45861__i < G__45861__a.length) {G__45861__a[G__45861__i] = arguments[G__45861__i + 3]; ++G__45861__i;}
G__45860 = new cljs.core.IndexedSeq(G__45861__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__45860);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__31937__auto__ = (function (){var G__45728 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__45728) : p1.call(null,G__45728));
})();
if(cljs.core.truth_(or__31937__auto__)){
return or__31937__auto__;
} else {
var G__45729 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__45729) : p2.call(null,G__45729));
}
});
var sp2__2 = (function (x,y){
var or__31937__auto__ = (function (){var G__45731 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__45731) : p1.call(null,G__45731));
})();
if(cljs.core.truth_(or__31937__auto__)){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (function (){var G__45733 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__45733) : p1.call(null,G__45733));
})();
if(cljs.core.truth_(or__31937__auto____$1)){
return or__31937__auto____$1;
} else {
var or__31937__auto____$2 = (function (){var G__45735 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__45735) : p2.call(null,G__45735));
})();
if(cljs.core.truth_(or__31937__auto____$2)){
return or__31937__auto____$2;
} else {
var G__45736 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__45736) : p2.call(null,G__45736));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__31937__auto__ = (function (){var G__45738 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__45738) : p1.call(null,G__45738));
})();
if(cljs.core.truth_(or__31937__auto__)){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (function (){var G__45740 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__45740) : p1.call(null,G__45740));
})();
if(cljs.core.truth_(or__31937__auto____$1)){
return or__31937__auto____$1;
} else {
var or__31937__auto____$2 = (function (){var G__45742 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__45742) : p1.call(null,G__45742));
})();
if(cljs.core.truth_(or__31937__auto____$2)){
return or__31937__auto____$2;
} else {
var or__31937__auto____$3 = (function (){var G__45744 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__45744) : p2.call(null,G__45744));
})();
if(cljs.core.truth_(or__31937__auto____$3)){
return or__31937__auto____$3;
} else {
var or__31937__auto____$4 = (function (){var G__45746 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__45746) : p2.call(null,G__45746));
})();
if(cljs.core.truth_(or__31937__auto____$4)){
return or__31937__auto____$4;
} else {
var G__45747 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__45747) : p2.call(null,G__45747));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__45862__delegate = function (x,y,z,args){
var or__31937__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__31937__auto__)){
return or__31937__auto__;
} else {
return cljs.core.some(((function (or__31937__auto__){
return (function (p1__45483_SHARP_){
var or__31937__auto____$1 = (function (){var G__45749 = p1__45483_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__45749) : p1.call(null,G__45749));
})();
if(cljs.core.truth_(or__31937__auto____$1)){
return or__31937__auto____$1;
} else {
var G__45750 = p1__45483_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__45750) : p2.call(null,G__45750));
}
});})(or__31937__auto__))
,args);
}
};
var G__45862 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__45863__i = 0, G__45863__a = new Array(arguments.length -  3);
while (G__45863__i < G__45863__a.length) {G__45863__a[G__45863__i] = arguments[G__45863__i + 3]; ++G__45863__i;}
  args = new cljs.core.IndexedSeq(G__45863__a,0);
} 
return G__45862__delegate.call(this,x,y,z,args);};
G__45862.cljs$lang$maxFixedArity = 3;
G__45862.cljs$lang$applyTo = (function (arglist__45864){
var x = cljs.core.first(arglist__45864);
arglist__45864 = cljs.core.next(arglist__45864);
var y = cljs.core.first(arglist__45864);
arglist__45864 = cljs.core.next(arglist__45864);
var z = cljs.core.first(arglist__45864);
var args = cljs.core.rest(arglist__45864);
return G__45862__delegate(x,y,z,args);
});
G__45862.cljs$core$IFn$_invoke$arity$variadic = G__45862__delegate;
return G__45862;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__45865 = null;
if (arguments.length > 3) {
var G__45866__i = 0, G__45866__a = new Array(arguments.length -  3);
while (G__45866__i < G__45866__a.length) {G__45866__a[G__45866__i] = arguments[G__45866__i + 3]; ++G__45866__i;}
G__45865 = new cljs.core.IndexedSeq(G__45866__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__45865);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__31937__auto__ = (function (){var G__45796 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__45796) : p1.call(null,G__45796));
})();
if(cljs.core.truth_(or__31937__auto__)){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (function (){var G__45798 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__45798) : p2.call(null,G__45798));
})();
if(cljs.core.truth_(or__31937__auto____$1)){
return or__31937__auto____$1;
} else {
var G__45799 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__45799) : p3.call(null,G__45799));
}
}
});
var sp3__2 = (function (x,y){
var or__31937__auto__ = (function (){var G__45801 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__45801) : p1.call(null,G__45801));
})();
if(cljs.core.truth_(or__31937__auto__)){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (function (){var G__45803 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__45803) : p2.call(null,G__45803));
})();
if(cljs.core.truth_(or__31937__auto____$1)){
return or__31937__auto____$1;
} else {
var or__31937__auto____$2 = (function (){var G__45805 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__45805) : p3.call(null,G__45805));
})();
if(cljs.core.truth_(or__31937__auto____$2)){
return or__31937__auto____$2;
} else {
var or__31937__auto____$3 = (function (){var G__45807 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__45807) : p1.call(null,G__45807));
})();
if(cljs.core.truth_(or__31937__auto____$3)){
return or__31937__auto____$3;
} else {
var or__31937__auto____$4 = (function (){var G__45809 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__45809) : p2.call(null,G__45809));
})();
if(cljs.core.truth_(or__31937__auto____$4)){
return or__31937__auto____$4;
} else {
var G__45810 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__45810) : p3.call(null,G__45810));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__31937__auto__ = (function (){var G__45812 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__45812) : p1.call(null,G__45812));
})();
if(cljs.core.truth_(or__31937__auto__)){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (function (){var G__45814 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__45814) : p2.call(null,G__45814));
})();
if(cljs.core.truth_(or__31937__auto____$1)){
return or__31937__auto____$1;
} else {
var or__31937__auto____$2 = (function (){var G__45816 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__45816) : p3.call(null,G__45816));
})();
if(cljs.core.truth_(or__31937__auto____$2)){
return or__31937__auto____$2;
} else {
var or__31937__auto____$3 = (function (){var G__45818 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__45818) : p1.call(null,G__45818));
})();
if(cljs.core.truth_(or__31937__auto____$3)){
return or__31937__auto____$3;
} else {
var or__31937__auto____$4 = (function (){var G__45820 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__45820) : p2.call(null,G__45820));
})();
if(cljs.core.truth_(or__31937__auto____$4)){
return or__31937__auto____$4;
} else {
var or__31937__auto____$5 = (function (){var G__45822 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__45822) : p3.call(null,G__45822));
})();
if(cljs.core.truth_(or__31937__auto____$5)){
return or__31937__auto____$5;
} else {
var or__31937__auto____$6 = (function (){var G__45824 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__45824) : p1.call(null,G__45824));
})();
if(cljs.core.truth_(or__31937__auto____$6)){
return or__31937__auto____$6;
} else {
var or__31937__auto____$7 = (function (){var G__45826 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__45826) : p2.call(null,G__45826));
})();
if(cljs.core.truth_(or__31937__auto____$7)){
return or__31937__auto____$7;
} else {
var G__45827 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__45827) : p3.call(null,G__45827));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__45867__delegate = function (x,y,z,args){
var or__31937__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__31937__auto__)){
return or__31937__auto__;
} else {
return cljs.core.some(((function (or__31937__auto__){
return (function (p1__45484_SHARP_){
var or__31937__auto____$1 = (function (){var G__45829 = p1__45484_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__45829) : p1.call(null,G__45829));
})();
if(cljs.core.truth_(or__31937__auto____$1)){
return or__31937__auto____$1;
} else {
var or__31937__auto____$2 = (function (){var G__45831 = p1__45484_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__45831) : p2.call(null,G__45831));
})();
if(cljs.core.truth_(or__31937__auto____$2)){
return or__31937__auto____$2;
} else {
var G__45832 = p1__45484_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__45832) : p3.call(null,G__45832));
}
}
});})(or__31937__auto__))
,args);
}
};
var G__45867 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__45868__i = 0, G__45868__a = new Array(arguments.length -  3);
while (G__45868__i < G__45868__a.length) {G__45868__a[G__45868__i] = arguments[G__45868__i + 3]; ++G__45868__i;}
  args = new cljs.core.IndexedSeq(G__45868__a,0);
} 
return G__45867__delegate.call(this,x,y,z,args);};
G__45867.cljs$lang$maxFixedArity = 3;
G__45867.cljs$lang$applyTo = (function (arglist__45869){
var x = cljs.core.first(arglist__45869);
arglist__45869 = cljs.core.next(arglist__45869);
var y = cljs.core.first(arglist__45869);
arglist__45869 = cljs.core.next(arglist__45869);
var z = cljs.core.first(arglist__45869);
var args = cljs.core.rest(arglist__45869);
return G__45867__delegate(x,y,z,args);
});
G__45867.cljs$core$IFn$_invoke$arity$variadic = G__45867__delegate;
return G__45867;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__45870 = null;
if (arguments.length > 3) {
var G__45871__i = 0, G__45871__a = new Array(arguments.length -  3);
while (G__45871__i < G__45871__a.length) {G__45871__a[G__45871__i] = arguments[G__45871__i + 3]; ++G__45871__i;}
G__45870 = new cljs.core.IndexedSeq(G__45871__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__45870);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__45872__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__45485_SHARP_){
var G__45848 = x;
return (p1__45485_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__45485_SHARP_.cljs$core$IFn$_invoke$arity$1(G__45848) : p1__45485_SHARP_.call(null,G__45848));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__45486_SHARP_){
var or__31937__auto__ = (function (){var G__45850 = x;
return (p1__45486_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__45486_SHARP_.cljs$core$IFn$_invoke$arity$1(G__45850) : p1__45486_SHARP_.call(null,G__45850));
})();
if(cljs.core.truth_(or__31937__auto__)){
return or__31937__auto__;
} else {
var G__45851 = y;
return (p1__45486_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__45486_SHARP_.cljs$core$IFn$_invoke$arity$1(G__45851) : p1__45486_SHARP_.call(null,G__45851));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__45487_SHARP_){
var or__31937__auto__ = (function (){var G__45853 = x;
return (p1__45487_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__45487_SHARP_.cljs$core$IFn$_invoke$arity$1(G__45853) : p1__45487_SHARP_.call(null,G__45853));
})();
if(cljs.core.truth_(or__31937__auto__)){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (function (){var G__45855 = y;
return (p1__45487_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__45487_SHARP_.cljs$core$IFn$_invoke$arity$1(G__45855) : p1__45487_SHARP_.call(null,G__45855));
})();
if(cljs.core.truth_(or__31937__auto____$1)){
return or__31937__auto____$1;
} else {
var G__45856 = z;
return (p1__45487_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__45487_SHARP_.cljs$core$IFn$_invoke$arity$1(G__45856) : p1__45487_SHARP_.call(null,G__45856));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__45873__delegate = function (x,y,z,args){
var or__31937__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__31937__auto__)){
return or__31937__auto__;
} else {
return cljs.core.some(((function (or__31937__auto__,ps__$1){
return (function (p1__45488_SHARP_){
return cljs.core.some(p1__45488_SHARP_,args);
});})(or__31937__auto__,ps__$1))
,ps__$1);
}
};
var G__45873 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__45874__i = 0, G__45874__a = new Array(arguments.length -  3);
while (G__45874__i < G__45874__a.length) {G__45874__a[G__45874__i] = arguments[G__45874__i + 3]; ++G__45874__i;}
  args = new cljs.core.IndexedSeq(G__45874__a,0);
} 
return G__45873__delegate.call(this,x,y,z,args);};
G__45873.cljs$lang$maxFixedArity = 3;
G__45873.cljs$lang$applyTo = (function (arglist__45875){
var x = cljs.core.first(arglist__45875);
arglist__45875 = cljs.core.next(arglist__45875);
var y = cljs.core.first(arglist__45875);
arglist__45875 = cljs.core.next(arglist__45875);
var z = cljs.core.first(arglist__45875);
var args = cljs.core.rest(arglist__45875);
return G__45873__delegate(x,y,z,args);
});
G__45873.cljs$core$IFn$_invoke$arity$variadic = G__45873__delegate;
return G__45873;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__45876 = null;
if (arguments.length > 3) {
var G__45877__i = 0, G__45877__a = new Array(arguments.length -  3);
while (G__45877__i < G__45877__a.length) {G__45877__a[G__45877__i] = arguments[G__45877__i + 3]; ++G__45877__i;}
G__45876 = new cljs.core.IndexedSeq(G__45877__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__45876);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__45872 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__45878__i = 0, G__45878__a = new Array(arguments.length -  3);
while (G__45878__i < G__45878__a.length) {G__45878__a[G__45878__i] = arguments[G__45878__i + 3]; ++G__45878__i;}
  ps = new cljs.core.IndexedSeq(G__45878__a,0);
} 
return G__45872__delegate.call(this,p1,p2,p3,ps);};
G__45872.cljs$lang$maxFixedArity = 3;
G__45872.cljs$lang$applyTo = (function (arglist__45879){
var p1 = cljs.core.first(arglist__45879);
arglist__45879 = cljs.core.next(arglist__45879);
var p2 = cljs.core.first(arglist__45879);
arglist__45879 = cljs.core.next(arglist__45879);
var p3 = cljs.core.first(arglist__45879);
var ps = cljs.core.rest(arglist__45879);
return G__45872__delegate(p1,p2,p3,ps);
});
G__45872.cljs$core$IFn$_invoke$arity$variadic = G__45872__delegate;
return G__45872;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__45880 = null;
if (arguments.length > 3) {
var G__45881__i = 0, G__45881__a = new Array(arguments.length -  3);
while (G__45881__i < G__45881__a.length) {G__45881__a[G__45881__i] = arguments[G__45881__i + 3]; ++G__45881__i;}
G__45880 = new cljs.core.IndexedSeq(G__45881__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__45880);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__45936 = null;
var G__45936__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__45936__1 = (function (result){
var G__45922 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__45922) : rf.call(null,G__45922));
});
var G__45936__2 = (function (result,input){
var G__45923 = result;
var G__45924 = (function (){var G__45925 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__45925) : f.call(null,G__45925));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__45923,G__45924) : rf.call(null,G__45923,G__45924));
});
var G__45936__3 = (function() { 
var G__45937__delegate = function (result,input,inputs){
var G__45926 = result;
var G__45927 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__45926,G__45927) : rf.call(null,G__45926,G__45927));
};
var G__45937 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__45938__i = 0, G__45938__a = new Array(arguments.length -  2);
while (G__45938__i < G__45938__a.length) {G__45938__a[G__45938__i] = arguments[G__45938__i + 2]; ++G__45938__i;}
  inputs = new cljs.core.IndexedSeq(G__45938__a,0);
} 
return G__45937__delegate.call(this,result,input,inputs);};
G__45937.cljs$lang$maxFixedArity = 2;
G__45937.cljs$lang$applyTo = (function (arglist__45939){
var result = cljs.core.first(arglist__45939);
arglist__45939 = cljs.core.next(arglist__45939);
var input = cljs.core.first(arglist__45939);
var inputs = cljs.core.rest(arglist__45939);
return G__45937__delegate(result,input,inputs);
});
G__45937.cljs$core$IFn$_invoke$arity$variadic = G__45937__delegate;
return G__45937;
})()
;
G__45936 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__45936__0.call(this);
case 1:
return G__45936__1.call(this,result);
case 2:
return G__45936__2.call(this,result,input);
default:
var G__45940 = null;
if (arguments.length > 2) {
var G__45941__i = 0, G__45941__a = new Array(arguments.length -  2);
while (G__45941__i < G__45941__a.length) {G__45941__a[G__45941__i] = arguments[G__45941__i + 2]; ++G__45941__i;}
G__45940 = new cljs.core.IndexedSeq(G__45941__a,0);
}
return G__45936__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__45940);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__45936.cljs$lang$maxFixedArity = 2;
G__45936.cljs$lang$applyTo = G__45936__3.cljs$lang$applyTo;
G__45936.cljs$core$IFn$_invoke$arity$0 = G__45936__0;
G__45936.cljs$core$IFn$_invoke$arity$1 = G__45936__1;
G__45936.cljs$core$IFn$_invoke$arity$2 = G__45936__2;
G__45936.cljs$core$IFn$_invoke$arity$variadic = G__45936__3.cljs$core$IFn$_invoke$arity$variadic;
return G__45936;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__32824__auto___45942 = size;
var i_45943 = (0);
while(true){
if((i_45943 < n__32824__auto___45942)){
cljs.core.chunk_append(b,(function (){var G__45928 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_45943);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__45928) : f.call(null,G__45928));
})());

var G__45944 = (i_45943 + (1));
i_45943 = G__45944;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__45929 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__45929) : f.call(null,G__45929));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__45930 = cljs.core.first(s1);
var G__45931 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__45930,G__45931) : f.call(null,G__45930,G__45931));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__45932 = cljs.core.first(s1);
var G__45933 = cljs.core.first(s2);
var G__45934 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__45932,G__45933,G__45934) : f.call(null,G__45932,G__45933,G__45934));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__45945__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__45882_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__45882_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__45945 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__45946__i = 0, G__45946__a = new Array(arguments.length -  4);
while (G__45946__i < G__45946__a.length) {G__45946__a[G__45946__i] = arguments[G__45946__i + 4]; ++G__45946__i;}
  colls = new cljs.core.IndexedSeq(G__45946__a,0);
} 
return G__45945__delegate.call(this,f,c1,c2,c3,colls);};
G__45945.cljs$lang$maxFixedArity = 4;
G__45945.cljs$lang$applyTo = (function (arglist__45947){
var f = cljs.core.first(arglist__45947);
arglist__45947 = cljs.core.next(arglist__45947);
var c1 = cljs.core.first(arglist__45947);
arglist__45947 = cljs.core.next(arglist__45947);
var c2 = cljs.core.first(arglist__45947);
arglist__45947 = cljs.core.next(arglist__45947);
var c3 = cljs.core.first(arglist__45947);
var colls = cljs.core.rest(arglist__45947);
return G__45945__delegate(f,c1,c2,c3,colls);
});
G__45945.cljs$core$IFn$_invoke$arity$variadic = G__45945__delegate;
return G__45945;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__45948 = null;
if (arguments.length > 4) {
var G__45949__i = 0, G__45949__a = new Array(arguments.length -  4);
while (G__45949__i < G__45949__a.length) {G__45949__a[G__45949__i] = arguments[G__45949__i + 4]; ++G__45949__i;}
G__45948 = new cljs.core.IndexedSeq(G__45949__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__45948);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__45958 = null;
var G__45958__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__45958__1 = (function (result){
var G__45955 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__45955) : rf.call(null,G__45955));
});
var G__45958__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__45956 = result;
var G__45957 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__45956,G__45957) : rf.call(null,G__45956,G__45957));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__45958 = function(result,input){
switch(arguments.length){
case 0:
return G__45958__0.call(this);
case 1:
return G__45958__1.call(this,result);
case 2:
return G__45958__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__45958.cljs$core$IFn$_invoke$arity$0 = G__45958__0;
G__45958.cljs$core$IFn$_invoke$arity$1 = G__45958__1;
G__45958.cljs$core$IFn$_invoke$arity$2 = G__45958__2;
return G__45958;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__45965 = null;
var G__45965__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__45965__1 = (function (result){
var G__45962 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__45962) : rf.call(null,G__45962));
});
var G__45965__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__45963 = result;
var G__45964 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__45963,G__45964) : rf.call(null,G__45963,G__45964));
}
});
G__45965 = function(result,input){
switch(arguments.length){
case 0:
return G__45965__0.call(this);
case 1:
return G__45965__1.call(this,result);
case 2:
return G__45965__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__45965.cljs$core$IFn$_invoke$arity$0 = G__45965__0;
G__45965.cljs$core$IFn$_invoke$arity$1 = G__45965__1;
G__45965.cljs$core$IFn$_invoke$arity$2 = G__45965__2;
return G__45965;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__45966 = (n__$1 - (1));
var G__45967 = cljs.core.rest(s);
n__$1 = G__45966;
coll__$1 = G__45967;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__45970 = cljs.core.next(s);
var G__45971 = cljs.core.next(lead);
s = G__45970;
lead = G__45971;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__45984 = null;
var G__45984__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__45984__1 = (function (result){
var G__45978 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__45978) : rf.call(null,G__45978));
});
var G__45984__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__31925__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__31925__auto__)){
var G__45979 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__45979) : pred.call(null,G__45979));
} else {
return and__31925__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__45980 = result;
var G__45981 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__45980,G__45981) : rf.call(null,G__45980,G__45981));
}
});
G__45984 = function(result,input){
switch(arguments.length){
case 0:
return G__45984__0.call(this);
case 1:
return G__45984__1.call(this,result);
case 2:
return G__45984__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__45984.cljs$core$IFn$_invoke$arity$0 = G__45984__0;
G__45984.cljs$core$IFn$_invoke$arity$1 = G__45984__1;
G__45984.cljs$core$IFn$_invoke$arity$2 = G__45984__2;
return G__45984;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__31925__auto__ = s;
if(and__31925__auto__){
var G__45983 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__45983) : pred__$1.call(null,G__45983));
} else {
return and__31925__auto__;
}
})())){
var G__45985 = pred__$1;
var G__45986 = cljs.core.rest(s);
pred__$1 = G__45985;
coll__$1 = G__45986;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__45995 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__45995) : f.call(null,G__45995));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__45998__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__45998 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__45999__i = 0, G__45999__a = new Array(arguments.length -  2);
while (G__45999__i < G__45999__a.length) {G__45999__a[G__45999__i] = arguments[G__45999__i + 2]; ++G__45999__i;}
  colls = new cljs.core.IndexedSeq(G__45999__a,0);
} 
return G__45998__delegate.call(this,c1,c2,colls);};
G__45998.cljs$lang$maxFixedArity = 2;
G__45998.cljs$lang$applyTo = (function (arglist__46000){
var c1 = cljs.core.first(arglist__46000);
arglist__46000 = cljs.core.next(arglist__46000);
var c2 = cljs.core.first(arglist__46000);
var colls = cljs.core.rest(arglist__46000);
return G__45998__delegate(c1,c2,colls);
});
G__45998.cljs$core$IFn$_invoke$arity$variadic = G__45998__delegate;
return G__45998;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__46001 = null;
if (arguments.length > 2) {
var G__46002__i = 0, G__46002__a = new Array(arguments.length -  2);
while (G__46002__i < G__46002__a.length) {G__46002__a[G__46002__i] = arguments[G__46002__i + 2]; ++G__46002__i;}
G__46001 = new cljs.core.IndexedSeq(G__46002__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__46001);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__46017 = null;
var G__46017__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__46017__1 = (function (result){
var G__46010 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__46010) : rf.call(null,G__46010));
});
var G__46017__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__46011 = result;
var G__46012 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__46011,G__46012) : rf.call(null,G__46011,G__46012));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__46013 = sepr;
var G__46014 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__46013,G__46014) : rf.call(null,G__46013,G__46014));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__46015 = result;
var G__46016 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__46015,G__46016) : rf.call(null,G__46015,G__46016));
}
});
G__46017 = function(result,input){
switch(arguments.length){
case 0:
return G__46017__0.call(this);
case 1:
return G__46017__1.call(this,result);
case 2:
return G__46017__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__46017.cljs$core$IFn$_invoke$arity$0 = G__46017__0;
G__46017.cljs$core$IFn$_invoke$arity$1 = G__46017__1;
G__46017.cljs$core$IFn$_invoke$arity$2 = G__46017__2;
return G__46017;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__46026__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__46026 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__46027__i = 0, G__46027__a = new Array(arguments.length -  1);
while (G__46027__i < G__46027__a.length) {G__46027__a[G__46027__i] = arguments[G__46027__i + 1]; ++G__46027__i;}
  colls = new cljs.core.IndexedSeq(G__46027__a,0);
} 
return G__46026__delegate.call(this,f,colls);};
G__46026.cljs$lang$maxFixedArity = 1;
G__46026.cljs$lang$applyTo = (function (arglist__46028){
var f = cljs.core.first(arglist__46028);
var colls = cljs.core.rest(arglist__46028);
return G__46026__delegate(f,colls);
});
G__46026.cljs$core$IFn$_invoke$arity$variadic = G__46026__delegate;
return G__46026;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__46029 = null;
if (arguments.length > 1) {
var G__46030__i = 0, G__46030__a = new Array(arguments.length -  1);
while (G__46030__i < G__46030__a.length) {G__46030__a[G__46030__i] = arguments[G__46030__i + 1]; ++G__46030__i;}
G__46029 = new cljs.core.IndexedSeq(G__46030__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__46029);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__46049 = null;
var G__46049__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__46049__1 = (function (result){
var G__46043 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__46043) : rf.call(null,G__46043));
});
var G__46049__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__46044 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__46044) : pred.call(null,G__46044));
})())){
var G__46045 = result;
var G__46046 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__46045,G__46046) : rf.call(null,G__46045,G__46046));
} else {
return result;
}
});
G__46049 = function(result,input){
switch(arguments.length){
case 0:
return G__46049__0.call(this);
case 1:
return G__46049__1.call(this,result);
case 2:
return G__46049__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__46049.cljs$core$IFn$_invoke$arity$0 = G__46049__0;
G__46049.cljs$core$IFn$_invoke$arity$1 = G__46049__1;
G__46049.cljs$core$IFn$_invoke$arity$2 = G__46049__2;
return G__46049;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__32824__auto___46050 = size;
var i_46051 = (0);
while(true){
if((i_46051 < n__32824__auto___46050)){
if(cljs.core.truth_((function (){var G__46047 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_46051);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__46047) : pred.call(null,G__46047));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_46051));
} else {
}

var G__46052 = (i_46051 + (1));
i_46051 = G__46052;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__46048 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__46048) : pred.call(null,G__46048));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__46059 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__46059) : branch_QMARK_.call(null,G__46059));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__46060 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__46060) : children.call(null,G__46060));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__46061_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__46061_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__46064 = to;
if(G__46064){
var bit__32611__auto__ = (G__46064.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__32611__auto__) || (G__46064.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__46065 = to;
if(G__46065){
var bit__32611__auto__ = (G__46065.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__32611__auto__) || (G__46065.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__46067 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__46067) : f.call(null,G__46067));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__46068__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__46068 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__46069__i = 0, G__46069__a = new Array(arguments.length -  4);
while (G__46069__i < G__46069__a.length) {G__46069__a[G__46069__i] = arguments[G__46069__i + 4]; ++G__46069__i;}
  colls = new cljs.core.IndexedSeq(G__46069__a,0);
} 
return G__46068__delegate.call(this,f,c1,c2,c3,colls);};
G__46068.cljs$lang$maxFixedArity = 4;
G__46068.cljs$lang$applyTo = (function (arglist__46070){
var f = cljs.core.first(arglist__46070);
arglist__46070 = cljs.core.next(arglist__46070);
var c1 = cljs.core.first(arglist__46070);
arglist__46070 = cljs.core.next(arglist__46070);
var c2 = cljs.core.first(arglist__46070);
arglist__46070 = cljs.core.next(arglist__46070);
var c3 = cljs.core.first(arglist__46070);
var colls = cljs.core.rest(arglist__46070);
return G__46068__delegate(f,c1,c2,c3,colls);
});
G__46068.cljs$core$IFn$_invoke$arity$variadic = G__46068__delegate;
return G__46068;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__46071 = null;
if (arguments.length > 4) {
var G__46072__i = 0, G__46072__a = new Array(arguments.length -  4);
while (G__46072__i < G__46072__a.length) {G__46072__a[G__46072__i] = arguments[G__46072__i + 4]; ++G__46072__i;}
G__46071 = new cljs.core.IndexedSeq(G__46072__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__46071);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__46074 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__46074) : pred.call(null,G__46074));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__46089 = m__$1;
if(G__46089){
var bit__32618__auto__ = (G__46089.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__32618__auto__) || (G__46089.cljs$core$ILookup$)){
return true;
} else {
if((!G__46089.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__46089);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__46089);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__46090 = sentinel;
var G__46091 = m__$2;
var G__46092 = cljs.core.next(ks__$1);
sentinel = G__46090;
m__$1 = G__46091;
ks__$1 = G__46092;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__46093,v){
var vec__46098 = p__46093;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46098,(0),null);
var ks = cljs.core.nthnext(vec__46098,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__46099,f){
var vec__46137 = p__46099;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46137,(0),null);
var ks = cljs.core.nthnext(vec__46137,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__46138 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__46138) : f.call(null,G__46138));
})());
}
});
var update_in__4 = (function (m,p__46100,f,a){
var vec__46139 = p__46100;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46139,(0),null);
var ks = cljs.core.nthnext(vec__46139,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__46140 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__46141 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__46140,G__46141) : f.call(null,G__46140,G__46141));
})());
}
});
var update_in__5 = (function (m,p__46101,f,a,b){
var vec__46142 = p__46101;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46142,(0),null);
var ks = cljs.core.nthnext(vec__46142,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__46143 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__46144 = a;
var G__46145 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__46143,G__46144,G__46145) : f.call(null,G__46143,G__46144,G__46145));
})());
}
});
var update_in__6 = (function (m,p__46102,f,a,b,c){
var vec__46146 = p__46102;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46146,(0),null);
var ks = cljs.core.nthnext(vec__46146,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__46147 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__46148 = a;
var G__46149 = b;
var G__46150 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__46147,G__46148,G__46149,G__46150) : f.call(null,G__46147,G__46148,G__46149,G__46150));
})());
}
});
var update_in__7 = (function() { 
var G__46152__delegate = function (m,p__46103,f,a,b,c,args){
var vec__46151 = p__46103;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46151,(0),null);
var ks = cljs.core.nthnext(vec__46151,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__46152 = function (m,p__46103,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__46153__i = 0, G__46153__a = new Array(arguments.length -  6);
while (G__46153__i < G__46153__a.length) {G__46153__a[G__46153__i] = arguments[G__46153__i + 6]; ++G__46153__i;}
  args = new cljs.core.IndexedSeq(G__46153__a,0);
} 
return G__46152__delegate.call(this,m,p__46103,f,a,b,c,args);};
G__46152.cljs$lang$maxFixedArity = 6;
G__46152.cljs$lang$applyTo = (function (arglist__46154){
var m = cljs.core.first(arglist__46154);
arglist__46154 = cljs.core.next(arglist__46154);
var p__46103 = cljs.core.first(arglist__46154);
arglist__46154 = cljs.core.next(arglist__46154);
var f = cljs.core.first(arglist__46154);
arglist__46154 = cljs.core.next(arglist__46154);
var a = cljs.core.first(arglist__46154);
arglist__46154 = cljs.core.next(arglist__46154);
var b = cljs.core.first(arglist__46154);
arglist__46154 = cljs.core.next(arglist__46154);
var c = cljs.core.first(arglist__46154);
var args = cljs.core.rest(arglist__46154);
return G__46152__delegate(m,p__46103,f,a,b,c,args);
});
G__46152.cljs$core$IFn$_invoke$arity$variadic = G__46152__delegate;
return G__46152;
})()
;
update_in = function(m,p__46103,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__46103,f);
case 4:
return update_in__4.call(this,m,p__46103,f,a);
case 5:
return update_in__5.call(this,m,p__46103,f,a,b);
case 6:
return update_in__6.call(this,m,p__46103,f,a,b,c);
default:
var G__46155 = null;
if (arguments.length > 6) {
var G__46156__i = 0, G__46156__a = new Array(arguments.length -  6);
while (G__46156__i < G__46156__a.length) {G__46156__a[G__46156__i] = arguments[G__46156__i + 6]; ++G__46156__i;}
G__46155 = new cljs.core.IndexedSeq(G__46156__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__46103,f,a,b,c, G__46155);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__46167 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__46167) : f.call(null,G__46167));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__46168 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__46169 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__46168,G__46169) : f.call(null,G__46168,G__46169));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__46170 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__46171 = x;
var G__46172 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__46170,G__46171,G__46172) : f.call(null,G__46170,G__46171,G__46172));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__46173 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__46174 = x;
var G__46175 = y;
var G__46176 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__46173,G__46174,G__46175,G__46176) : f.call(null,G__46173,G__46174,G__46175,G__46176));
})());
});
var update__7 = (function() { 
var G__46177__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__46177 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__46178__i = 0, G__46178__a = new Array(arguments.length -  6);
while (G__46178__i < G__46178__a.length) {G__46178__a[G__46178__i] = arguments[G__46178__i + 6]; ++G__46178__i;}
  more = new cljs.core.IndexedSeq(G__46178__a,0);
} 
return G__46177__delegate.call(this,m,k,f,x,y,z,more);};
G__46177.cljs$lang$maxFixedArity = 6;
G__46177.cljs$lang$applyTo = (function (arglist__46179){
var m = cljs.core.first(arglist__46179);
arglist__46179 = cljs.core.next(arglist__46179);
var k = cljs.core.first(arglist__46179);
arglist__46179 = cljs.core.next(arglist__46179);
var f = cljs.core.first(arglist__46179);
arglist__46179 = cljs.core.next(arglist__46179);
var x = cljs.core.first(arglist__46179);
arglist__46179 = cljs.core.next(arglist__46179);
var y = cljs.core.first(arglist__46179);
arglist__46179 = cljs.core.next(arglist__46179);
var z = cljs.core.first(arglist__46179);
var more = cljs.core.rest(arglist__46179);
return G__46177__delegate(m,k,f,x,y,z,more);
});
G__46177.cljs$core$IFn$_invoke$arity$variadic = G__46177__delegate;
return G__46177;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__46180 = null;
if (arguments.length > 6) {
var G__46181__i = 0, G__46181__a = new Array(arguments.length -  6);
while (G__46181__i < G__46181__a.length) {G__46181__a[G__46181__i] = arguments[G__46181__i + 6]; ++G__46181__i;}
G__46180 = new cljs.core.IndexedSeq(G__46181__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__46180);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__32524__auto__,writer__32525__auto__,opt__32526__auto__){
return cljs.core._write(writer__32525__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__46182 = (ll - (5));
var G__46183 = r;
ll = G__46182;
ret = G__46183;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__46188 = cljs.core.pv_aget(node,(0));
var G__46189 = (level - (5));
node = G__46188;
level = G__46189;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__46190 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__46191 = (level - (5));
node = G__46190;
level = G__46191;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__32524__auto__,writer__32525__auto__,opt__32526__auto__){
return cljs.core._write(writer__32525__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__46201 = init__$2;
var G__46202 = (j + i);
var G__46203 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__46201,G__46202,G__46203) : f.call(null,G__46201,G__46202,G__46203));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__46214 = (j + (1));
var G__46215 = init__$3;
j = G__46214;
init__$2 = G__46215;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__46204 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__46204) : cljs.core.deref.call(null,G__46204));
} else {
var G__46216 = (i + len);
var G__46217 = init__$2;
i = G__46216;
init__$1 = G__46217;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__32358__auto__ = self__.__hash;
if(!((h__32358__auto__ == null))){
return h__32358__auto__;
} else {
var h__32358__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__32358__auto____$1;

return h__32358__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__46205 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__46205) : cljs.core.tv_editable_root.call(null,G__46205));
})(),(function (){var G__46206 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__46206) : cljs.core.tv_editable_tail.call(null,G__46206));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__46207 = init__$2;
var G__46208 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__46207,G__46208) : f.call(null,G__46207,G__46208));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__46218 = (j + (1));
var G__46219 = init__$3;
j = G__46218;
init__$2 = G__46219;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__46209 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__46209) : cljs.core.deref.call(null,G__46209));
} else {
var G__46220 = (i + len);
var G__46221 = init__$2;
i = G__46220;
init__$1 = G__46221;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__46210 = coll__$1;
var G__46211 = cljs.core.first_array_for_longvec(coll__$1);
var G__46212 = (0);
var G__46213 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__46210,G__46211,G__46212,G__46213) : cljs.core.chunked_seq.call(null,G__46210,G__46211,G__46212,G__46213));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__32824__auto___46222 = len;
var i_46223 = (0);
while(true){
if((i_46223 < n__32824__auto___46222)){
(new_tail[i_46223] = (self__.tail[i_46223]));

var G__46224 = (i_46223 + (1));
i_46223 = G__46224;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__46225 = null;
var G__46225__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__46225__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__46225 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__46225__2.call(this,self__,k);
case 3:
return G__46225__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__46225.cljs$core$IFn$_invoke$arity$2 = G__46225__2;
G__46225.cljs$core$IFn$_invoke$arity$3 = G__46225__3;
return G__46225;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args46200){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args46200)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__32524__auto__,writer__32525__auto__,opt__32526__auto__){
return cljs.core._write(writer__32525__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__46226 = (i + (1));
var G__46227 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__46226;
out = G__46227;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__32915__auto__ = this;
return cljs.core.es6_iterator(this__32915__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__46228__i = 0, G__46228__a = new Array(arguments.length -  0);
while (G__46228__i < G__46228__a.length) {G__46228__a[G__46228__i] = arguments[G__46228__i + 0]; ++G__46228__i;}
  args = new cljs.core.IndexedSeq(G__46228__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__46229){
var args = cljs.core.seq(arglist__46229);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__46230 = self__.vec;
var G__46231 = self__.node;
var G__46232 = self__.i;
var G__46233 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__46230,G__46231,G__46232,G__46233) : cljs.core.chunked_seq.call(null,G__46230,G__46231,G__46232,G__46233));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__32358__auto__ = self__.__hash;
if(!((h__32358__auto__ == null))){
return h__32358__auto__;
} else {
var h__32358__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__32358__auto____$1;

return h__32358__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__46234 = self__.vec;
var G__46235 = (self__.i + self__.off);
var G__46236 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__46234,G__46235,G__46236) : cljs.core.subvec.call(null,G__46234,G__46235,G__46236));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__46237 = self__.vec;
var G__46238 = (self__.i + self__.off);
var G__46239 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__46237,G__46238,G__46239) : cljs.core.subvec.call(null,G__46237,G__46238,G__46239));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__46240 = self__.vec;
var G__46241 = self__.node;
var G__46242 = self__.i;
var G__46243 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__46240,G__46241,G__46242,G__46243) : cljs.core.chunked_seq.call(null,G__46240,G__46241,G__46242,G__46243));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__46244 = self__.vec;
var G__46245 = cljs.core.unchecked_array_for(self__.vec,end);
var G__46246 = end;
var G__46247 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__46244,G__46245,G__46246,G__46247) : cljs.core.chunked_seq.call(null,G__46244,G__46245,G__46246,G__46247));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__46248 = self__.vec;
var G__46249 = self__.node;
var G__46250 = self__.i;
var G__46251 = self__.off;
var G__46252 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__46248,G__46249,G__46250,G__46251,G__46252) : cljs.core.chunked_seq.call(null,G__46248,G__46249,G__46250,G__46251,G__46252));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__46253 = self__.vec;
var G__46254 = cljs.core.unchecked_array_for(self__.vec,end);
var G__46255 = end;
var G__46256 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__46253,G__46254,G__46255,G__46256) : cljs.core.chunked_seq.call(null,G__46253,G__46254,G__46255,G__46256));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__32524__auto__,writer__32525__auto__,opt__32526__auto__){
return cljs.core._write(writer__32525__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__32915__auto__ = this;
return cljs.core.es6_iterator(this__32915__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__46258 = self__.meta;
var G__46259 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__46260 = self__.start;
var G__46261 = (function (){var x__32254__auto__ = self__.end;
var y__32255__auto__ = (v_pos + (1));
return ((x__32254__auto__ > y__32255__auto__) ? x__32254__auto__ : y__32255__auto__);
})();
var G__46262 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__46258,G__46259,G__46260,G__46261,G__46262) : cljs.core.build_subvec.call(null,G__46258,G__46259,G__46260,G__46261,G__46262));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__46263 = self__.meta;
var G__46264 = self__.v;
var G__46265 = self__.start;
var G__46266 = (self__.end - (1));
var G__46267 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__46263,G__46264,G__46265,G__46266,G__46267) : cljs.core.build_subvec.call(null,G__46263,G__46264,G__46265,G__46266,G__46267));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__32358__auto__ = self__.__hash;
if(!((h__32358__auto__ == null))){
return h__32358__auto__;
} else {
var h__32358__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__32358__auto____$1;

return h__32358__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__46269 = meta__$1;
var G__46270 = self__.v;
var G__46271 = self__.start;
var G__46272 = self__.end;
var G__46273 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__46269,G__46270,G__46271,G__46272,G__46273) : cljs.core.build_subvec.call(null,G__46269,G__46270,G__46271,G__46272,G__46273));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__46274 = self__.meta;
var G__46275 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__46276 = self__.start;
var G__46277 = (self__.end + (1));
var G__46278 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__46274,G__46275,G__46276,G__46277,G__46278) : cljs.core.build_subvec.call(null,G__46274,G__46275,G__46276,G__46277,G__46278));
});

cljs.core.Subvec.prototype.call = (function() {
var G__46279 = null;
var G__46279__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__46279__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__46279 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__46279__2.call(this,self__,k);
case 3:
return G__46279__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__46279.cljs$core$IFn$_invoke$arity$2 = G__46279__2;
G__46279.cljs$core$IFn$_invoke$arity$3 = G__46279__3;
return G__46279;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args46257){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args46257)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__32524__auto__,writer__32525__auto__,opt__32526__auto__){
return cljs.core._write(writer__32525__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__32915__auto__ = this;
return cljs.core.es6_iterator(this__32915__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__46280 = meta;
var G__46281 = v.v;
var G__46282 = (v.start + start);
var G__46283 = (v.start + end);
var G__46284 = __hash;
meta = G__46280;
v = G__46281;
start = G__46282;
end = G__46283;
__hash = G__46284;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj46291 = {};
return obj46291;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__46299 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__46300 = (level - (5));
node = G__46299;
level = G__46300;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__46304 = null;
var G__46304__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__46304__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__46304 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__46304__2.call(this,self__,k);
case 3:
return G__46304__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__46304.cljs$core$IFn$_invoke$arity$2 = G__46304__2;
G__46304.cljs$core$IFn$_invoke$arity$3 = G__46304__3;
return G__46304;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args46301){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args46301)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__32524__auto__,writer__32525__auto__,opt__32526__auto__){
return cljs.core._write(writer__32525__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__32358__auto__ = self__.__hash;
if(!((h__32358__auto__ == null))){
return h__32358__auto__;
} else {
var h__32358__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__32358__auto____$1;

return h__32358__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__32524__auto__,writer__32525__auto__,opt__32526__auto__){
return cljs.core._write(writer__32525__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__32915__auto__ = this;
return cljs.core.es6_iterator(this__32915__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__32358__auto__ = self__.__hash;
if(!((h__32358__auto__ == null))){
return h__32358__auto__;
} else {
var h__32358__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__32358__auto____$1;

return h__32358__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__31937__auto__ = self__.front;
if(cljs.core.truth_(or__31937__auto__)){
return or__31937__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__31937__auto__ = self__.rear;
if(cljs.core.truth_(or__31937__auto__)){
return or__31937__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__32524__auto__,writer__32525__auto__,opt__32526__auto__){
return cljs.core._write(writer__32525__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__32915__auto__ = this;
return cljs.core.es6_iterator(this__32915__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__32524__auto__,writer__32525__auto__,opt__32526__auto__){
return cljs.core._write(writer__32525__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__46305 = (i + incr);
i = G__46305;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__46306 = (i + (1));
var G__46307 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__46306;
out = G__46307;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj46311 = {};
return obj46311;
})();
var l = ks.length;
var i_46312 = (0);
while(true){
if((i_46312 < l)){
var k_46313 = (ks[i_46312]);
(new_obj[k_46313] = (obj[k_46313]));

var G__46314 = (i_46312 + (1));
i_46312 = G__46314;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__31925__auto__ = (function (){var G__46318 = k;
return goog.isString(G__46318);
})();
if(cljs.core.truth_(and__31925__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__31925__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__46319 = init__$1;
var G__46320 = k;
var G__46321 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__46319,G__46320,G__46321) : f.call(null,G__46319,G__46320,G__46321));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__46322 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__46322) : cljs.core.deref.call(null,G__46322));
} else {
var G__46328 = cljs.core.rest(keys__$1);
var G__46329 = init__$2;
keys__$1 = G__46328;
init__$1 = G__46329;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__32358__auto__ = self__.__hash;
if(!((h__32358__auto__ == null))){
return h__32358__auto__;
} else {
var h__32358__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__32358__auto____$1;

return h__32358__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__31925__auto__ = (function (){var G__46324 = k;
return goog.isString(G__46324);
})();
if(cljs.core.truth_(and__31925__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__31925__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__46325 = k;
return goog.isString(G__46325);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__31925__auto__ = (function (){var G__46327 = k;
return goog.isString(G__46327);
})();
if(cljs.core.truth_(and__31925__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__31925__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__46315_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__46315_SHARP_,(self__.strobj[p1__46315_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__46330 = null;
var G__46330__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__46330__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__46330 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__46330__2.call(this,self__,k);
case 3:
return G__46330__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__46330.cljs$core$IFn$_invoke$arity$2 = G__46330__2;
G__46330.cljs$core$IFn$_invoke$arity$3 = G__46330__3;
return G__46330;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args46316){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args46316)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__32524__auto__,writer__32525__auto__,opt__32526__auto__){
return cljs.core._write(writer__32525__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj46332 = {};
return obj46332;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__46333 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46333,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46333,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__32524__auto__,writer__32525__auto__,opt__32526__auto__){
return cljs.core._write(writer__32525__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__32524__auto__,writer__32525__auto__,opt__32526__auto__){
return cljs.core._write(writer__32525__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__46334 = (i + (2));
i = G__46334;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__46335 = (i + (2));
i = G__46335;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__46336 = (i + (2));
i = G__46336;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__46337 = (i + (2));
i = G__46337;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__46338 = (i + (2));
i = G__46338;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__31937__auto__ = (function (){var G__46342 = k;
return goog.isString(G__46342);
})();
if(cljs.core.truth_(or__31937__auto__)){
return or__31937__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_46343 = (0);
while(true){
if((i_46343 < l)){
(narr[i_46343] = (arr[i_46343]));

var G__46344 = (i_46343 + (1));
i_46343 = G__46344;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__32524__auto__,writer__32525__auto__,opt__32526__auto__){
return cljs.core._write(writer__32525__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__32915__auto__ = this;
return cljs.core.es6_iterator(this__32915__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__32524__auto__,writer__32525__auto__,opt__32526__auto__){
return cljs.core._write(writer__32525__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__46346 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__46346) : cljs.core.keys.call(null,G__46346));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__46347 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__46347) : cljs.core.vals.call(null,G__46347));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__46348 = cljs.core.seq(coll);
var chunk__46349 = null;
var count__46350 = (0);
var i__46351 = (0);
while(true){
if((i__46351 < count__46350)){
var vec__46352 = chunk__46349.cljs$core$IIndexed$_nth$arity$2(null,i__46351);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46352,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46352,(1),null);
var G__46353_46366 = v;
var G__46354_46367 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__46353_46366,G__46354_46367) : f.call(null,G__46353_46366,G__46354_46367));

var G__46368 = seq__46348;
var G__46369 = chunk__46349;
var G__46370 = count__46350;
var G__46371 = (i__46351 + (1));
seq__46348 = G__46368;
chunk__46349 = G__46369;
count__46350 = G__46370;
i__46351 = G__46371;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__46348);
if(temp__4126__auto__){
var seq__46348__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__46348__$1)){
var c__32724__auto__ = cljs.core.chunk_first(seq__46348__$1);
var G__46372 = cljs.core.chunk_rest(seq__46348__$1);
var G__46373 = c__32724__auto__;
var G__46374 = cljs.core.count(c__32724__auto__);
var G__46375 = (0);
seq__46348 = G__46372;
chunk__46349 = G__46373;
count__46350 = G__46374;
i__46351 = G__46375;
continue;
} else {
var vec__46355 = cljs.core.first(seq__46348__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46355,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46355,(1),null);
var G__46356_46376 = v;
var G__46357_46377 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__46356_46376,G__46357_46377) : f.call(null,G__46356_46376,G__46357_46377));

var G__46378 = cljs.core.next(seq__46348__$1);
var G__46379 = null;
var G__46380 = (0);
var G__46381 = (0);
seq__46348 = G__46378;
chunk__46349 = G__46379;
count__46350 = G__46380;
i__46351 = G__46381;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__46358 = init__$1;
var G__46359 = (self__.arr[i]);
var G__46360 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__46358,G__46359,G__46360) : f.call(null,G__46358,G__46359,G__46360));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__46361 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__46361) : cljs.core.deref.call(null,G__46361));
} else {
var G__46382 = (i + (2));
var G__46383 = init__$2;
i = G__46382;
init__$1 = G__46383;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__32358__auto__ = self__.__hash;
if(!((h__32358__auto__ == null))){
return h__32358__auto__;
} else {
var h__32358__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__32358__auto____$1;

return h__32358__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__46362 = other;
if(G__46362){
var bit__32611__auto__ = (G__46362.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__32611__auto__) || (G__46362.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__46384 = (i + (2));
i = G__46384;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj46364 = {};
return obj46364;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__46385 = (s + (2));
var G__46386 = d;
s = G__46385;
d = G__46386;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__46387 = (s + (2));
var G__46388 = (d + (2));
s = G__46387;
d = G__46388;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__46365 = cljs.core.aclone(self__.arr);
(G__46365[(idx + (1))] = v);

return G__46365;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__46389 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__46390 = cljs.core.next(es);
ret = G__46389;
es = G__46390;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__46391 = null;
var G__46391__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__46391__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__46391 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__46391__2.call(this,self__,k);
case 3:
return G__46391__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__46391.cljs$core$IFn$_invoke$arity$2 = G__46391__2;
G__46391.cljs$core$IFn$_invoke$arity$3 = G__46391__3;
return G__46391;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args46345){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args46345)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__32524__auto__,writer__32525__auto__,opt__32526__auto__){
return cljs.core._write(writer__32525__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__46392 = (i + (2));
var G__46393 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__46392;
ret = G__46393;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__32915__auto__ = this;
return cljs.core.es6_iterator(this__32915__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__46394_46402 = self__.arr;
G__46394_46402.pop();

G__46394_46402.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__46395 = self__.len;
var G__46396 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__46395,G__46396) : cljs.core.array__GT_transient_hash_map.call(null,G__46395,G__46396));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__46397 = o;
if(G__46397){
var bit__32618__auto__ = (G__46397.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__32618__auto__) || (G__46397.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__46397.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__46397);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__46397);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__46398 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__46398) : cljs.core.key.call(null,G__46398));
})(),(function (){var G__46399 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__46399) : cljs.core.val.call(null,G__46399));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__46403 = cljs.core.next(es);
var G__46404 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__46400 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__46400) : cljs.core.key.call(null,G__46400));
})(),(function (){var G__46401 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__46401) : cljs.core.val.call(null,G__46401));
})());
es = G__46403;
tcoll__$2 = G__46404;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__32524__auto__,writer__32525__auto__,opt__32526__auto__){
return cljs.core._write(writer__32525__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__46405 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__46406 = (i + (2));
out = G__46405;
i = G__46406;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__32524__auto__,writer__32525__auto__,opt__32526__auto__){
return cljs.core._write(writer__32525__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__46409 = cljs.core.aclone(arr);
(G__46409[i] = a);

return G__46409;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__46410 = cljs.core.aclone(arr);
(G__46410[i] = a);

(G__46410[j] = b);

return G__46410;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__46415 = init__$1;
var G__46416 = k;
var G__46417 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__46415,G__46416,G__46417) : f.call(null,G__46415,G__46416,G__46417));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__46418 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__46418) : cljs.core.deref.call(null,G__46418));
} else {
var G__46419 = (i + (2));
var G__46420 = init__$2;
i = G__46419;
init__$1 = G__46420;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__46421 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__46421) : cljs.core.create_inode_seq.call(null,G__46421));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_46435 = (0);
var j_46436 = (0);
while(true){
if((i_46435 < (32))){
if((((self__.bitmap >>> i_46435) & (1)) === (0))){
var G__46437 = (i_46435 + (1));
var G__46438 = j_46436;
i_46435 = G__46437;
j_46436 = G__46438;
continue;
} else {
(nodes[i_46435] = ((!(((self__.arr[j_46436]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_46436])),(self__.arr[j_46436]),(self__.arr[(j_46436 + (1))]),added_leaf_QMARK_):(self__.arr[(j_46436 + (1))])));

var G__46439 = (i_46435 + (1));
var G__46440 = (j_46436 + (2));
i_46435 = G__46439;
j_46436 = G__46440;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__46422 = edit__$1;
var G__46423 = (shift + (5));
var G__46424 = key_or_nil;
var G__46425 = val_or_node;
var G__46426 = hash;
var G__46427 = key;
var G__46428 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__46422,G__46423,G__46424,G__46425,G__46426,G__46427,G__46428) : cljs.core.create_node.call(null,G__46422,G__46423,G__46424,G__46425,G__46426,G__46427,G__46428));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_46441 = (0);
var j_46442 = (0);
while(true){
if((i_46441 < (32))){
if((((self__.bitmap >>> i_46441) & (1)) === (0))){
var G__46443 = (i_46441 + (1));
var G__46444 = j_46442;
i_46441 = G__46443;
j_46442 = G__46444;
continue;
} else {
(nodes[i_46441] = ((!(((self__.arr[j_46442]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_46442])),(self__.arr[j_46442]),(self__.arr[(j_46442 + (1))]),added_leaf_QMARK_):(self__.arr[(j_46442 + (1))])));

var G__46445 = (i_46441 + (1));
var G__46446 = (j_46442 + (2));
i_46441 = G__46445;
j_46442 = G__46446;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__46429 = (shift + (5));
var G__46430 = key_or_nil;
var G__46431 = val_or_node;
var G__46432 = hash;
var G__46433 = key;
var G__46434 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__46429,G__46430,G__46431,G__46432,G__46433,G__46434) : cljs.core.create_node.call(null,G__46429,G__46430,G__46431,G__46432,G__46433,G__46434));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__32524__auto__,writer__32525__auto__,opt__32526__auto__){
return cljs.core._write(writer__32525__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__46447 = (i + (1));
var G__46448 = (j + (2));
var G__46449 = (bitmap | ((1) << i));
i = G__46447;
j = G__46448;
bitmap = G__46449;
continue;
} else {
var G__46450 = (i + (1));
var G__46451 = j;
var G__46452 = bitmap;
i = G__46450;
j = G__46451;
bitmap = G__46452;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__46453 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__46453) : cljs.core.create_array_node_seq.call(null,G__46453));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__46454 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__46454) : cljs.core.deref.call(null,G__46454));
} else {
var G__46455 = (i + (1));
var G__46456 = init__$2;
i = G__46455;
init__$1 = G__46456;
continue;
}
} else {
var G__46457 = (i + (1));
var G__46458 = init__$1;
i = G__46457;
init__$1 = G__46458;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__32524__auto__,writer__32525__auto__,opt__32526__auto__){
return cljs.core._write(writer__32525__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__46459 = (i + (2));
i = G__46459;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__46460 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__46460) : cljs.core.create_inode_seq.call(null,G__46460));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__32524__auto__,writer__32525__auto__,opt__32526__auto__){
return cljs.core._write(writer__32525__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__32358__auto__ = self__.__hash;
if(!((h__32358__auto__ == null))){
return h__32358__auto__;
} else {
var h__32358__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__32358__auto____$1;

return h__32358__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__46461 = self__.nodes;
var G__46462 = (self__.i + (2));
var G__46463 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__46461,G__46462,G__46463) : cljs.core.create_inode_seq.call(null,G__46461,G__46462,G__46463));
} else {
var G__46464 = self__.nodes;
var G__46465 = self__.i;
var G__46466 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__46464,G__46465,G__46466) : cljs.core.create_inode_seq.call(null,G__46464,G__46465,G__46466));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__32524__auto__,writer__32525__auto__,opt__32526__auto__){
return cljs.core._write(writer__32525__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__32915__auto__ = this;
return cljs.core.es6_iterator(this__32915__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__46470 = (j + (2));
j = G__46470;
continue;
}
} else {
var G__46471 = (j + (2));
j = G__46471;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__32358__auto__ = self__.__hash;
if(!((h__32358__auto__ == null))){
return h__32358__auto__;
} else {
var h__32358__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__32358__auto____$1;

return h__32358__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__46472 = null;
var G__46473 = self__.nodes;
var G__46474 = self__.i;
var G__46475 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__46472,G__46473,G__46474,G__46475) : cljs.core.create_array_node_seq.call(null,G__46472,G__46473,G__46474,G__46475));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__32524__auto__,writer__32525__auto__,opt__32526__auto__){
return cljs.core._write(writer__32525__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__32915__auto__ = this;
return cljs.core.es6_iterator(this__32915__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__46480 = (j + (1));
j = G__46480;
continue;
}
} else {
var G__46481 = (j + (1));
j = G__46481;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__46483 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__46483) : cljs.core.keys.call(null,G__46483));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__46484 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__46484) : cljs.core.vals.call(null,G__46484));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__46485 = cljs.core.seq(coll);
var chunk__46486 = null;
var count__46487 = (0);
var i__46488 = (0);
while(true){
if((i__46488 < count__46487)){
var vec__46489 = chunk__46486.cljs$core$IIndexed$_nth$arity$2(null,i__46488);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46489,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46489,(1),null);
var G__46490_46501 = v;
var G__46491_46502 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__46490_46501,G__46491_46502) : f.call(null,G__46490_46501,G__46491_46502));

var G__46503 = seq__46485;
var G__46504 = chunk__46486;
var G__46505 = count__46487;
var G__46506 = (i__46488 + (1));
seq__46485 = G__46503;
chunk__46486 = G__46504;
count__46487 = G__46505;
i__46488 = G__46506;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__46485);
if(temp__4126__auto__){
var seq__46485__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__46485__$1)){
var c__32724__auto__ = cljs.core.chunk_first(seq__46485__$1);
var G__46507 = cljs.core.chunk_rest(seq__46485__$1);
var G__46508 = c__32724__auto__;
var G__46509 = cljs.core.count(c__32724__auto__);
var G__46510 = (0);
seq__46485 = G__46507;
chunk__46486 = G__46508;
count__46487 = G__46509;
i__46488 = G__46510;
continue;
} else {
var vec__46492 = cljs.core.first(seq__46485__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46492,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46492,(1),null);
var G__46493_46511 = v;
var G__46494_46512 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__46493_46511,G__46494_46512) : f.call(null,G__46493_46511,G__46494_46512));

var G__46513 = cljs.core.next(seq__46485__$1);
var G__46514 = null;
var G__46515 = (0);
var G__46516 = (0);
seq__46485 = G__46513;
chunk__46486 = G__46514;
count__46487 = G__46515;
i__46488 = G__46516;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__46495 = init;
var G__46496 = null;
var G__46497 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__46495,G__46496,G__46497) : f.call(null,G__46495,G__46496,G__46497));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__46498 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__46498) : cljs.core.deref.call(null,G__46498));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__32358__auto__ = self__.__hash;
if(!((h__32358__auto__ == null))){
return h__32358__auto__;
} else {
var h__32358__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__32358__auto____$1;

return h__32358__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj46500 = {};
return obj46500;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__46517 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__46518 = cljs.core.next(es);
ret = G__46517;
es = G__46518;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__46519 = null;
var G__46519__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__46519__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__46519 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__46519__2.call(this,self__,k);
case 3:
return G__46519__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__46519.cljs$core$IFn$_invoke$arity$2 = G__46519__2;
G__46519.cljs$core$IFn$_invoke$arity$3 = G__46519__3;
return G__46519;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args46482){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args46482)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__32524__auto__,writer__32525__auto__,opt__32526__auto__){
return cljs.core._write(writer__32525__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__46520 = (i + (2));
var G__46521 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__46520;
ret = G__46521;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__46522 = (i + (1));
var G__46523 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__46522;
out = G__46523;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__32915__auto__ = this;
return cljs.core.es6_iterator(this__32915__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__46524 = o;
if(G__46524){
var bit__32618__auto__ = (G__46524.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__32618__auto__) || (G__46524.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__46524.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__46524);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__46524);
}
})()){
return tcoll.assoc_BANG_((function (){var G__46525 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__46525) : cljs.core.key.call(null,G__46525));
})(),(function (){var G__46526 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__46526) : cljs.core.val.call(null,G__46526));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__46529 = cljs.core.next(es);
var G__46530 = tcoll__$1.assoc_BANG_((function (){var G__46527 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__46527) : cljs.core.key.call(null,G__46527));
})(),(function (){var G__46528 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__46528) : cljs.core.val.call(null,G__46528));
})());
es = G__46529;
tcoll__$1 = G__46530;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__32524__auto__,writer__32525__auto__,opt__32526__auto__){
return cljs.core._write(writer__32525__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__46531 = ((ascending_QMARK_)?t.left:t.right);
var G__46532 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__46531;
stack__$1 = G__46532;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__32358__auto__ = self__.__hash;
if(!((h__32358__auto__ == null))){
return h__32358__auto__;
} else {
var h__32358__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__32358__auto____$1;

return h__32358__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__32524__auto__,writer__32525__auto__,opt__32526__auto__){
return cljs.core._write(writer__32525__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__32915__auto__ = this;
return cljs.core.es6_iterator(this__32915__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__46545 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__46545) : cljs.core.deref.call(null,G__46545));
} else {
var init__$2 = (function (){var G__46546 = init__$1;
var G__46547 = node.key;
var G__46548 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__46546,G__46547,G__46548) : f.call(null,G__46546,G__46547,G__46548));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__46549 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__46549) : cljs.core.deref.call(null,G__46549));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__46550 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__46550) : cljs.core.deref.call(null,G__46550));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__32358__auto__ = self__.__hash;
if(!((h__32358__auto__ == null))){
return h__32358__auto__;
} else {
var h__32358__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__32358__auto____$1;

return h__32358__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__46552 = null;
var G__46552__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__46552__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__46552 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__46552__2.call(this,self__,k);
case 3:
return G__46552__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__46552.cljs$core$IFn$_invoke$arity$2 = G__46552__2;
G__46552.cljs$core$IFn$_invoke$arity$3 = G__46552__3;
return G__46552;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args46551){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args46551)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__32524__auto__,writer__32525__auto__,opt__32526__auto__){
return cljs.core._write(writer__32525__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__32915__auto__ = this;
return cljs.core.es6_iterator(this__32915__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__32358__auto__ = self__.__hash;
if(!((h__32358__auto__ == null))){
return h__32358__auto__;
} else {
var h__32358__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__32358__auto____$1;

return h__32358__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__46554 = null;
var G__46554__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__46554__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__46554 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__46554__2.call(this,self__,k);
case 3:
return G__46554__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__46554.cljs$core$IFn$_invoke$arity$2 = G__46554__2;
G__46554.cljs$core$IFn$_invoke$arity$3 = G__46554__3;
return G__46554;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args46553){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args46553)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__32524__auto__,writer__32525__auto__,opt__32526__auto__){
return cljs.core._write(writer__32525__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__32915__auto__ = this;
return cljs.core.es6_iterator(this__32915__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__46567 = k;
var G__46568 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__46567,G__46568) : comp.call(null,G__46567,G__46568));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__46587 = k;
var G__46588 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__46587,G__46588) : comp.call(null,G__46587,G__46588));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__46599 = k;
var G__46600 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__46599,G__46600) : comp.call(null,G__46599,G__46600));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__46602 = cljs.core.seq(coll);
var chunk__46603 = null;
var count__46604 = (0);
var i__46605 = (0);
while(true){
if((i__46605 < count__46604)){
var vec__46606 = chunk__46603.cljs$core$IIndexed$_nth$arity$2(null,i__46605);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46606,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46606,(1),null);
var G__46607_46619 = v;
var G__46608_46620 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__46607_46619,G__46608_46620) : f.call(null,G__46607_46619,G__46608_46620));

var G__46621 = seq__46602;
var G__46622 = chunk__46603;
var G__46623 = count__46604;
var G__46624 = (i__46605 + (1));
seq__46602 = G__46621;
chunk__46603 = G__46622;
count__46604 = G__46623;
i__46605 = G__46624;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__46602);
if(temp__4126__auto__){
var seq__46602__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__46602__$1)){
var c__32724__auto__ = cljs.core.chunk_first(seq__46602__$1);
var G__46625 = cljs.core.chunk_rest(seq__46602__$1);
var G__46626 = c__32724__auto__;
var G__46627 = cljs.core.count(c__32724__auto__);
var G__46628 = (0);
seq__46602 = G__46625;
chunk__46603 = G__46626;
count__46604 = G__46627;
i__46605 = G__46628;
continue;
} else {
var vec__46609 = cljs.core.first(seq__46602__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46609,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46609,(1),null);
var G__46610_46629 = v;
var G__46611_46630 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__46610_46629,G__46611_46630) : f.call(null,G__46610_46629,G__46611_46630));

var G__46631 = cljs.core.next(seq__46602__$1);
var G__46632 = null;
var G__46633 = (0);
var G__46634 = (0);
seq__46602 = G__46631;
chunk__46603 = G__46632;
count__46604 = G__46633;
i__46605 = G__46634;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__46612 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__46612) : cljs.core.keys.call(null,G__46612));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__46613 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__46613) : cljs.core.vals.call(null,G__46613));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__46614 = k;
var G__46615 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__46614,G__46615) : self__.comp.call(null,G__46614,G__46615));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__46635 = t.left;
t = G__46635;
continue;
} else {
var G__46636 = t.right;
t = G__46636;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__32358__auto__ = self__.__hash;
if(!((h__32358__auto__ == null))){
return h__32358__auto__;
} else {
var h__32358__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__32358__auto____$1;

return h__32358__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__46637 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__46638 = cljs.core.next(es);
ret = G__46637;
es = G__46638;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__46639 = null;
var G__46639__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__46639__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__46639 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__46639__2.call(this,self__,k);
case 3:
return G__46639__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__46639.cljs$core$IFn$_invoke$arity$2 = G__46639__2;
G__46639.cljs$core$IFn$_invoke$arity$3 = G__46639__3;
return G__46639;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args46601){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args46601)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__46616 = k;
var G__46617 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__46616,G__46617) : self__.comp.call(null,G__46616,G__46617));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__46640 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__46641 = t.left;
stack = G__46640;
t = G__46641;
continue;
} else {
var G__46642 = stack;
var G__46643 = t.right;
stack = G__46642;
t = G__46643;
continue;
}
} else {
if((c > (0))){
var G__46644 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__46645 = t.right;
stack = G__46644;
t = G__46645;
continue;
} else {
var G__46646 = stack;
var G__46647 = t.left;
stack = G__46646;
t = G__46647;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__46618 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__46618) : cljs.core.key.call(null,G__46618));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__32524__auto__,writer__32525__auto__,opt__32526__auto__){
return cljs.core._write(writer__32525__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__32915__auto__ = this;
return cljs.core.es6_iterator(this__32915__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__46648 = cljs.core.nnext(in$);
var G__46649 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__46648;
out = G__46649;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__46650__i = 0, G__46650__a = new Array(arguments.length -  0);
while (G__46650__i < G__46650__a.length) {G__46650__a[G__46650__i] = arguments[G__46650__i + 0]; ++G__46650__i;}
  keyvals = new cljs.core.IndexedSeq(G__46650__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__46651){
var keyvals = cljs.core.seq(arglist__46651);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__46652__i = 0, G__46652__a = new Array(arguments.length -  0);
while (G__46652__i < G__46652__a.length) {G__46652__a[G__46652__i] = arguments[G__46652__i + 0]; ++G__46652__i;}
  keyvals = new cljs.core.IndexedSeq(G__46652__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__46653){
var keyvals = cljs.core.seq(arglist__46653);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj46657 = {};
return obj46657;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__46658 = cljs.core.nnext(kvs);
kvs = G__46658;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__46659__i = 0, G__46659__a = new Array(arguments.length -  0);
while (G__46659__i < G__46659__a.length) {G__46659__a[G__46659__i] = arguments[G__46659__i + 0]; ++G__46659__i;}
  keyvals = new cljs.core.IndexedSeq(G__46659__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__46660){
var keyvals = cljs.core.seq(arglist__46660);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__46661 = cljs.core.nnext(in$);
var G__46662 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__46661;
out = G__46662;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__46663__i = 0, G__46663__a = new Array(arguments.length -  0);
while (G__46663__i < G__46663__a.length) {G__46663__a[G__46663__i] = arguments[G__46663__i + 0]; ++G__46663__i;}
  keyvals = new cljs.core.IndexedSeq(G__46663__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__46664){
var keyvals = cljs.core.seq(arglist__46664);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__46665 = cljs.core.nnext(in$);
var G__46666 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__46665;
out = G__46666;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__46667__i = 0, G__46667__a = new Array(arguments.length -  1);
while (G__46667__i < G__46667__a.length) {G__46667__a[G__46667__i] = arguments[G__46667__i + 1]; ++G__46667__i;}
  keyvals = new cljs.core.IndexedSeq(G__46667__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__46668){
var comparator = cljs.core.first(arglist__46668);
var keyvals = cljs.core.rest(arglist__46668);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__46669 = self__.mseq;
if(G__46669){
var bit__32618__auto__ = (G__46669.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__32618__auto__) || (G__46669.cljs$core$INext$)){
return true;
} else {
if((!G__46669.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__46669);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__46669);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__46670 = self__.mseq;
if(G__46670){
var bit__32618__auto__ = (G__46670.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__32618__auto__) || (G__46670.cljs$core$INext$)){
return true;
} else {
if((!G__46670.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__46670);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__46670);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__32524__auto__,writer__32525__auto__,opt__32526__auto__){
return cljs.core._write(writer__32525__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__32915__auto__ = this;
return cljs.core.es6_iterator(this__32915__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__46671 = self__.mseq;
if(G__46671){
var bit__32618__auto__ = (G__46671.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__32618__auto__) || (G__46671.cljs$core$INext$)){
return true;
} else {
if((!G__46671.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__46671);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__46671);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__46672 = self__.mseq;
if(G__46672){
var bit__32618__auto__ = (G__46672.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__32618__auto__) || (G__46672.cljs$core$INext$)){
return true;
} else {
if((!G__46672.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__46672);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__46672);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__32524__auto__,writer__32525__auto__,opt__32526__auto__){
return cljs.core._write(writer__32525__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__32915__auto__ = this;
return cljs.core.es6_iterator(this__32915__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__46673_SHARP_,p2__46674_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__31937__auto__ = p1__46673_SHARP_;
if(cljs.core.truth_(or__31937__auto__)){
return or__31937__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__46674_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__46675__i = 0, G__46675__a = new Array(arguments.length -  0);
while (G__46675__i < G__46675__a.length) {G__46675__a[G__46675__i] = arguments[G__46675__i + 0]; ++G__46675__i;}
  maps = new cljs.core.IndexedSeq(G__46675__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__46676){
var maps = cljs.core.seq(arglist__46676);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__46679 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__46680 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__46679,G__46680) : f.call(null,G__46679,G__46680));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__31937__auto__ = m1;
if(cljs.core.truth_(or__31937__auto__)){
return or__31937__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__46681__i = 0, G__46681__a = new Array(arguments.length -  1);
while (G__46681__i < G__46681__a.length) {G__46681__a[G__46681__i] = arguments[G__46681__i + 1]; ++G__46681__i;}
  maps = new cljs.core.IndexedSeq(G__46681__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__46682){
var f = cljs.core.first(arglist__46682);
var maps = cljs.core.rest(arglist__46682);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,cljs.core.constant$keyword$9);
var G__46683 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,cljs.core.constant$keyword$9))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__46684 = cljs.core.next(keys);
ret = G__46683;
keys = G__46684;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__46687 = cljs.core.seq(coll);
var chunk__46688 = null;
var count__46689 = (0);
var i__46690 = (0);
while(true){
if((i__46690 < count__46689)){
var vec__46691 = chunk__46688.cljs$core$IIndexed$_nth$arity$2(null,i__46690);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46691,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46691,(1),null);
var G__46692_46697 = v;
var G__46693_46698 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__46692_46697,G__46693_46698) : f.call(null,G__46692_46697,G__46693_46698));

var G__46699 = seq__46687;
var G__46700 = chunk__46688;
var G__46701 = count__46689;
var G__46702 = (i__46690 + (1));
seq__46687 = G__46699;
chunk__46688 = G__46700;
count__46689 = G__46701;
i__46690 = G__46702;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__46687);
if(temp__4126__auto__){
var seq__46687__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__46687__$1)){
var c__32724__auto__ = cljs.core.chunk_first(seq__46687__$1);
var G__46703 = cljs.core.chunk_rest(seq__46687__$1);
var G__46704 = c__32724__auto__;
var G__46705 = cljs.core.count(c__32724__auto__);
var G__46706 = (0);
seq__46687 = G__46703;
chunk__46688 = G__46704;
count__46689 = G__46705;
i__46690 = G__46706;
continue;
} else {
var vec__46694 = cljs.core.first(seq__46687__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46694,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46694,(1),null);
var G__46695_46707 = v;
var G__46696_46708 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__46695_46707,G__46696_46708) : f.call(null,G__46695_46707,G__46696_46708));

var G__46709 = cljs.core.next(seq__46687__$1);
var G__46710 = null;
var G__46711 = (0);
var G__46712 = (0);
seq__46687 = G__46709;
chunk__46688 = G__46710;
count__46689 = G__46711;
i__46690 = G__46712;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__32358__auto__ = self__.__hash;
if(!((h__32358__auto__ == null))){
return h__32358__auto__;
} else {
var h__32358__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__32358__auto____$1;

return h__32358__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__46685_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__46685_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__46713 = null;
var G__46713__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__46713__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__46713 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__46713__2.call(this,self__,k);
case 3:
return G__46713__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__46713.cljs$core$IFn$_invoke$arity$2 = G__46713__2;
G__46713.cljs$core$IFn$_invoke$arity$3 = G__46713__3;
return G__46713;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args46686){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args46686)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__32524__auto__,writer__32525__auto__,opt__32526__auto__){
return cljs.core._write(writer__32525__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__46714 = (i + (1));
var G__46715 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__46714;
out = G__46715;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__46716 = (i + (1));
var G__46717 = cljs.core._conj_BANG_(out,(items[i]));
i = G__46716;
out = G__46717;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__32915__auto__ = this;
return cljs.core.es6_iterator(this__32915__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__46719 = null;
var G__46719__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__46719__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__46719 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__46719__2.call(this,self__,k);
case 3:
return G__46719__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__46719.cljs$core$IFn$_invoke$arity$2 = G__46719__2;
G__46719.cljs$core$IFn$_invoke$arity$3 = G__46719__3;
return G__46719;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args46718){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args46718)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__32524__auto__,writer__32525__auto__,opt__32526__auto__){
return cljs.core._write(writer__32525__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__46722 = cljs.core.seq(coll);
var chunk__46723 = null;
var count__46724 = (0);
var i__46725 = (0);
while(true){
if((i__46725 < count__46724)){
var vec__46726 = chunk__46723.cljs$core$IIndexed$_nth$arity$2(null,i__46725);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46726,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46726,(1),null);
var G__46727_46732 = v;
var G__46728_46733 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__46727_46732,G__46728_46733) : f.call(null,G__46727_46732,G__46728_46733));

var G__46734 = seq__46722;
var G__46735 = chunk__46723;
var G__46736 = count__46724;
var G__46737 = (i__46725 + (1));
seq__46722 = G__46734;
chunk__46723 = G__46735;
count__46724 = G__46736;
i__46725 = G__46737;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__46722);
if(temp__4126__auto__){
var seq__46722__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__46722__$1)){
var c__32724__auto__ = cljs.core.chunk_first(seq__46722__$1);
var G__46738 = cljs.core.chunk_rest(seq__46722__$1);
var G__46739 = c__32724__auto__;
var G__46740 = cljs.core.count(c__32724__auto__);
var G__46741 = (0);
seq__46722 = G__46738;
chunk__46723 = G__46739;
count__46724 = G__46740;
i__46725 = G__46741;
continue;
} else {
var vec__46729 = cljs.core.first(seq__46722__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46729,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46729,(1),null);
var G__46730_46742 = v;
var G__46731_46743 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__46730_46742,G__46731_46743) : f.call(null,G__46730_46742,G__46731_46743));

var G__46744 = cljs.core.next(seq__46722__$1);
var G__46745 = null;
var G__46746 = (0);
var G__46747 = (0);
seq__46722 = G__46744;
chunk__46723 = G__46745;
count__46724 = G__46746;
i__46725 = G__46747;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__32358__auto__ = self__.__hash;
if(!((h__32358__auto__ == null))){
return h__32358__auto__;
} else {
var h__32358__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__32358__auto____$1;

return h__32358__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__46720_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__46720_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__46748 = null;
var G__46748__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__46748__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__46748 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__46748__2.call(this,self__,k);
case 3:
return G__46748__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__46748.cljs$core$IFn$_invoke$arity$2 = G__46748__2;
G__46748.cljs$core$IFn$_invoke$arity$3 = G__46748__3;
return G__46748;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args46721){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args46721)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__32524__auto__,writer__32525__auto__,opt__32526__auto__){
return cljs.core._write(writer__32525__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__32915__auto__ = this;
return cljs.core.es6_iterator(this__32915__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__32818__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__32818__auto__.length)){
var G__46749 = (i + (1));
var G__46750 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__46749;
res = G__46750;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__46751 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__46752 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__46751;
out = G__46752;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__46753__delegate = function (keys){
return cljs.core.set(keys);
};
var G__46753 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__46754__i = 0, G__46754__a = new Array(arguments.length -  0);
while (G__46754__i < G__46754__a.length) {G__46754__a[G__46754__i] = arguments[G__46754__i + 0]; ++G__46754__i;}
  keys = new cljs.core.IndexedSeq(G__46754__a,0);
} 
return G__46753__delegate.call(this,keys);};
G__46753.cljs$lang$maxFixedArity = 0;
G__46753.cljs$lang$applyTo = (function (arglist__46755){
var keys = cljs.core.seq(arglist__46755);
return G__46753__delegate(keys);
});
G__46753.cljs$core$IFn$_invoke$arity$variadic = G__46753__delegate;
return G__46753;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__46756 = null;
if (arguments.length > 0) {
var G__46757__i = 0, G__46757__a = new Array(arguments.length -  0);
while (G__46757__i < G__46757__a.length) {G__46757__a[G__46757__i] = arguments[G__46757__i + 0]; ++G__46757__i;}
G__46756 = new cljs.core.IndexedSeq(G__46757__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__46756);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__46758__i = 0, G__46758__a = new Array(arguments.length -  0);
while (G__46758__i < G__46758__a.length) {G__46758__a[G__46758__i] = arguments[G__46758__i + 0]; ++G__46758__i;}
  keys = new cljs.core.IndexedSeq(G__46758__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__46759){
var keys = cljs.core.seq(arglist__46759);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__46760__i = 0, G__46760__a = new Array(arguments.length -  1);
while (G__46760__i < G__46760__a.length) {G__46760__a[G__46760__i] = arguments[G__46760__i + 1]; ++G__46760__i;}
  keys = new cljs.core.IndexedSeq(G__46760__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__46761){
var comparator = cljs.core.first(arglist__46761);
var keys = cljs.core.rest(arglist__46761);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__46762_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__46762_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__46762_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__46763_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__46763_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__46763_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__46784 = null;
var G__46784__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__46784__1 = (function (result){
var G__46774 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__46774) : rf.call(null,G__46774));
});
var G__46784__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__46775 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__46775) : cljs.core.deref.call(null,G__46775));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__46776 = result;
var G__46777 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__46776,G__46777) : rf.call(null,G__46776,G__46777));
}
});
G__46784 = function(result,input){
switch(arguments.length){
case 0:
return G__46784__0.call(this);
case 1:
return G__46784__1.call(this,result);
case 2:
return G__46784__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__46784.cljs$core$IFn$_invoke$arity$0 = G__46784__0;
G__46784.cljs$core$IFn$_invoke$arity$1 = G__46784__1;
G__46784.cljs$core$IFn$_invoke$arity$2 = G__46784__2;
return G__46784;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__46782,seen__$1){
while(true){
var vec__46783 = p__46782;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46783,(0),null);
var xs__$1 = vec__46783;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__46785 = cljs.core.rest(s);
var G__46786 = seen__$1;
p__46782 = G__46785;
seen__$1 = G__46786;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__46787 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__46788 = cljs.core.next(s__$1);
ret = G__46787;
s__$1 = G__46788;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__46790 = x;
if(G__46790){
var bit__32611__auto__ = (G__46790.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__32611__auto__) || (G__46790.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__46791 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__46792 = cljs.core.next(ks);
var G__46793 = cljs.core.next(vs);
map = G__46791;
ks = G__46792;
vs = G__46793;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__46804 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__46804) : k.call(null,G__46804));
})() > (function (){var G__46805 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__46805) : k.call(null,G__46805));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__46806__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__46794_SHARP_,p2__46795_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__46794_SHARP_,p2__46795_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__46806 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__46807__i = 0, G__46807__a = new Array(arguments.length -  3);
while (G__46807__i < G__46807__a.length) {G__46807__a[G__46807__i] = arguments[G__46807__i + 3]; ++G__46807__i;}
  more = new cljs.core.IndexedSeq(G__46807__a,0);
} 
return G__46806__delegate.call(this,k,x,y,more);};
G__46806.cljs$lang$maxFixedArity = 3;
G__46806.cljs$lang$applyTo = (function (arglist__46808){
var k = cljs.core.first(arglist__46808);
arglist__46808 = cljs.core.next(arglist__46808);
var x = cljs.core.first(arglist__46808);
arglist__46808 = cljs.core.next(arglist__46808);
var y = cljs.core.first(arglist__46808);
var more = cljs.core.rest(arglist__46808);
return G__46806__delegate(k,x,y,more);
});
G__46806.cljs$core$IFn$_invoke$arity$variadic = G__46806__delegate;
return G__46806;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__46809 = null;
if (arguments.length > 3) {
var G__46810__i = 0, G__46810__a = new Array(arguments.length -  3);
while (G__46810__i < G__46810__a.length) {G__46810__a[G__46810__i] = arguments[G__46810__i + 3]; ++G__46810__i;}
G__46809 = new cljs.core.IndexedSeq(G__46810__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__46809);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__46821 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__46821) : k.call(null,G__46821));
})() < (function (){var G__46822 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__46822) : k.call(null,G__46822));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__46823__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__46811_SHARP_,p2__46812_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__46811_SHARP_,p2__46812_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__46823 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__46824__i = 0, G__46824__a = new Array(arguments.length -  3);
while (G__46824__i < G__46824__a.length) {G__46824__a[G__46824__i] = arguments[G__46824__i + 3]; ++G__46824__i;}
  more = new cljs.core.IndexedSeq(G__46824__a,0);
} 
return G__46823__delegate.call(this,k,x,y,more);};
G__46823.cljs$lang$maxFixedArity = 3;
G__46823.cljs$lang$applyTo = (function (arglist__46825){
var k = cljs.core.first(arglist__46825);
arglist__46825 = cljs.core.next(arglist__46825);
var x = cljs.core.first(arglist__46825);
arglist__46825 = cljs.core.next(arglist__46825);
var y = cljs.core.first(arglist__46825);
var more = cljs.core.rest(arglist__46825);
return G__46823__delegate(k,x,y,more);
});
G__46823.cljs$core$IFn$_invoke$arity$variadic = G__46823__delegate;
return G__46823;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__46826 = null;
if (arguments.length > 3) {
var G__46827__i = 0, G__46827__a = new Array(arguments.length -  3);
while (G__46827__i < G__46827__a.length) {G__46827__a[G__46827__i] = arguments[G__46827__i + 3]; ++G__46827__i;}
G__46826 = new cljs.core.IndexedSeq(G__46827__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__46826);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__32524__auto__,writer__32525__auto__,opt__32526__auto__){
return cljs.core._write(writer__32525__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__46844 = null;
var G__46844__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__46844__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__46839 = result;
var G__46840 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__46839,G__46840) : rf.call(null,G__46839,G__46840));
})());
})());
var G__46841 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__46841) : rf.call(null,G__46841));
});
var G__46844__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__46842 = result;
var G__46843 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__46842,G__46843) : rf.call(null,G__46842,G__46843));
} else {
return result;
}
});
G__46844 = function(result,input){
switch(arguments.length){
case 0:
return G__46844__0.call(this);
case 1:
return G__46844__1.call(this,result);
case 2:
return G__46844__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__46844.cljs$core$IFn$_invoke$arity$0 = G__46844__0;
G__46844.cljs$core$IFn$_invoke$arity$1 = G__46844__1;
G__46844.cljs$core$IFn$_invoke$arity$2 = G__46844__2;
return G__46844;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__46857 = null;
var G__46857__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__46857__1 = (function (result){
var G__46852 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__46852) : rf.call(null,G__46852));
});
var G__46857__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__46853 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__46853) : pred.call(null,G__46853));
})())){
var G__46854 = result;
var G__46855 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__46854,G__46855) : rf.call(null,G__46854,G__46855));
} else {
return cljs.core.reduced(result);
}
});
G__46857 = function(result,input){
switch(arguments.length){
case 0:
return G__46857__0.call(this);
case 1:
return G__46857__1.call(this,result);
case 2:
return G__46857__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__46857.cljs$core$IFn$_invoke$arity$0 = G__46857__0;
G__46857.cljs$core$IFn$_invoke$arity$1 = G__46857__1;
G__46857.cljs$core$IFn$_invoke$arity$2 = G__46857__2;
return G__46857;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__46856 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__46856) : pred.call(null,G__46856));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__46862 = (function (){var G__46864 = cljs.core._entry_key(sc,e);
var G__46865 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__46864,G__46865) : comp.call(null,G__46864,G__46865));
})();
var G__46863 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__46862,G__46863) : test.call(null,G__46862,G__46863));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__46869 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46869,(0),null);
var s = vec__46869;
if(cljs.core.truth_((function (){var G__46870 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__46870) : include.call(null,G__46870));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__46871 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46871,(0),null);
var s = vec__46871;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__46875 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46875,(0),null);
var s = vec__46875;
if(cljs.core.truth_((function (){var G__46876 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__46876) : include.call(null,G__46876));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__46877 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46877,(0),null);
var s = vec__46877;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__32524__auto__,writer__32525__auto__,opt__32526__auto__){
return cljs.core._write(writer__32525__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__46878 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__46878) : Math.ceil.call(null,G__46878));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__32358__auto__ = self__.__hash;
if(!((h__32358__auto__ == null))){
return h__32358__auto__;
} else {
var h__32358__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__32358__auto____$1;

return h__32358__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__46879 = ret;
var G__46880 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__46879,G__46880) : f.call(null,G__46879,G__46880));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__46881 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__46881) : cljs.core.deref.call(null,G__46881));
} else {
var G__46882 = (i + self__.step);
var G__46883 = ret__$1;
i = G__46882;
ret = G__46883;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__32524__auto__,writer__32525__auto__,opt__32526__auto__){
return cljs.core._write(writer__32525__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__32915__auto__ = this;
return cljs.core.es6_iterator(this__32915__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__46901 = null;
var G__46901__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__46901__1 = (function (result){
var G__46898 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__46898) : rf.call(null,G__46898));
});
var G__46901__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__46899 = result;
var G__46900 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__46899,G__46900) : rf.call(null,G__46899,G__46900));
} else {
return result;
}
});
G__46901 = function(result,input){
switch(arguments.length){
case 0:
return G__46901__0.call(this);
case 1:
return G__46901__1.call(this,result);
case 2:
return G__46901__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__46901.cljs$core$IFn$_invoke$arity$0 = G__46901__0;
G__46901.cljs$core$IFn$_invoke$arity$1 = G__46901__1;
G__46901.cljs$core$IFn$_invoke$arity$2 = G__46901__2;
return G__46901;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(cljs.core.constant$keyword$10);
return ((function (a,pa){
return (function() {
var G__46923 = null;
var G__46923__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__46923__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__46914 = result;
var G__46915 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__46914,G__46915) : rf.call(null,G__46914,G__46915));
})());
})());
var G__46916 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__46916) : rf.call(null,G__46916));
});
var G__46923__2 = (function (result,input){
var pval = (function (){var G__46917 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__46917) : cljs.core.deref.call(null,G__46917));
})();
var val = (function (){var G__46918 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__46918) : f.call(null,G__46918));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,cljs.core.constant$keyword$10)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__46919 = result;
var G__46920 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__46919,G__46920) : rf.call(null,G__46919,G__46920));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__46923 = function(result,input){
switch(arguments.length){
case 0:
return G__46923__0.call(this);
case 1:
return G__46923__1.call(this,result);
case 2:
return G__46923__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__46923.cljs$core$IFn$_invoke$arity$0 = G__46923__0;
G__46923.cljs$core$IFn$_invoke$arity$1 = G__46923__1;
G__46923.cljs$core$IFn$_invoke$arity$2 = G__46923__2;
return G__46923;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__46921 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__46921) : f.call(null,G__46921));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__46902_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__46922 = p1__46902_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__46922) : f.call(null,G__46922));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__46932 = init;
var G__46933 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__46932,G__46933) : f.call(null,G__46932,G__46933));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__47028 = null;
var G__47028__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__47028__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__46986 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__46986) : f.call(null,G__46986));
})()],null));
});
var G__47028__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__46987 = x;
var G__46988 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__46987,G__46988) : f.call(null,G__46987,G__46988));
})()],null));
});
var G__47028__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__46989 = x;
var G__46990 = y;
var G__46991 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__46989,G__46990,G__46991) : f.call(null,G__46989,G__46990,G__46991));
})()],null));
});
var G__47028__4 = (function() { 
var G__47029__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__47029 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__47030__i = 0, G__47030__a = new Array(arguments.length -  3);
while (G__47030__i < G__47030__a.length) {G__47030__a[G__47030__i] = arguments[G__47030__i + 3]; ++G__47030__i;}
  args = new cljs.core.IndexedSeq(G__47030__a,0);
} 
return G__47029__delegate.call(this,x,y,z,args);};
G__47029.cljs$lang$maxFixedArity = 3;
G__47029.cljs$lang$applyTo = (function (arglist__47031){
var x = cljs.core.first(arglist__47031);
arglist__47031 = cljs.core.next(arglist__47031);
var y = cljs.core.first(arglist__47031);
arglist__47031 = cljs.core.next(arglist__47031);
var z = cljs.core.first(arglist__47031);
var args = cljs.core.rest(arglist__47031);
return G__47029__delegate(x,y,z,args);
});
G__47029.cljs$core$IFn$_invoke$arity$variadic = G__47029__delegate;
return G__47029;
})()
;
G__47028 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__47028__0.call(this);
case 1:
return G__47028__1.call(this,x);
case 2:
return G__47028__2.call(this,x,y);
case 3:
return G__47028__3.call(this,x,y,z);
default:
var G__47032 = null;
if (arguments.length > 3) {
var G__47033__i = 0, G__47033__a = new Array(arguments.length -  3);
while (G__47033__i < G__47033__a.length) {G__47033__a[G__47033__i] = arguments[G__47033__i + 3]; ++G__47033__i;}
G__47032 = new cljs.core.IndexedSeq(G__47033__a,0);
}
return G__47028__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__47032);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__47028.cljs$lang$maxFixedArity = 3;
G__47028.cljs$lang$applyTo = G__47028__4.cljs$lang$applyTo;
G__47028.cljs$core$IFn$_invoke$arity$0 = G__47028__0;
G__47028.cljs$core$IFn$_invoke$arity$1 = G__47028__1;
G__47028.cljs$core$IFn$_invoke$arity$2 = G__47028__2;
G__47028.cljs$core$IFn$_invoke$arity$3 = G__47028__3;
G__47028.cljs$core$IFn$_invoke$arity$variadic = G__47028__4.cljs$core$IFn$_invoke$arity$variadic;
return G__47028;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__47034 = null;
var G__47034__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__47034__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__46992 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__46992) : f.call(null,G__46992));
})(),(function (){var G__46993 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__46993) : g.call(null,G__46993));
})()],null));
});
var G__47034__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__46994 = x;
var G__46995 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__46994,G__46995) : f.call(null,G__46994,G__46995));
})(),(function (){var G__46996 = x;
var G__46997 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__46996,G__46997) : g.call(null,G__46996,G__46997));
})()],null));
});
var G__47034__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__46998 = x;
var G__46999 = y;
var G__47000 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__46998,G__46999,G__47000) : f.call(null,G__46998,G__46999,G__47000));
})(),(function (){var G__47001 = x;
var G__47002 = y;
var G__47003 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__47001,G__47002,G__47003) : g.call(null,G__47001,G__47002,G__47003));
})()],null));
});
var G__47034__4 = (function() { 
var G__47035__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__47035 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__47036__i = 0, G__47036__a = new Array(arguments.length -  3);
while (G__47036__i < G__47036__a.length) {G__47036__a[G__47036__i] = arguments[G__47036__i + 3]; ++G__47036__i;}
  args = new cljs.core.IndexedSeq(G__47036__a,0);
} 
return G__47035__delegate.call(this,x,y,z,args);};
G__47035.cljs$lang$maxFixedArity = 3;
G__47035.cljs$lang$applyTo = (function (arglist__47037){
var x = cljs.core.first(arglist__47037);
arglist__47037 = cljs.core.next(arglist__47037);
var y = cljs.core.first(arglist__47037);
arglist__47037 = cljs.core.next(arglist__47037);
var z = cljs.core.first(arglist__47037);
var args = cljs.core.rest(arglist__47037);
return G__47035__delegate(x,y,z,args);
});
G__47035.cljs$core$IFn$_invoke$arity$variadic = G__47035__delegate;
return G__47035;
})()
;
G__47034 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__47034__0.call(this);
case 1:
return G__47034__1.call(this,x);
case 2:
return G__47034__2.call(this,x,y);
case 3:
return G__47034__3.call(this,x,y,z);
default:
var G__47038 = null;
if (arguments.length > 3) {
var G__47039__i = 0, G__47039__a = new Array(arguments.length -  3);
while (G__47039__i < G__47039__a.length) {G__47039__a[G__47039__i] = arguments[G__47039__i + 3]; ++G__47039__i;}
G__47038 = new cljs.core.IndexedSeq(G__47039__a,0);
}
return G__47034__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__47038);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__47034.cljs$lang$maxFixedArity = 3;
G__47034.cljs$lang$applyTo = G__47034__4.cljs$lang$applyTo;
G__47034.cljs$core$IFn$_invoke$arity$0 = G__47034__0;
G__47034.cljs$core$IFn$_invoke$arity$1 = G__47034__1;
G__47034.cljs$core$IFn$_invoke$arity$2 = G__47034__2;
G__47034.cljs$core$IFn$_invoke$arity$3 = G__47034__3;
G__47034.cljs$core$IFn$_invoke$arity$variadic = G__47034__4.cljs$core$IFn$_invoke$arity$variadic;
return G__47034;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__47040 = null;
var G__47040__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__47040__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__47004 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__47004) : f.call(null,G__47004));
})(),(function (){var G__47005 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__47005) : g.call(null,G__47005));
})(),(function (){var G__47006 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__47006) : h.call(null,G__47006));
})()],null));
});
var G__47040__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__47007 = x;
var G__47008 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__47007,G__47008) : f.call(null,G__47007,G__47008));
})(),(function (){var G__47009 = x;
var G__47010 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__47009,G__47010) : g.call(null,G__47009,G__47010));
})(),(function (){var G__47011 = x;
var G__47012 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__47011,G__47012) : h.call(null,G__47011,G__47012));
})()],null));
});
var G__47040__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__47013 = x;
var G__47014 = y;
var G__47015 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__47013,G__47014,G__47015) : f.call(null,G__47013,G__47014,G__47015));
})(),(function (){var G__47016 = x;
var G__47017 = y;
var G__47018 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__47016,G__47017,G__47018) : g.call(null,G__47016,G__47017,G__47018));
})(),(function (){var G__47019 = x;
var G__47020 = y;
var G__47021 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__47019,G__47020,G__47021) : h.call(null,G__47019,G__47020,G__47021));
})()],null));
});
var G__47040__4 = (function() { 
var G__47041__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__47041 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__47042__i = 0, G__47042__a = new Array(arguments.length -  3);
while (G__47042__i < G__47042__a.length) {G__47042__a[G__47042__i] = arguments[G__47042__i + 3]; ++G__47042__i;}
  args = new cljs.core.IndexedSeq(G__47042__a,0);
} 
return G__47041__delegate.call(this,x,y,z,args);};
G__47041.cljs$lang$maxFixedArity = 3;
G__47041.cljs$lang$applyTo = (function (arglist__47043){
var x = cljs.core.first(arglist__47043);
arglist__47043 = cljs.core.next(arglist__47043);
var y = cljs.core.first(arglist__47043);
arglist__47043 = cljs.core.next(arglist__47043);
var z = cljs.core.first(arglist__47043);
var args = cljs.core.rest(arglist__47043);
return G__47041__delegate(x,y,z,args);
});
G__47041.cljs$core$IFn$_invoke$arity$variadic = G__47041__delegate;
return G__47041;
})()
;
G__47040 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__47040__0.call(this);
case 1:
return G__47040__1.call(this,x);
case 2:
return G__47040__2.call(this,x,y);
case 3:
return G__47040__3.call(this,x,y,z);
default:
var G__47044 = null;
if (arguments.length > 3) {
var G__47045__i = 0, G__47045__a = new Array(arguments.length -  3);
while (G__47045__i < G__47045__a.length) {G__47045__a[G__47045__i] = arguments[G__47045__i + 3]; ++G__47045__i;}
G__47044 = new cljs.core.IndexedSeq(G__47045__a,0);
}
return G__47040__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__47044);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__47040.cljs$lang$maxFixedArity = 3;
G__47040.cljs$lang$applyTo = G__47040__4.cljs$lang$applyTo;
G__47040.cljs$core$IFn$_invoke$arity$0 = G__47040__0;
G__47040.cljs$core$IFn$_invoke$arity$1 = G__47040__1;
G__47040.cljs$core$IFn$_invoke$arity$2 = G__47040__2;
G__47040.cljs$core$IFn$_invoke$arity$3 = G__47040__3;
G__47040.cljs$core$IFn$_invoke$arity$variadic = G__47040__4.cljs$core$IFn$_invoke$arity$variadic;
return G__47040;
})()
});
var juxt__4 = (function() { 
var G__47046__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__47047 = null;
var G__47047__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__46934_SHARP_,p2__46935_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__46934_SHARP_,(function (){return (p2__46935_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__46935_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__46935_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__47047__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__46936_SHARP_,p2__46937_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__46936_SHARP_,(function (){var G__47022 = x;
return (p2__46937_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__46937_SHARP_.cljs$core$IFn$_invoke$arity$1(G__47022) : p2__46937_SHARP_.call(null,G__47022));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__47047__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__46938_SHARP_,p2__46939_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__46938_SHARP_,(function (){var G__47023 = x;
var G__47024 = y;
return (p2__46939_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__46939_SHARP_.cljs$core$IFn$_invoke$arity$2(G__47023,G__47024) : p2__46939_SHARP_.call(null,G__47023,G__47024));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__47047__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__46940_SHARP_,p2__46941_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__46940_SHARP_,(function (){var G__47025 = x;
var G__47026 = y;
var G__47027 = z;
return (p2__46941_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__46941_SHARP_.cljs$core$IFn$_invoke$arity$3(G__47025,G__47026,G__47027) : p2__46941_SHARP_.call(null,G__47025,G__47026,G__47027));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__47047__4 = (function() { 
var G__47048__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__46942_SHARP_,p2__46943_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__46942_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__46943_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__47048 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__47049__i = 0, G__47049__a = new Array(arguments.length -  3);
while (G__47049__i < G__47049__a.length) {G__47049__a[G__47049__i] = arguments[G__47049__i + 3]; ++G__47049__i;}
  args = new cljs.core.IndexedSeq(G__47049__a,0);
} 
return G__47048__delegate.call(this,x,y,z,args);};
G__47048.cljs$lang$maxFixedArity = 3;
G__47048.cljs$lang$applyTo = (function (arglist__47050){
var x = cljs.core.first(arglist__47050);
arglist__47050 = cljs.core.next(arglist__47050);
var y = cljs.core.first(arglist__47050);
arglist__47050 = cljs.core.next(arglist__47050);
var z = cljs.core.first(arglist__47050);
var args = cljs.core.rest(arglist__47050);
return G__47048__delegate(x,y,z,args);
});
G__47048.cljs$core$IFn$_invoke$arity$variadic = G__47048__delegate;
return G__47048;
})()
;
G__47047 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__47047__0.call(this);
case 1:
return G__47047__1.call(this,x);
case 2:
return G__47047__2.call(this,x,y);
case 3:
return G__47047__3.call(this,x,y,z);
default:
var G__47051 = null;
if (arguments.length > 3) {
var G__47052__i = 0, G__47052__a = new Array(arguments.length -  3);
while (G__47052__i < G__47052__a.length) {G__47052__a[G__47052__i] = arguments[G__47052__i + 3]; ++G__47052__i;}
G__47051 = new cljs.core.IndexedSeq(G__47052__a,0);
}
return G__47047__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__47051);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__47047.cljs$lang$maxFixedArity = 3;
G__47047.cljs$lang$applyTo = G__47047__4.cljs$lang$applyTo;
G__47047.cljs$core$IFn$_invoke$arity$0 = G__47047__0;
G__47047.cljs$core$IFn$_invoke$arity$1 = G__47047__1;
G__47047.cljs$core$IFn$_invoke$arity$2 = G__47047__2;
G__47047.cljs$core$IFn$_invoke$arity$3 = G__47047__3;
G__47047.cljs$core$IFn$_invoke$arity$variadic = G__47047__4.cljs$core$IFn$_invoke$arity$variadic;
return G__47047;
})()
;})(fs__$1))
};
var G__47046 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__47053__i = 0, G__47053__a = new Array(arguments.length -  3);
while (G__47053__i < G__47053__a.length) {G__47053__a[G__47053__i] = arguments[G__47053__i + 3]; ++G__47053__i;}
  fs = new cljs.core.IndexedSeq(G__47053__a,0);
} 
return G__47046__delegate.call(this,f,g,h,fs);};
G__47046.cljs$lang$maxFixedArity = 3;
G__47046.cljs$lang$applyTo = (function (arglist__47054){
var f = cljs.core.first(arglist__47054);
arglist__47054 = cljs.core.next(arglist__47054);
var g = cljs.core.first(arglist__47054);
arglist__47054 = cljs.core.next(arglist__47054);
var h = cljs.core.first(arglist__47054);
var fs = cljs.core.rest(arglist__47054);
return G__47046__delegate(f,g,h,fs);
});
G__47046.cljs$core$IFn$_invoke$arity$variadic = G__47046__delegate;
return G__47046;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__47055 = null;
if (arguments.length > 3) {
var G__47056__i = 0, G__47056__a = new Array(arguments.length -  3);
while (G__47056__i < G__47056__a.length) {G__47056__a[G__47056__i] = arguments[G__47056__i + 3]; ++G__47056__i;}
G__47055 = new cljs.core.IndexedSeq(G__47056__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__47055);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__47057 = cljs.core.next(coll);
coll = G__47057;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__47058 = (n - (1));
var G__47059 = cljs.core.next(coll);
n = G__47058;
coll = G__47059;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__47063 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47063,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47063,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47063,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_47071 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if((cljs.core.constant$keyword$5.cljs$core$IFn$_invoke$arity$1(opts) === (0))){
if(cljs.core.seq(coll)){
cljs.core._write(writer,(function (){var or__31937__auto__ = cljs.core.constant$keyword$11.cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__31937__auto__)){
return or__31937__auto__;
} else {
return "...";
}
})());
} else {
}
} else {
if(cljs.core.seq(coll)){
var G__47072_47078 = cljs.core.first(coll);
var G__47073_47079 = writer;
var G__47074_47080 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__47072_47078,G__47073_47079,G__47074_47080) : print_one.call(null,G__47072_47078,G__47073_47079,G__47074_47080));
} else {
}

var coll_47081__$1 = cljs.core.next(coll);
var n_47082 = (cljs.core.constant$keyword$5.cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_47081__$1) && (((n_47082 == null)) || (!((n_47082 === (0)))))){
cljs.core._write(writer,sep);

var G__47075_47083 = cljs.core.first(coll_47081__$1);
var G__47076_47084 = writer;
var G__47077_47085 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__47075_47083,G__47076_47084,G__47077_47085) : print_one.call(null,G__47075_47083,G__47076_47084,G__47077_47085));

var G__47086 = cljs.core.next(coll_47081__$1);
var G__47087 = (n_47082 - (1));
coll_47081__$1 = G__47086;
n_47082 = G__47087;
continue;
} else {
if((cljs.core.seq(coll_47081__$1)) && ((n_47082 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,(function (){var or__31937__auto__ = cljs.core.constant$keyword$11.cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__31937__auto__)){
return or__31937__auto__;
} else {
return "...";
}
})());
} else {
}
}
break;
}
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_47071;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__47092 = cljs.core.seq(ss);
var chunk__47093 = null;
var count__47094 = (0);
var i__47095 = (0);
while(true){
if((i__47095 < count__47094)){
var s = chunk__47093.cljs$core$IIndexed$_nth$arity$2(null,i__47095);
cljs.core._write(writer,s);

var G__47096 = seq__47092;
var G__47097 = chunk__47093;
var G__47098 = count__47094;
var G__47099 = (i__47095 + (1));
seq__47092 = G__47096;
chunk__47093 = G__47097;
count__47094 = G__47098;
i__47095 = G__47099;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__47092);
if(temp__4126__auto__){
var seq__47092__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__47092__$1)){
var c__32724__auto__ = cljs.core.chunk_first(seq__47092__$1);
var G__47100 = cljs.core.chunk_rest(seq__47092__$1);
var G__47101 = c__32724__auto__;
var G__47102 = cljs.core.count(c__32724__auto__);
var G__47103 = (0);
seq__47092 = G__47100;
chunk__47093 = G__47101;
count__47094 = G__47102;
i__47095 = G__47103;
continue;
} else {
var s = cljs.core.first(seq__47092__$1);
cljs.core._write(writer,s);

var G__47104 = cljs.core.next(seq__47092__$1);
var G__47105 = null;
var G__47106 = (0);
var G__47107 = (0);
seq__47092 = G__47104;
chunk__47093 = G__47105;
count__47094 = G__47106;
i__47095 = G__47107;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__47108__i = 0, G__47108__a = new Array(arguments.length -  1);
while (G__47108__i < G__47108__a.length) {G__47108__a[G__47108__i] = arguments[G__47108__i + 1]; ++G__47108__i;}
  ss = new cljs.core.IndexedSeq(G__47108__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__47109){
var writer = cljs.core.first(arglist__47109);
var ss = cljs.core.rest(arglist__47109);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj47111 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj47111;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__47114 = "[\\\\\"\b\f\n\r\t]";
var G__47115 = "g";
return RegExp(G__47114,G__47115);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
cljs.core.pr_writer_impl = (function pr_writer_impl(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__31925__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,cljs.core.constant$keyword$3);
if(cljs.core.truth_(and__31925__auto__)){
var and__31925__auto____$1 = (function (){var G__47129 = obj;
if(G__47129){
var bit__32618__auto__ = (G__47129.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__32618__auto__) || (G__47129.cljs$core$IMeta$)){
return true;
} else {
if((!G__47129.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__47129);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__47129);
}
})();
if(and__31925__auto____$1){
return cljs.core.meta(obj);
} else {
return and__31925__auto____$1;
}
} else {
return and__31925__auto__;
}
})())){
cljs.core._write(writer,"^");

var G__47130_47140 = cljs.core.meta(obj);
var G__47131_47141 = writer;
var G__47132_47142 = opts;
(cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__47130_47140,G__47131_47141,G__47132_47142) : cljs.core.pr_writer.call(null,G__47130_47140,G__47131_47141,G__47132_47142));

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__47133 = obj;
if(G__47133){
var bit__32611__auto__ = (G__47133.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__32611__auto__) || (G__47133.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__47134 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__47135 = cljs.core.pr_writer;
var G__47136 = writer;
var G__47137 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__47134,G__47135,G__47136,G__47137) : cljs.core.print_map.call(null,G__47134,G__47135,G__47136,G__47137));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__47138 = obj;
return goog.isString(G__47138);
})())){
if(cljs.core.truth_(cljs.core.constant$keyword$2.cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__47143 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__47143;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__47139 = obj;
if(G__47139){
var bit__32618__auto__ = (G__47139.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__32618__auto__) || (G__47139.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__47139.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__47139);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__47139);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
var temp__4124__auto__ = cljs.core.constant$keyword$12.cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(temp__4124__auto__)){
var alt_impl = temp__4124__auto__;
var G__47147 = obj;
var G__47148 = writer;
var G__47149 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,cljs.core.constant$keyword$13,cljs.core.pr_writer_impl);
return (alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__47147,G__47148,G__47149) : alt_impl.call(null,G__47147,G__47148,G__47149));
} else {
return cljs.core.pr_writer_impl(obj,writer,opts);
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__47154 = cljs.core.seq(cljs.core.next(objs));
var chunk__47155 = null;
var count__47156 = (0);
var i__47157 = (0);
while(true){
if((i__47157 < count__47156)){
var obj = chunk__47155.cljs$core$IIndexed$_nth$arity$2(null,i__47157);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__47158 = seq__47154;
var G__47159 = chunk__47155;
var G__47160 = count__47156;
var G__47161 = (i__47157 + (1));
seq__47154 = G__47158;
chunk__47155 = G__47159;
count__47156 = G__47160;
i__47157 = G__47161;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__47154);
if(temp__4126__auto__){
var seq__47154__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__47154__$1)){
var c__32724__auto__ = cljs.core.chunk_first(seq__47154__$1);
var G__47162 = cljs.core.chunk_rest(seq__47154__$1);
var G__47163 = c__32724__auto__;
var G__47164 = cljs.core.count(c__32724__auto__);
var G__47165 = (0);
seq__47154 = G__47162;
chunk__47155 = G__47163;
count__47156 = G__47164;
i__47157 = G__47165;
continue;
} else {
var obj = cljs.core.first(seq__47154__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__47166 = cljs.core.next(seq__47154__$1);
var G__47167 = null;
var G__47168 = (0);
var G__47169 = (0);
seq__47154 = G__47166;
chunk__47155 = G__47167;
count__47156 = G__47168;
i__47157 = G__47169;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,cljs.core.constant$keyword$1))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__47170__i = 0, G__47170__a = new Array(arguments.length -  0);
while (G__47170__i < G__47170__a.length) {G__47170__a[G__47170__i] = arguments[G__47170__i + 0]; ++G__47170__i;}
  objs = new cljs.core.IndexedSeq(G__47170__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__47171){
var objs = cljs.core.seq(arglist__47171);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__47172__i = 0, G__47172__a = new Array(arguments.length -  0);
while (G__47172__i < G__47172__a.length) {G__47172__a[G__47172__i] = arguments[G__47172__i + 0]; ++G__47172__i;}
  objs = new cljs.core.IndexedSeq(G__47172__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__47173){
var objs = cljs.core.seq(arglist__47173);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__47174__i = 0, G__47174__a = new Array(arguments.length -  0);
while (G__47174__i < G__47174__a.length) {G__47174__a[G__47174__i] = arguments[G__47174__i + 0]; ++G__47174__i;}
  objs = new cljs.core.IndexedSeq(G__47174__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__47175){
var objs = cljs.core.seq(arglist__47175);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$2,false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__47176__i = 0, G__47176__a = new Array(arguments.length -  0);
while (G__47176__i < G__47176__a.length) {G__47176__a[G__47176__i] = arguments[G__47176__i + 0]; ++G__47176__i;}
  objs = new cljs.core.IndexedSeq(G__47176__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__47177){
var objs = cljs.core.seq(arglist__47177);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$2,false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__47178__i = 0, G__47178__a = new Array(arguments.length -  0);
while (G__47178__i < G__47178__a.length) {G__47178__a[G__47178__i] = arguments[G__47178__i + 0]; ++G__47178__i;}
  objs = new cljs.core.IndexedSeq(G__47178__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__47179){
var objs = cljs.core.seq(arglist__47179);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$2,false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__47180__i = 0, G__47180__a = new Array(arguments.length -  0);
while (G__47180__i < G__47180__a.length) {G__47180__a[G__47180__i] = arguments[G__47180__i + 0]; ++G__47180__i;}
  objs = new cljs.core.IndexedSeq(G__47180__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__47181){
var objs = cljs.core.seq(arglist__47181);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$2,false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__47182__i = 0, G__47182__a = new Array(arguments.length -  0);
while (G__47182__i < G__47182__a.length) {G__47182__a[G__47182__i] = arguments[G__47182__i + 0]; ++G__47182__i;}
  objs = new cljs.core.IndexedSeq(G__47182__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__47183){
var objs = cljs.core.seq(arglist__47183);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__47184__i = 0, G__47184__a = new Array(arguments.length -  0);
while (G__47184__i < G__47184__a.length) {G__47184__a[G__47184__i] = arguments[G__47184__i + 0]; ++G__47184__i;}
  objs = new cljs.core.IndexedSeq(G__47184__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__47185){
var objs = cljs.core.seq(arglist__47185);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__47192_47198 = cljs.core.key(e);
var G__47193_47199 = w;
var G__47194_47200 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__47192_47198,G__47193_47199,G__47194_47200) : print_one.call(null,G__47192_47198,G__47193_47199,G__47194_47200));

cljs.core._write(w," ");

var G__47195 = cljs.core.val(e);
var G__47196 = w;
var G__47197 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__47195,G__47196,G__47197) : print_one.call(null,G__47195,G__47196,G__47197));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__47201__i = 0, G__47201__a = new Array(arguments.length -  2);
while (G__47201__i < G__47201__a.length) {G__47201__a[G__47201__i] = arguments[G__47201__i + 2]; ++G__47201__i;}
  args = new cljs.core.IndexedSeq(G__47201__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__47202){
var iref = cljs.core.first(arglist__47202);
arglist__47202 = cljs.core.next(arglist__47202);
var f = cljs.core.first(arglist__47202);
var args = cljs.core.rest(arglist__47202);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__47205 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__47205) : cljs.core.atom.call(null,G__47205));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__32524__auto__,writer__32525__auto__,opt__32526__auto__){
return cljs.core._write(writer__32525__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__47207 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__47207) : cljs.core.deref.call(null,G__47207));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__47208_SHARP_,p2__47209_SHARP_){
var ret = (function (){var G__47212 = p1__47208_SHARP_;
var G__47213 = p2__47209_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__47212,G__47213) : rf.call(null,G__47212,G__47213));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__47216 = null;
var G__47216__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__47216__1 = (function (result){
var G__47215 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__47215) : rf.call(null,G__47215));
});
var G__47216__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__47216 = function(result,input){
switch(arguments.length){
case 0:
return G__47216__0.call(this);
case 1:
return G__47216__1.call(this,result);
case 2:
return G__47216__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__47216.cljs$core$IFn$_invoke$arity$0 = G__47216__0;
G__47216.cljs$core$IFn$_invoke$arity$1 = G__47216__1;
G__47216.cljs$core$IFn$_invoke$arity$2 = G__47216__2;
return G__47216;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(cljs.core.constant$keyword$10);
return ((function (pa){
return (function() {
var G__47225 = null;
var G__47225__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__47225__1 = (function (result){
var G__47221 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__47221) : rf.call(null,G__47221));
});
var G__47225__2 = (function (result,input){
var prior = (function (){var G__47222 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__47222) : cljs.core.deref.call(null,G__47222));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__47223 = result;
var G__47224 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__47223,G__47224) : rf.call(null,G__47223,G__47224));
}
});
G__47225 = function(result,input){
switch(arguments.length){
case 0:
return G__47225__0.call(this);
case 1:
return G__47225__1.call(this,result);
case 2:
return G__47225__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__47225.cljs$core$IFn$_invoke$arity$0 = G__47225__0;
G__47225.cljs$core$IFn$_invoke$arity$1 = G__47225__1;
G__47225.cljs$core$IFn$_invoke$arity$2 = G__47225__2;
return G__47225;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__32524__auto__,writer__32525__auto__,opt__32526__auto__){
return cljs.core._write(writer__32525__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__32915__auto__ = this;
return cljs.core.es6_iterator(this__32915__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__47227_SHARP_,p2__47226_SHARP_){
var G__47229 = p2__47226_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__47229) : proc.call(null,G__47229));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj47231 = {};
return obj47231;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__31925__auto__ = x;
if(and__31925__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__31925__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__32581__auto__ = (((x == null))?null:x);
return (function (){var or__31937__auto__ = (cljs.core._clj__GT_js[(function (){var G__47235 = x__32581__auto__;
return goog.typeOf(G__47235);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__31925__auto__ = x;
if(and__31925__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__31925__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__32581__auto__ = (((x == null))?null:x);
return (function (){var or__31937__auto__ = (cljs.core._key__GT_js[(function (){var G__47239 = x__32581__auto__;
return goog.typeOf(G__47239);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__47242 = k;
if(G__47242){
var bit__32618__auto__ = null;
if(cljs.core.truth_((function (){var or__31937__auto__ = bit__32618__auto__;
if(cljs.core.truth_(or__31937__auto__)){
return or__31937__auto__;
} else {
return G__47242.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__47242.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__47242);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__47242);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__47243 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__47243) : cljs.core.clj__GT_js.call(null,G__47243));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__47259 = x;
if(G__47259){
var bit__32618__auto__ = null;
if(cljs.core.truth_((function (){var or__31937__auto__ = bit__32618__auto__;
if(cljs.core.truth_(or__31937__auto__)){
return or__31937__auto__;
} else {
return G__47259.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__47259.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__47259);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__47259);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj47261 = {};
return obj47261;
})();
var seq__47262_47272 = cljs.core.seq(x);
var chunk__47263_47273 = null;
var count__47264_47274 = (0);
var i__47265_47275 = (0);
while(true){
if((i__47265_47275 < count__47264_47274)){
var vec__47266_47276 = chunk__47263_47273.cljs$core$IIndexed$_nth$arity$2(null,i__47265_47275);
var k_47277 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47266_47276,(0),null);
var v_47278 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47266_47276,(1),null);
(m[cljs.core.key__GT_js(k_47277)] = clj__GT_js(v_47278));

var G__47279 = seq__47262_47272;
var G__47280 = chunk__47263_47273;
var G__47281 = count__47264_47274;
var G__47282 = (i__47265_47275 + (1));
seq__47262_47272 = G__47279;
chunk__47263_47273 = G__47280;
count__47264_47274 = G__47281;
i__47265_47275 = G__47282;
continue;
} else {
var temp__4126__auto___47283 = cljs.core.seq(seq__47262_47272);
if(temp__4126__auto___47283){
var seq__47262_47284__$1 = temp__4126__auto___47283;
if(cljs.core.chunked_seq_QMARK_(seq__47262_47284__$1)){
var c__32724__auto___47285 = cljs.core.chunk_first(seq__47262_47284__$1);
var G__47286 = cljs.core.chunk_rest(seq__47262_47284__$1);
var G__47287 = c__32724__auto___47285;
var G__47288 = cljs.core.count(c__32724__auto___47285);
var G__47289 = (0);
seq__47262_47272 = G__47286;
chunk__47263_47273 = G__47287;
count__47264_47274 = G__47288;
i__47265_47275 = G__47289;
continue;
} else {
var vec__47267_47290 = cljs.core.first(seq__47262_47284__$1);
var k_47291 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47267_47290,(0),null);
var v_47292 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47267_47290,(1),null);
(m[cljs.core.key__GT_js(k_47291)] = clj__GT_js(v_47292));

var G__47293 = cljs.core.next(seq__47262_47284__$1);
var G__47294 = null;
var G__47295 = (0);
var G__47296 = (0);
seq__47262_47272 = G__47293;
chunk__47263_47273 = G__47294;
count__47264_47274 = G__47295;
i__47265_47275 = G__47296;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__47268_47297 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__47269_47298 = null;
var count__47270_47299 = (0);
var i__47271_47300 = (0);
while(true){
if((i__47271_47300 < count__47270_47299)){
var x_47301__$1 = chunk__47269_47298.cljs$core$IIndexed$_nth$arity$2(null,i__47271_47300);
arr.push(x_47301__$1);

var G__47302 = seq__47268_47297;
var G__47303 = chunk__47269_47298;
var G__47304 = count__47270_47299;
var G__47305 = (i__47271_47300 + (1));
seq__47268_47297 = G__47302;
chunk__47269_47298 = G__47303;
count__47270_47299 = G__47304;
i__47271_47300 = G__47305;
continue;
} else {
var temp__4126__auto___47306 = cljs.core.seq(seq__47268_47297);
if(temp__4126__auto___47306){
var seq__47268_47307__$1 = temp__4126__auto___47306;
if(cljs.core.chunked_seq_QMARK_(seq__47268_47307__$1)){
var c__32724__auto___47308 = cljs.core.chunk_first(seq__47268_47307__$1);
var G__47309 = cljs.core.chunk_rest(seq__47268_47307__$1);
var G__47310 = c__32724__auto___47308;
var G__47311 = cljs.core.count(c__32724__auto___47308);
var G__47312 = (0);
seq__47268_47297 = G__47309;
chunk__47269_47298 = G__47310;
count__47270_47299 = G__47311;
i__47271_47300 = G__47312;
continue;
} else {
var x_47313__$1 = cljs.core.first(seq__47268_47307__$1);
arr.push(x_47313__$1);

var G__47314 = cljs.core.next(seq__47268_47307__$1);
var G__47315 = null;
var G__47316 = (0);
var G__47317 = (0);
seq__47268_47297 = G__47314;
chunk__47269_47298 = G__47315;
count__47270_47299 = G__47316;
i__47271_47300 = G__47317;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj47319 = {};
return obj47319;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__31925__auto__ = x;
if(and__31925__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__31925__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__32581__auto__ = (((x == null))?null:x);
return (function (){var or__31937__auto__ = (cljs.core._js__GT_clj[(function (){var G__47323 = x__32581__auto__;
return goog.typeOf(G__47323);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$14,false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__47380__delegate = function (x,opts){
var map__47353 = opts;
var map__47353__$1 = ((cljs.core.seq_QMARK_(map__47353))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__47353):map__47353);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__47353__$1,cljs.core.constant$keyword$14);
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__47353,map__47353__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__47369 = x__$1;
if(G__47369){
var bit__32618__auto__ = null;
if(cljs.core.truth_((function (){var or__31937__auto__ = bit__32618__auto__;
if(cljs.core.truth_(or__31937__auto__)){
return or__31937__auto__;
} else {
return G__47369.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__47369.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__47369);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__47369);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__32693__auto__ = ((function (map__47353,map__47353__$1,keywordize_keys,keyfn){
return (function iter__47370(s__47371){
return (new cljs.core.LazySeq(null,((function (map__47353,map__47353__$1,keywordize_keys,keyfn){
return (function (){
var s__47371__$1 = s__47371;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__47371__$1);
if(temp__4126__auto__){
var s__47371__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__47371__$2)){
var c__32691__auto__ = cljs.core.chunk_first(s__47371__$2);
var size__32692__auto__ = cljs.core.count(c__32691__auto__);
var b__47373 = cljs.core.chunk_buffer(size__32692__auto__);
if((function (){var i__47372 = (0);
while(true){
if((i__47372 < size__32692__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__32691__auto__,i__47372);
cljs.core.chunk_append(b__47373,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__47378 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__47378) : keyfn.call(null,G__47378));
})(),thisfn((x__$1[k]))], null));

var G__47381 = (i__47372 + (1));
i__47372 = G__47381;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__47373),iter__47370(cljs.core.chunk_rest(s__47371__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__47373),null);
}
} else {
var k = cljs.core.first(s__47371__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__47379 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__47379) : keyfn.call(null,G__47379));
})(),thisfn((x__$1[k]))], null),iter__47370(cljs.core.rest(s__47371__$2)));
}
} else {
return null;
}
break;
}
});})(map__47353,map__47353__$1,keywordize_keys,keyfn))
,null,null));
});})(map__47353,map__47353__$1,keywordize_keys,keyfn))
;
return iter__32693__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__47353,map__47353__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__47380 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__47382__i = 0, G__47382__a = new Array(arguments.length -  1);
while (G__47382__i < G__47382__a.length) {G__47382__a[G__47382__i] = arguments[G__47382__i + 1]; ++G__47382__i;}
  opts = new cljs.core.IndexedSeq(G__47382__a,0);
} 
return G__47380__delegate.call(this,x,opts);};
G__47380.cljs$lang$maxFixedArity = 1;
G__47380.cljs$lang$applyTo = (function (arglist__47383){
var x = cljs.core.first(arglist__47383);
var opts = cljs.core.rest(arglist__47383);
return G__47380__delegate(x,opts);
});
G__47380.cljs$core$IFn$_invoke$arity$variadic = G__47380__delegate;
return G__47380;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__47384 = null;
if (arguments.length > 1) {
var G__47385__i = 0, G__47385__a = new Array(arguments.length -  1);
while (G__47385__i < G__47385__a.length) {G__47385__a[G__47385__i] = arguments[G__47385__i + 1]; ++G__47385__i;}
G__47384 = new cljs.core.IndexedSeq(G__47385__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__47384);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__47388 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__47388) : cljs.core.atom.call(null,G__47388));
})();
return ((function (mem){
return (function() { 
var G__47390__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__47389 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__47389) : cljs.core.deref.call(null,G__47389));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__47390 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__47391__i = 0, G__47391__a = new Array(arguments.length -  0);
while (G__47391__i < G__47391__a.length) {G__47391__a[G__47391__i] = arguments[G__47391__i + 0]; ++G__47391__i;}
  args = new cljs.core.IndexedSeq(G__47391__a,0);
} 
return G__47390__delegate.call(this,args);};
G__47390.cljs$lang$maxFixedArity = 0;
G__47390.cljs$lang$applyTo = (function (arglist__47392){
var args = cljs.core.seq(arglist__47392);
return G__47390__delegate(args);
});
G__47390.cljs$core$IFn$_invoke$arity$variadic = G__47390__delegate;
return G__47390;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__47394 = ret;
f = G__47394;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__47395__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__47395 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__47396__i = 0, G__47396__a = new Array(arguments.length -  1);
while (G__47396__i < G__47396__a.length) {G__47396__a[G__47396__i] = arguments[G__47396__i + 1]; ++G__47396__i;}
  args = new cljs.core.IndexedSeq(G__47396__a,0);
} 
return G__47395__delegate.call(this,f,args);};
G__47395.cljs$lang$maxFixedArity = 1;
G__47395.cljs$lang$applyTo = (function (arglist__47397){
var f = cljs.core.first(arglist__47397);
var args = cljs.core.rest(arglist__47397);
return G__47395__delegate(f,args);
});
G__47395.cljs$core$IFn$_invoke$arity$variadic = G__47395__delegate;
return G__47395;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__47398 = null;
if (arguments.length > 1) {
var G__47399__i = 0, G__47399__a = new Array(arguments.length -  1);
while (G__47399__i < G__47399__a.length) {G__47399__a[G__47399__i] = arguments[G__47399__i + 1]; ++G__47399__i;}
G__47398 = new cljs.core.IndexedSeq(G__47399__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__47398);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__47402 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__47402) : Math.floor.call(null,G__47402));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__47404 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__47404) : f.call(null,G__47404));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$15,cljs.core.PersistentArrayMap.EMPTY,cljs.core.constant$keyword$16,cljs.core.PersistentArrayMap.EMPTY,cljs.core.constant$keyword$17,cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__47406 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__47406) : cljs.core.atom.call(null,G__47406));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__47407__i = 0, G__47407__a = new Array(arguments.length -  1);
while (G__47407__i < G__47407__a.length) {G__47407__a[G__47407__i] = arguments[G__47407__i + 1]; ++G__47407__i;}
  args = new cljs.core.IndexedSeq(G__47407__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__47408){
var f = cljs.core.first(arglist__47408);
var args = cljs.core.rest(arglist__47408);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__47473 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__47473) : cljs.core.deref.call(null,G__47473));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__31937__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = cljs.core.contains_QMARK_(cljs.core.constant$keyword$17.cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
var and__31925__auto__ = cljs.core.vector_QMARK_(parent);
if(and__31925__auto__){
var and__31925__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__31925__auto____$1){
var and__31925__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__31925__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__47498 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__47496 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__47496) : child.call(null,G__47496));
})(),(function (){var G__47497 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__47497) : parent.call(null,G__47497));
})());
var G__47499 = (i + (1));
ret = G__47498;
i = G__47499;
continue;
}
break;
}
} else {
return and__31925__auto____$2;
}
} else {
return and__31925__auto____$1;
}
} else {
return and__31925__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__47503 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__47503) : cljs.core.deref.call(null,G__47503));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$15.cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__47507 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__47507) : cljs.core.deref.call(null,G__47507));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$17.cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__47511 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__47511) : cljs.core.deref.call(null,G__47511));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$16.cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = cljs.core.constant$keyword$15.cljs$core$IFn$_invoke$arity$1(h);
var td = cljs.core.constant$keyword$16.cljs$core$IFn$_invoke$arity$1(h);
var ta = cljs.core.constant$keyword$17.cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__47520 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__47520) : targets.call(null,G__47520));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__47521 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__47521) : sources.call(null,G__47521));
})()));
});})(tp,td,ta))
;
var or__31937__auto__ = ((cljs.core.contains_QMARK_((function (){var G__47525 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__47525) : tp.call(null,G__47525));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__47526 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__47526) : ta.call(null,G__47526));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__47527 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__47527) : ta.call(null,G__47527));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$15,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.constant$keyword$15.cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),cljs.core.constant$keyword$17,tf(cljs.core.constant$keyword$17.cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),cljs.core.constant$keyword$16,tf(cljs.core.constant$keyword$16.cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__31937__auto__)){
return or__31937__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = cljs.core.constant$keyword$15.cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__47534 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__47534) : parentMap.call(null,G__47534));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__47535 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__47535) : parentMap.call(null,G__47535));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__47528_SHARP_){
return cljs.core.cons(cljs.core.first(p1__47528_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__47528_SHARP_),cljs.core.second(p1__47528_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__47536 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__47536) : parentMap.call(null,G__47536));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__47529_SHARP_,p2__47530_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__47529_SHARP_,p2__47530_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__47539 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__47539) : cljs.core.deref.call(null,G__47539));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__47540 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__47540) : cljs.core.deref.call(null,G__47540));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__47556 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__47556) : cljs.core.deref.call(null,G__47556));
})().call(null,x);
var or__31937__auto__ = (cljs.core.truth_((function (){var and__31925__auto__ = xprefs;
if(cljs.core.truth_(and__31925__auto__)){
var G__47558 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__47558) : xprefs.call(null,G__47558));
} else {
return and__31925__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__31937__auto__)){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__47559 = cljs.core.rest(ps);
ps = G__47559;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__31937__auto____$1)){
return or__31937__auto____$1;
} else {
var or__31937__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__47560 = cljs.core.rest(ps);
ps = G__47560;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__31937__auto____$2)){
return or__31937__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__31937__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__31937__auto__)){
return or__31937__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__47574){
var vec__47575 = p__47574;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47575,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47575,(1),null);
var e = vec__47575;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__47576 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__47576) : cljs.core.deref.call(null,G__47576));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__31937__auto__ = (be == null);
if(or__31937__auto__){
return or__31937__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__47577 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__47577) : cljs.core.deref.call(null,G__47577));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__47578 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__47578) : cljs.core.deref.call(null,G__47578));
})(),(function (){var G__47579 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__47579) : cljs.core.deref.call(null,G__47579));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj47581 = {};
return obj47581;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__31925__auto__ = mf;
if(and__31925__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__31925__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__32581__auto__ = (((mf == null))?null:mf);
return (function (){var or__31937__auto__ = (cljs.core._reset[(function (){var G__47585 = x__32581__auto__;
return goog.typeOf(G__47585);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._reset["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__31925__auto__ = mf;
if(and__31925__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__31925__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__32581__auto__ = (((mf == null))?null:mf);
return (function (){var or__31937__auto__ = (cljs.core._add_method[(function (){var G__47589 = x__32581__auto__;
return goog.typeOf(G__47589);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._add_method["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__31925__auto__ = mf;
if(and__31925__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__31925__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__32581__auto__ = (((mf == null))?null:mf);
return (function (){var or__31937__auto__ = (cljs.core._remove_method[(function (){var G__47593 = x__32581__auto__;
return goog.typeOf(G__47593);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._remove_method["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__31925__auto__ = mf;
if(and__31925__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__31925__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__32581__auto__ = (((mf == null))?null:mf);
return (function (){var or__31937__auto__ = (cljs.core._prefer_method[(function (){var G__47597 = x__32581__auto__;
return goog.typeOf(G__47597);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__31925__auto__ = mf;
if(and__31925__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__31925__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__32581__auto__ = (((mf == null))?null:mf);
return (function (){var or__31937__auto__ = (cljs.core._get_method[(function (){var G__47601 = x__32581__auto__;
return goog.typeOf(G__47601);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._get_method["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__31925__auto__ = mf;
if(and__31925__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__31925__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__32581__auto__ = (((mf == null))?null:mf);
return (function (){var or__31937__auto__ = (cljs.core._methods[(function (){var G__47605 = x__32581__auto__;
return goog.typeOf(G__47605);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._methods["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__31925__auto__ = mf;
if(and__31925__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__31925__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__32581__auto__ = (((mf == null))?null:mf);
return (function (){var or__31937__auto__ = (cljs.core._prefers[(function (){var G__47609 = x__32581__auto__;
return goog.typeOf(G__47609);
})()]);
if(or__31937__auto__){
return or__31937__auto__;
} else {
var or__31937__auto____$1 = (cljs.core._prefers["_"]);
if(or__31937__auto____$1){
return or__31937__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__47611 = this$__$1;
return goog.getUid(G__47611);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__47612 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__47612) : cljs.core.deref.call(null,G__47612));
})(),(function (){var G__47613 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__47613) : cljs.core.deref.call(null,G__47613));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__47614 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__47614) : cljs.core.deref.call(null,G__47614));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__47615 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__47615) : cljs.core.deref.call(null,G__47615));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__47616 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__47616) : cljs.core.deref.call(null,G__47616));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__47617 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__47617) : cljs.core.deref.call(null,G__47617));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__48458 = null;
var G__48458__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__48458__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__47618 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__47618) : self__.dispatch_fn.call(null,G__47618));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__47619 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__47619) : target_fn.call(null,G__47619));
});
var G__48458__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__47620 = a;
var G__47621 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__47620,G__47621) : self__.dispatch_fn.call(null,G__47620,G__47621));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__47622 = a;
var G__47623 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__47622,G__47623) : target_fn.call(null,G__47622,G__47623));
});
var G__48458__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__47624 = a;
var G__47625 = b;
var G__47626 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__47624,G__47625,G__47626) : self__.dispatch_fn.call(null,G__47624,G__47625,G__47626));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__47627 = a;
var G__47628 = b;
var G__47629 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__47627,G__47628,G__47629) : target_fn.call(null,G__47627,G__47628,G__47629));
});
var G__48458__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__47630 = a;
var G__47631 = b;
var G__47632 = c;
var G__47633 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__47630,G__47631,G__47632,G__47633) : self__.dispatch_fn.call(null,G__47630,G__47631,G__47632,G__47633));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__47634 = a;
var G__47635 = b;
var G__47636 = c;
var G__47637 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__47634,G__47635,G__47636,G__47637) : target_fn.call(null,G__47634,G__47635,G__47636,G__47637));
});
var G__48458__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__47638 = a;
var G__47639 = b;
var G__47640 = c;
var G__47641 = d;
var G__47642 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__47638,G__47639,G__47640,G__47641,G__47642) : self__.dispatch_fn.call(null,G__47638,G__47639,G__47640,G__47641,G__47642));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__47643 = a;
var G__47644 = b;
var G__47645 = c;
var G__47646 = d;
var G__47647 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__47643,G__47644,G__47645,G__47646,G__47647) : target_fn.call(null,G__47643,G__47644,G__47645,G__47646,G__47647));
});
var G__48458__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__47648 = a;
var G__47649 = b;
var G__47650 = c;
var G__47651 = d;
var G__47652 = e;
var G__47653 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__47648,G__47649,G__47650,G__47651,G__47652,G__47653) : self__.dispatch_fn.call(null,G__47648,G__47649,G__47650,G__47651,G__47652,G__47653));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__47654 = a;
var G__47655 = b;
var G__47656 = c;
var G__47657 = d;
var G__47658 = e;
var G__47659 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__47654,G__47655,G__47656,G__47657,G__47658,G__47659) : target_fn.call(null,G__47654,G__47655,G__47656,G__47657,G__47658,G__47659));
});
var G__48458__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__47660 = a;
var G__47661 = b;
var G__47662 = c;
var G__47663 = d;
var G__47664 = e;
var G__47665 = f;
var G__47666 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__47660,G__47661,G__47662,G__47663,G__47664,G__47665,G__47666) : self__.dispatch_fn.call(null,G__47660,G__47661,G__47662,G__47663,G__47664,G__47665,G__47666));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__47667 = a;
var G__47668 = b;
var G__47669 = c;
var G__47670 = d;
var G__47671 = e;
var G__47672 = f;
var G__47673 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__47667,G__47668,G__47669,G__47670,G__47671,G__47672,G__47673) : target_fn.call(null,G__47667,G__47668,G__47669,G__47670,G__47671,G__47672,G__47673));
});
var G__48458__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__47674 = a;
var G__47675 = b;
var G__47676 = c;
var G__47677 = d;
var G__47678 = e;
var G__47679 = f;
var G__47680 = g;
var G__47681 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__47674,G__47675,G__47676,G__47677,G__47678,G__47679,G__47680,G__47681) : self__.dispatch_fn.call(null,G__47674,G__47675,G__47676,G__47677,G__47678,G__47679,G__47680,G__47681));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__47682 = a;
var G__47683 = b;
var G__47684 = c;
var G__47685 = d;
var G__47686 = e;
var G__47687 = f;
var G__47688 = g;
var G__47689 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__47682,G__47683,G__47684,G__47685,G__47686,G__47687,G__47688,G__47689) : target_fn.call(null,G__47682,G__47683,G__47684,G__47685,G__47686,G__47687,G__47688,G__47689));
});
var G__48458__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__47690 = a;
var G__47691 = b;
var G__47692 = c;
var G__47693 = d;
var G__47694 = e;
var G__47695 = f;
var G__47696 = g;
var G__47697 = h;
var G__47698 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__47690,G__47691,G__47692,G__47693,G__47694,G__47695,G__47696,G__47697,G__47698) : self__.dispatch_fn.call(null,G__47690,G__47691,G__47692,G__47693,G__47694,G__47695,G__47696,G__47697,G__47698));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__47699 = a;
var G__47700 = b;
var G__47701 = c;
var G__47702 = d;
var G__47703 = e;
var G__47704 = f;
var G__47705 = g;
var G__47706 = h;
var G__47707 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__47699,G__47700,G__47701,G__47702,G__47703,G__47704,G__47705,G__47706,G__47707) : target_fn.call(null,G__47699,G__47700,G__47701,G__47702,G__47703,G__47704,G__47705,G__47706,G__47707));
});
var G__48458__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__47708 = a;
var G__47709 = b;
var G__47710 = c;
var G__47711 = d;
var G__47712 = e;
var G__47713 = f;
var G__47714 = g;
var G__47715 = h;
var G__47716 = i;
var G__47717 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__47708,G__47709,G__47710,G__47711,G__47712,G__47713,G__47714,G__47715,G__47716,G__47717) : self__.dispatch_fn.call(null,G__47708,G__47709,G__47710,G__47711,G__47712,G__47713,G__47714,G__47715,G__47716,G__47717));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__47718 = a;
var G__47719 = b;
var G__47720 = c;
var G__47721 = d;
var G__47722 = e;
var G__47723 = f;
var G__47724 = g;
var G__47725 = h;
var G__47726 = i;
var G__47727 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__47718,G__47719,G__47720,G__47721,G__47722,G__47723,G__47724,G__47725,G__47726,G__47727) : target_fn.call(null,G__47718,G__47719,G__47720,G__47721,G__47722,G__47723,G__47724,G__47725,G__47726,G__47727));
});
var G__48458__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__47728 = a;
var G__47729 = b;
var G__47730 = c;
var G__47731 = d;
var G__47732 = e;
var G__47733 = f;
var G__47734 = g;
var G__47735 = h;
var G__47736 = i;
var G__47737 = j;
var G__47738 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__47728,G__47729,G__47730,G__47731,G__47732,G__47733,G__47734,G__47735,G__47736,G__47737,G__47738) : self__.dispatch_fn.call(null,G__47728,G__47729,G__47730,G__47731,G__47732,G__47733,G__47734,G__47735,G__47736,G__47737,G__47738));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__47739 = a;
var G__47740 = b;
var G__47741 = c;
var G__47742 = d;
var G__47743 = e;
var G__47744 = f;
var G__47745 = g;
var G__47746 = h;
var G__47747 = i;
var G__47748 = j;
var G__47749 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__47739,G__47740,G__47741,G__47742,G__47743,G__47744,G__47745,G__47746,G__47747,G__47748,G__47749) : target_fn.call(null,G__47739,G__47740,G__47741,G__47742,G__47743,G__47744,G__47745,G__47746,G__47747,G__47748,G__47749));
});
var G__48458__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__47750 = a;
var G__47751 = b;
var G__47752 = c;
var G__47753 = d;
var G__47754 = e;
var G__47755 = f;
var G__47756 = g;
var G__47757 = h;
var G__47758 = i;
var G__47759 = j;
var G__47760 = k;
var G__47761 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__47750,G__47751,G__47752,G__47753,G__47754,G__47755,G__47756,G__47757,G__47758,G__47759,G__47760,G__47761) : self__.dispatch_fn.call(null,G__47750,G__47751,G__47752,G__47753,G__47754,G__47755,G__47756,G__47757,G__47758,G__47759,G__47760,G__47761));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__47762 = a;
var G__47763 = b;
var G__47764 = c;
var G__47765 = d;
var G__47766 = e;
var G__47767 = f;
var G__47768 = g;
var G__47769 = h;
var G__47770 = i;
var G__47771 = j;
var G__47772 = k;
var G__47773 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__47762,G__47763,G__47764,G__47765,G__47766,G__47767,G__47768,G__47769,G__47770,G__47771,G__47772,G__47773) : target_fn.call(null,G__47762,G__47763,G__47764,G__47765,G__47766,G__47767,G__47768,G__47769,G__47770,G__47771,G__47772,G__47773));
});
var G__48458__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__47774 = a;
var G__47775 = b;
var G__47776 = c;
var G__47777 = d;
var G__47778 = e;
var G__47779 = f;
var G__47780 = g;
var G__47781 = h;
var G__47782 = i;
var G__47783 = j;
var G__47784 = k;
var G__47785 = l;
var G__47786 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__47774,G__47775,G__47776,G__47777,G__47778,G__47779,G__47780,G__47781,G__47782,G__47783,G__47784,G__47785,G__47786) : self__.dispatch_fn.call(null,G__47774,G__47775,G__47776,G__47777,G__47778,G__47779,G__47780,G__47781,G__47782,G__47783,G__47784,G__47785,G__47786));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__47787 = a;
var G__47788 = b;
var G__47789 = c;
var G__47790 = d;
var G__47791 = e;
var G__47792 = f;
var G__47793 = g;
var G__47794 = h;
var G__47795 = i;
var G__47796 = j;
var G__47797 = k;
var G__47798 = l;
var G__47799 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__47787,G__47788,G__47789,G__47790,G__47791,G__47792,G__47793,G__47794,G__47795,G__47796,G__47797,G__47798,G__47799) : target_fn.call(null,G__47787,G__47788,G__47789,G__47790,G__47791,G__47792,G__47793,G__47794,G__47795,G__47796,G__47797,G__47798,G__47799));
});
var G__48458__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__47800 = a;
var G__47801 = b;
var G__47802 = c;
var G__47803 = d;
var G__47804 = e;
var G__47805 = f;
var G__47806 = g;
var G__47807 = h;
var G__47808 = i;
var G__47809 = j;
var G__47810 = k;
var G__47811 = l;
var G__47812 = m;
var G__47813 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__47800,G__47801,G__47802,G__47803,G__47804,G__47805,G__47806,G__47807,G__47808,G__47809,G__47810,G__47811,G__47812,G__47813) : self__.dispatch_fn.call(null,G__47800,G__47801,G__47802,G__47803,G__47804,G__47805,G__47806,G__47807,G__47808,G__47809,G__47810,G__47811,G__47812,G__47813));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__47814 = a;
var G__47815 = b;
var G__47816 = c;
var G__47817 = d;
var G__47818 = e;
var G__47819 = f;
var G__47820 = g;
var G__47821 = h;
var G__47822 = i;
var G__47823 = j;
var G__47824 = k;
var G__47825 = l;
var G__47826 = m;
var G__47827 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__47814,G__47815,G__47816,G__47817,G__47818,G__47819,G__47820,G__47821,G__47822,G__47823,G__47824,G__47825,G__47826,G__47827) : target_fn.call(null,G__47814,G__47815,G__47816,G__47817,G__47818,G__47819,G__47820,G__47821,G__47822,G__47823,G__47824,G__47825,G__47826,G__47827));
});
var G__48458__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__47828 = a;
var G__47829 = b;
var G__47830 = c;
var G__47831 = d;
var G__47832 = e;
var G__47833 = f;
var G__47834 = g;
var G__47835 = h;
var G__47836 = i;
var G__47837 = j;
var G__47838 = k;
var G__47839 = l;
var G__47840 = m;
var G__47841 = n;
var G__47842 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__47828,G__47829,G__47830,G__47831,G__47832,G__47833,G__47834,G__47835,G__47836,G__47837,G__47838,G__47839,G__47840,G__47841,G__47842) : self__.dispatch_fn.call(null,G__47828,G__47829,G__47830,G__47831,G__47832,G__47833,G__47834,G__47835,G__47836,G__47837,G__47838,G__47839,G__47840,G__47841,G__47842));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__47843 = a;
var G__47844 = b;
var G__47845 = c;
var G__47846 = d;
var G__47847 = e;
var G__47848 = f;
var G__47849 = g;
var G__47850 = h;
var G__47851 = i;
var G__47852 = j;
var G__47853 = k;
var G__47854 = l;
var G__47855 = m;
var G__47856 = n;
var G__47857 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__47843,G__47844,G__47845,G__47846,G__47847,G__47848,G__47849,G__47850,G__47851,G__47852,G__47853,G__47854,G__47855,G__47856,G__47857) : target_fn.call(null,G__47843,G__47844,G__47845,G__47846,G__47847,G__47848,G__47849,G__47850,G__47851,G__47852,G__47853,G__47854,G__47855,G__47856,G__47857));
});
var G__48458__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__47858 = a;
var G__47859 = b;
var G__47860 = c;
var G__47861 = d;
var G__47862 = e;
var G__47863 = f;
var G__47864 = g;
var G__47865 = h;
var G__47866 = i;
var G__47867 = j;
var G__47868 = k;
var G__47869 = l;
var G__47870 = m;
var G__47871 = n;
var G__47872 = o;
var G__47873 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__47858,G__47859,G__47860,G__47861,G__47862,G__47863,G__47864,G__47865,G__47866,G__47867,G__47868,G__47869,G__47870,G__47871,G__47872,G__47873) : self__.dispatch_fn.call(null,G__47858,G__47859,G__47860,G__47861,G__47862,G__47863,G__47864,G__47865,G__47866,G__47867,G__47868,G__47869,G__47870,G__47871,G__47872,G__47873));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__47874 = a;
var G__47875 = b;
var G__47876 = c;
var G__47877 = d;
var G__47878 = e;
var G__47879 = f;
var G__47880 = g;
var G__47881 = h;
var G__47882 = i;
var G__47883 = j;
var G__47884 = k;
var G__47885 = l;
var G__47886 = m;
var G__47887 = n;
var G__47888 = o;
var G__47889 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__47874,G__47875,G__47876,G__47877,G__47878,G__47879,G__47880,G__47881,G__47882,G__47883,G__47884,G__47885,G__47886,G__47887,G__47888,G__47889) : target_fn.call(null,G__47874,G__47875,G__47876,G__47877,G__47878,G__47879,G__47880,G__47881,G__47882,G__47883,G__47884,G__47885,G__47886,G__47887,G__47888,G__47889));
});
var G__48458__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__47890 = a;
var G__47891 = b;
var G__47892 = c;
var G__47893 = d;
var G__47894 = e;
var G__47895 = f;
var G__47896 = g;
var G__47897 = h;
var G__47898 = i;
var G__47899 = j;
var G__47900 = k;
var G__47901 = l;
var G__47902 = m;
var G__47903 = n;
var G__47904 = o;
var G__47905 = p;
var G__47906 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__47890,G__47891,G__47892,G__47893,G__47894,G__47895,G__47896,G__47897,G__47898,G__47899,G__47900,G__47901,G__47902,G__47903,G__47904,G__47905,G__47906) : self__.dispatch_fn.call(null,G__47890,G__47891,G__47892,G__47893,G__47894,G__47895,G__47896,G__47897,G__47898,G__47899,G__47900,G__47901,G__47902,G__47903,G__47904,G__47905,G__47906));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__47907 = a;
var G__47908 = b;
var G__47909 = c;
var G__47910 = d;
var G__47911 = e;
var G__47912 = f;
var G__47913 = g;
var G__47914 = h;
var G__47915 = i;
var G__47916 = j;
var G__47917 = k;
var G__47918 = l;
var G__47919 = m;
var G__47920 = n;
var G__47921 = o;
var G__47922 = p;
var G__47923 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__47907,G__47908,G__47909,G__47910,G__47911,G__47912,G__47913,G__47914,G__47915,G__47916,G__47917,G__47918,G__47919,G__47920,G__47921,G__47922,G__47923) : target_fn.call(null,G__47907,G__47908,G__47909,G__47910,G__47911,G__47912,G__47913,G__47914,G__47915,G__47916,G__47917,G__47918,G__47919,G__47920,G__47921,G__47922,G__47923));
});
var G__48458__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__47924 = a;
var G__47925 = b;
var G__47926 = c;
var G__47927 = d;
var G__47928 = e;
var G__47929 = f;
var G__47930 = g;
var G__47931 = h;
var G__47932 = i;
var G__47933 = j;
var G__47934 = k;
var G__47935 = l;
var G__47936 = m;
var G__47937 = n;
var G__47938 = o;
var G__47939 = p;
var G__47940 = q;
var G__47941 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__47924,G__47925,G__47926,G__47927,G__47928,G__47929,G__47930,G__47931,G__47932,G__47933,G__47934,G__47935,G__47936,G__47937,G__47938,G__47939,G__47940,G__47941) : self__.dispatch_fn.call(null,G__47924,G__47925,G__47926,G__47927,G__47928,G__47929,G__47930,G__47931,G__47932,G__47933,G__47934,G__47935,G__47936,G__47937,G__47938,G__47939,G__47940,G__47941));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__47942 = a;
var G__47943 = b;
var G__47944 = c;
var G__47945 = d;
var G__47946 = e;
var G__47947 = f;
var G__47948 = g;
var G__47949 = h;
var G__47950 = i;
var G__47951 = j;
var G__47952 = k;
var G__47953 = l;
var G__47954 = m;
var G__47955 = n;
var G__47956 = o;
var G__47957 = p;
var G__47958 = q;
var G__47959 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__47942,G__47943,G__47944,G__47945,G__47946,G__47947,G__47948,G__47949,G__47950,G__47951,G__47952,G__47953,G__47954,G__47955,G__47956,G__47957,G__47958,G__47959) : target_fn.call(null,G__47942,G__47943,G__47944,G__47945,G__47946,G__47947,G__47948,G__47949,G__47950,G__47951,G__47952,G__47953,G__47954,G__47955,G__47956,G__47957,G__47958,G__47959));
});
var G__48458__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__47960 = a;
var G__47961 = b;
var G__47962 = c;
var G__47963 = d;
var G__47964 = e;
var G__47965 = f;
var G__47966 = g;
var G__47967 = h;
var G__47968 = i;
var G__47969 = j;
var G__47970 = k;
var G__47971 = l;
var G__47972 = m;
var G__47973 = n;
var G__47974 = o;
var G__47975 = p;
var G__47976 = q;
var G__47977 = r;
var G__47978 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__47960,G__47961,G__47962,G__47963,G__47964,G__47965,G__47966,G__47967,G__47968,G__47969,G__47970,G__47971,G__47972,G__47973,G__47974,G__47975,G__47976,G__47977,G__47978) : self__.dispatch_fn.call(null,G__47960,G__47961,G__47962,G__47963,G__47964,G__47965,G__47966,G__47967,G__47968,G__47969,G__47970,G__47971,G__47972,G__47973,G__47974,G__47975,G__47976,G__47977,G__47978));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__47979 = a;
var G__47980 = b;
var G__47981 = c;
var G__47982 = d;
var G__47983 = e;
var G__47984 = f;
var G__47985 = g;
var G__47986 = h;
var G__47987 = i;
var G__47988 = j;
var G__47989 = k;
var G__47990 = l;
var G__47991 = m;
var G__47992 = n;
var G__47993 = o;
var G__47994 = p;
var G__47995 = q;
var G__47996 = r;
var G__47997 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__47979,G__47980,G__47981,G__47982,G__47983,G__47984,G__47985,G__47986,G__47987,G__47988,G__47989,G__47990,G__47991,G__47992,G__47993,G__47994,G__47995,G__47996,G__47997) : target_fn.call(null,G__47979,G__47980,G__47981,G__47982,G__47983,G__47984,G__47985,G__47986,G__47987,G__47988,G__47989,G__47990,G__47991,G__47992,G__47993,G__47994,G__47995,G__47996,G__47997));
});
var G__48458__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__47998 = a;
var G__47999 = b;
var G__48000 = c;
var G__48001 = d;
var G__48002 = e;
var G__48003 = f;
var G__48004 = g;
var G__48005 = h;
var G__48006 = i;
var G__48007 = j;
var G__48008 = k;
var G__48009 = l;
var G__48010 = m;
var G__48011 = n;
var G__48012 = o;
var G__48013 = p;
var G__48014 = q;
var G__48015 = r;
var G__48016 = s;
var G__48017 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__47998,G__47999,G__48000,G__48001,G__48002,G__48003,G__48004,G__48005,G__48006,G__48007,G__48008,G__48009,G__48010,G__48011,G__48012,G__48013,G__48014,G__48015,G__48016,G__48017) : self__.dispatch_fn.call(null,G__47998,G__47999,G__48000,G__48001,G__48002,G__48003,G__48004,G__48005,G__48006,G__48007,G__48008,G__48009,G__48010,G__48011,G__48012,G__48013,G__48014,G__48015,G__48016,G__48017));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__48018 = a;
var G__48019 = b;
var G__48020 = c;
var G__48021 = d;
var G__48022 = e;
var G__48023 = f;
var G__48024 = g;
var G__48025 = h;
var G__48026 = i;
var G__48027 = j;
var G__48028 = k;
var G__48029 = l;
var G__48030 = m;
var G__48031 = n;
var G__48032 = o;
var G__48033 = p;
var G__48034 = q;
var G__48035 = r;
var G__48036 = s;
var G__48037 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__48018,G__48019,G__48020,G__48021,G__48022,G__48023,G__48024,G__48025,G__48026,G__48027,G__48028,G__48029,G__48030,G__48031,G__48032,G__48033,G__48034,G__48035,G__48036,G__48037) : target_fn.call(null,G__48018,G__48019,G__48020,G__48021,G__48022,G__48023,G__48024,G__48025,G__48026,G__48027,G__48028,G__48029,G__48030,G__48031,G__48032,G__48033,G__48034,G__48035,G__48036,G__48037));
});
var G__48458__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__48458 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__48458__1.call(this,self__);
case 2:
return G__48458__2.call(this,self__,a);
case 3:
return G__48458__3.call(this,self__,a,b);
case 4:
return G__48458__4.call(this,self__,a,b,c);
case 5:
return G__48458__5.call(this,self__,a,b,c,d);
case 6:
return G__48458__6.call(this,self__,a,b,c,d,e);
case 7:
return G__48458__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__48458__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__48458__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__48458__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__48458__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__48458__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__48458__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__48458__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__48458__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__48458__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__48458__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__48458__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__48458__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__48458__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__48458__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__48458__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__48458.cljs$core$IFn$_invoke$arity$1 = G__48458__1;
G__48458.cljs$core$IFn$_invoke$arity$2 = G__48458__2;
G__48458.cljs$core$IFn$_invoke$arity$3 = G__48458__3;
G__48458.cljs$core$IFn$_invoke$arity$4 = G__48458__4;
G__48458.cljs$core$IFn$_invoke$arity$5 = G__48458__5;
G__48458.cljs$core$IFn$_invoke$arity$6 = G__48458__6;
G__48458.cljs$core$IFn$_invoke$arity$7 = G__48458__7;
G__48458.cljs$core$IFn$_invoke$arity$8 = G__48458__8;
G__48458.cljs$core$IFn$_invoke$arity$9 = G__48458__9;
G__48458.cljs$core$IFn$_invoke$arity$10 = G__48458__10;
G__48458.cljs$core$IFn$_invoke$arity$11 = G__48458__11;
G__48458.cljs$core$IFn$_invoke$arity$12 = G__48458__12;
G__48458.cljs$core$IFn$_invoke$arity$13 = G__48458__13;
G__48458.cljs$core$IFn$_invoke$arity$14 = G__48458__14;
G__48458.cljs$core$IFn$_invoke$arity$15 = G__48458__15;
G__48458.cljs$core$IFn$_invoke$arity$16 = G__48458__16;
G__48458.cljs$core$IFn$_invoke$arity$17 = G__48458__17;
G__48458.cljs$core$IFn$_invoke$arity$18 = G__48458__18;
G__48458.cljs$core$IFn$_invoke$arity$19 = G__48458__19;
G__48458.cljs$core$IFn$_invoke$arity$20 = G__48458__20;
G__48458.cljs$core$IFn$_invoke$arity$21 = G__48458__21;
G__48458.cljs$core$IFn$_invoke$arity$22 = G__48458__22;
return G__48458;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args47610){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args47610)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__48038 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__48038) : self__.dispatch_fn.call(null,G__48038));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__48039 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__48039) : target_fn.call(null,G__48039));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__48040 = a;
var G__48041 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__48040,G__48041) : self__.dispatch_fn.call(null,G__48040,G__48041));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__48042 = a;
var G__48043 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__48042,G__48043) : target_fn.call(null,G__48042,G__48043));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__48044 = a;
var G__48045 = b;
var G__48046 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__48044,G__48045,G__48046) : self__.dispatch_fn.call(null,G__48044,G__48045,G__48046));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__48047 = a;
var G__48048 = b;
var G__48049 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__48047,G__48048,G__48049) : target_fn.call(null,G__48047,G__48048,G__48049));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__48050 = a;
var G__48051 = b;
var G__48052 = c;
var G__48053 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__48050,G__48051,G__48052,G__48053) : self__.dispatch_fn.call(null,G__48050,G__48051,G__48052,G__48053));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__48054 = a;
var G__48055 = b;
var G__48056 = c;
var G__48057 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__48054,G__48055,G__48056,G__48057) : target_fn.call(null,G__48054,G__48055,G__48056,G__48057));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__48058 = a;
var G__48059 = b;
var G__48060 = c;
var G__48061 = d;
var G__48062 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__48058,G__48059,G__48060,G__48061,G__48062) : self__.dispatch_fn.call(null,G__48058,G__48059,G__48060,G__48061,G__48062));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__48063 = a;
var G__48064 = b;
var G__48065 = c;
var G__48066 = d;
var G__48067 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__48063,G__48064,G__48065,G__48066,G__48067) : target_fn.call(null,G__48063,G__48064,G__48065,G__48066,G__48067));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__48068 = a;
var G__48069 = b;
var G__48070 = c;
var G__48071 = d;
var G__48072 = e;
var G__48073 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__48068,G__48069,G__48070,G__48071,G__48072,G__48073) : self__.dispatch_fn.call(null,G__48068,G__48069,G__48070,G__48071,G__48072,G__48073));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__48074 = a;
var G__48075 = b;
var G__48076 = c;
var G__48077 = d;
var G__48078 = e;
var G__48079 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__48074,G__48075,G__48076,G__48077,G__48078,G__48079) : target_fn.call(null,G__48074,G__48075,G__48076,G__48077,G__48078,G__48079));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__48080 = a;
var G__48081 = b;
var G__48082 = c;
var G__48083 = d;
var G__48084 = e;
var G__48085 = f;
var G__48086 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__48080,G__48081,G__48082,G__48083,G__48084,G__48085,G__48086) : self__.dispatch_fn.call(null,G__48080,G__48081,G__48082,G__48083,G__48084,G__48085,G__48086));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__48087 = a;
var G__48088 = b;
var G__48089 = c;
var G__48090 = d;
var G__48091 = e;
var G__48092 = f;
var G__48093 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__48087,G__48088,G__48089,G__48090,G__48091,G__48092,G__48093) : target_fn.call(null,G__48087,G__48088,G__48089,G__48090,G__48091,G__48092,G__48093));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__48094 = a;
var G__48095 = b;
var G__48096 = c;
var G__48097 = d;
var G__48098 = e;
var G__48099 = f;
var G__48100 = g;
var G__48101 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__48094,G__48095,G__48096,G__48097,G__48098,G__48099,G__48100,G__48101) : self__.dispatch_fn.call(null,G__48094,G__48095,G__48096,G__48097,G__48098,G__48099,G__48100,G__48101));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__48102 = a;
var G__48103 = b;
var G__48104 = c;
var G__48105 = d;
var G__48106 = e;
var G__48107 = f;
var G__48108 = g;
var G__48109 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__48102,G__48103,G__48104,G__48105,G__48106,G__48107,G__48108,G__48109) : target_fn.call(null,G__48102,G__48103,G__48104,G__48105,G__48106,G__48107,G__48108,G__48109));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__48110 = a;
var G__48111 = b;
var G__48112 = c;
var G__48113 = d;
var G__48114 = e;
var G__48115 = f;
var G__48116 = g;
var G__48117 = h;
var G__48118 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__48110,G__48111,G__48112,G__48113,G__48114,G__48115,G__48116,G__48117,G__48118) : self__.dispatch_fn.call(null,G__48110,G__48111,G__48112,G__48113,G__48114,G__48115,G__48116,G__48117,G__48118));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__48119 = a;
var G__48120 = b;
var G__48121 = c;
var G__48122 = d;
var G__48123 = e;
var G__48124 = f;
var G__48125 = g;
var G__48126 = h;
var G__48127 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__48119,G__48120,G__48121,G__48122,G__48123,G__48124,G__48125,G__48126,G__48127) : target_fn.call(null,G__48119,G__48120,G__48121,G__48122,G__48123,G__48124,G__48125,G__48126,G__48127));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__48128 = a;
var G__48129 = b;
var G__48130 = c;
var G__48131 = d;
var G__48132 = e;
var G__48133 = f;
var G__48134 = g;
var G__48135 = h;
var G__48136 = i;
var G__48137 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__48128,G__48129,G__48130,G__48131,G__48132,G__48133,G__48134,G__48135,G__48136,G__48137) : self__.dispatch_fn.call(null,G__48128,G__48129,G__48130,G__48131,G__48132,G__48133,G__48134,G__48135,G__48136,G__48137));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__48138 = a;
var G__48139 = b;
var G__48140 = c;
var G__48141 = d;
var G__48142 = e;
var G__48143 = f;
var G__48144 = g;
var G__48145 = h;
var G__48146 = i;
var G__48147 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__48138,G__48139,G__48140,G__48141,G__48142,G__48143,G__48144,G__48145,G__48146,G__48147) : target_fn.call(null,G__48138,G__48139,G__48140,G__48141,G__48142,G__48143,G__48144,G__48145,G__48146,G__48147));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__48148 = a;
var G__48149 = b;
var G__48150 = c;
var G__48151 = d;
var G__48152 = e;
var G__48153 = f;
var G__48154 = g;
var G__48155 = h;
var G__48156 = i;
var G__48157 = j;
var G__48158 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__48148,G__48149,G__48150,G__48151,G__48152,G__48153,G__48154,G__48155,G__48156,G__48157,G__48158) : self__.dispatch_fn.call(null,G__48148,G__48149,G__48150,G__48151,G__48152,G__48153,G__48154,G__48155,G__48156,G__48157,G__48158));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__48159 = a;
var G__48160 = b;
var G__48161 = c;
var G__48162 = d;
var G__48163 = e;
var G__48164 = f;
var G__48165 = g;
var G__48166 = h;
var G__48167 = i;
var G__48168 = j;
var G__48169 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__48159,G__48160,G__48161,G__48162,G__48163,G__48164,G__48165,G__48166,G__48167,G__48168,G__48169) : target_fn.call(null,G__48159,G__48160,G__48161,G__48162,G__48163,G__48164,G__48165,G__48166,G__48167,G__48168,G__48169));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__48170 = a;
var G__48171 = b;
var G__48172 = c;
var G__48173 = d;
var G__48174 = e;
var G__48175 = f;
var G__48176 = g;
var G__48177 = h;
var G__48178 = i;
var G__48179 = j;
var G__48180 = k;
var G__48181 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__48170,G__48171,G__48172,G__48173,G__48174,G__48175,G__48176,G__48177,G__48178,G__48179,G__48180,G__48181) : self__.dispatch_fn.call(null,G__48170,G__48171,G__48172,G__48173,G__48174,G__48175,G__48176,G__48177,G__48178,G__48179,G__48180,G__48181));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__48182 = a;
var G__48183 = b;
var G__48184 = c;
var G__48185 = d;
var G__48186 = e;
var G__48187 = f;
var G__48188 = g;
var G__48189 = h;
var G__48190 = i;
var G__48191 = j;
var G__48192 = k;
var G__48193 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__48182,G__48183,G__48184,G__48185,G__48186,G__48187,G__48188,G__48189,G__48190,G__48191,G__48192,G__48193) : target_fn.call(null,G__48182,G__48183,G__48184,G__48185,G__48186,G__48187,G__48188,G__48189,G__48190,G__48191,G__48192,G__48193));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__48194 = a;
var G__48195 = b;
var G__48196 = c;
var G__48197 = d;
var G__48198 = e;
var G__48199 = f;
var G__48200 = g;
var G__48201 = h;
var G__48202 = i;
var G__48203 = j;
var G__48204 = k;
var G__48205 = l;
var G__48206 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__48194,G__48195,G__48196,G__48197,G__48198,G__48199,G__48200,G__48201,G__48202,G__48203,G__48204,G__48205,G__48206) : self__.dispatch_fn.call(null,G__48194,G__48195,G__48196,G__48197,G__48198,G__48199,G__48200,G__48201,G__48202,G__48203,G__48204,G__48205,G__48206));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__48207 = a;
var G__48208 = b;
var G__48209 = c;
var G__48210 = d;
var G__48211 = e;
var G__48212 = f;
var G__48213 = g;
var G__48214 = h;
var G__48215 = i;
var G__48216 = j;
var G__48217 = k;
var G__48218 = l;
var G__48219 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__48207,G__48208,G__48209,G__48210,G__48211,G__48212,G__48213,G__48214,G__48215,G__48216,G__48217,G__48218,G__48219) : target_fn.call(null,G__48207,G__48208,G__48209,G__48210,G__48211,G__48212,G__48213,G__48214,G__48215,G__48216,G__48217,G__48218,G__48219));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__48220 = a;
var G__48221 = b;
var G__48222 = c;
var G__48223 = d;
var G__48224 = e;
var G__48225 = f;
var G__48226 = g;
var G__48227 = h;
var G__48228 = i;
var G__48229 = j;
var G__48230 = k;
var G__48231 = l;
var G__48232 = m;
var G__48233 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__48220,G__48221,G__48222,G__48223,G__48224,G__48225,G__48226,G__48227,G__48228,G__48229,G__48230,G__48231,G__48232,G__48233) : self__.dispatch_fn.call(null,G__48220,G__48221,G__48222,G__48223,G__48224,G__48225,G__48226,G__48227,G__48228,G__48229,G__48230,G__48231,G__48232,G__48233));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__48234 = a;
var G__48235 = b;
var G__48236 = c;
var G__48237 = d;
var G__48238 = e;
var G__48239 = f;
var G__48240 = g;
var G__48241 = h;
var G__48242 = i;
var G__48243 = j;
var G__48244 = k;
var G__48245 = l;
var G__48246 = m;
var G__48247 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__48234,G__48235,G__48236,G__48237,G__48238,G__48239,G__48240,G__48241,G__48242,G__48243,G__48244,G__48245,G__48246,G__48247) : target_fn.call(null,G__48234,G__48235,G__48236,G__48237,G__48238,G__48239,G__48240,G__48241,G__48242,G__48243,G__48244,G__48245,G__48246,G__48247));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__48248 = a;
var G__48249 = b;
var G__48250 = c;
var G__48251 = d;
var G__48252 = e;
var G__48253 = f;
var G__48254 = g;
var G__48255 = h;
var G__48256 = i;
var G__48257 = j;
var G__48258 = k;
var G__48259 = l;
var G__48260 = m;
var G__48261 = n;
var G__48262 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__48248,G__48249,G__48250,G__48251,G__48252,G__48253,G__48254,G__48255,G__48256,G__48257,G__48258,G__48259,G__48260,G__48261,G__48262) : self__.dispatch_fn.call(null,G__48248,G__48249,G__48250,G__48251,G__48252,G__48253,G__48254,G__48255,G__48256,G__48257,G__48258,G__48259,G__48260,G__48261,G__48262));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__48263 = a;
var G__48264 = b;
var G__48265 = c;
var G__48266 = d;
var G__48267 = e;
var G__48268 = f;
var G__48269 = g;
var G__48270 = h;
var G__48271 = i;
var G__48272 = j;
var G__48273 = k;
var G__48274 = l;
var G__48275 = m;
var G__48276 = n;
var G__48277 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__48263,G__48264,G__48265,G__48266,G__48267,G__48268,G__48269,G__48270,G__48271,G__48272,G__48273,G__48274,G__48275,G__48276,G__48277) : target_fn.call(null,G__48263,G__48264,G__48265,G__48266,G__48267,G__48268,G__48269,G__48270,G__48271,G__48272,G__48273,G__48274,G__48275,G__48276,G__48277));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__48278 = a;
var G__48279 = b;
var G__48280 = c;
var G__48281 = d;
var G__48282 = e;
var G__48283 = f;
var G__48284 = g;
var G__48285 = h;
var G__48286 = i;
var G__48287 = j;
var G__48288 = k;
var G__48289 = l;
var G__48290 = m;
var G__48291 = n;
var G__48292 = o;
var G__48293 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__48278,G__48279,G__48280,G__48281,G__48282,G__48283,G__48284,G__48285,G__48286,G__48287,G__48288,G__48289,G__48290,G__48291,G__48292,G__48293) : self__.dispatch_fn.call(null,G__48278,G__48279,G__48280,G__48281,G__48282,G__48283,G__48284,G__48285,G__48286,G__48287,G__48288,G__48289,G__48290,G__48291,G__48292,G__48293));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__48294 = a;
var G__48295 = b;
var G__48296 = c;
var G__48297 = d;
var G__48298 = e;
var G__48299 = f;
var G__48300 = g;
var G__48301 = h;
var G__48302 = i;
var G__48303 = j;
var G__48304 = k;
var G__48305 = l;
var G__48306 = m;
var G__48307 = n;
var G__48308 = o;
var G__48309 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__48294,G__48295,G__48296,G__48297,G__48298,G__48299,G__48300,G__48301,G__48302,G__48303,G__48304,G__48305,G__48306,G__48307,G__48308,G__48309) : target_fn.call(null,G__48294,G__48295,G__48296,G__48297,G__48298,G__48299,G__48300,G__48301,G__48302,G__48303,G__48304,G__48305,G__48306,G__48307,G__48308,G__48309));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__48310 = a;
var G__48311 = b;
var G__48312 = c;
var G__48313 = d;
var G__48314 = e;
var G__48315 = f;
var G__48316 = g;
var G__48317 = h;
var G__48318 = i;
var G__48319 = j;
var G__48320 = k;
var G__48321 = l;
var G__48322 = m;
var G__48323 = n;
var G__48324 = o;
var G__48325 = p;
var G__48326 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__48310,G__48311,G__48312,G__48313,G__48314,G__48315,G__48316,G__48317,G__48318,G__48319,G__48320,G__48321,G__48322,G__48323,G__48324,G__48325,G__48326) : self__.dispatch_fn.call(null,G__48310,G__48311,G__48312,G__48313,G__48314,G__48315,G__48316,G__48317,G__48318,G__48319,G__48320,G__48321,G__48322,G__48323,G__48324,G__48325,G__48326));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__48327 = a;
var G__48328 = b;
var G__48329 = c;
var G__48330 = d;
var G__48331 = e;
var G__48332 = f;
var G__48333 = g;
var G__48334 = h;
var G__48335 = i;
var G__48336 = j;
var G__48337 = k;
var G__48338 = l;
var G__48339 = m;
var G__48340 = n;
var G__48341 = o;
var G__48342 = p;
var G__48343 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__48327,G__48328,G__48329,G__48330,G__48331,G__48332,G__48333,G__48334,G__48335,G__48336,G__48337,G__48338,G__48339,G__48340,G__48341,G__48342,G__48343) : target_fn.call(null,G__48327,G__48328,G__48329,G__48330,G__48331,G__48332,G__48333,G__48334,G__48335,G__48336,G__48337,G__48338,G__48339,G__48340,G__48341,G__48342,G__48343));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__48344 = a;
var G__48345 = b;
var G__48346 = c;
var G__48347 = d;
var G__48348 = e;
var G__48349 = f;
var G__48350 = g;
var G__48351 = h;
var G__48352 = i;
var G__48353 = j;
var G__48354 = k;
var G__48355 = l;
var G__48356 = m;
var G__48357 = n;
var G__48358 = o;
var G__48359 = p;
var G__48360 = q;
var G__48361 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__48344,G__48345,G__48346,G__48347,G__48348,G__48349,G__48350,G__48351,G__48352,G__48353,G__48354,G__48355,G__48356,G__48357,G__48358,G__48359,G__48360,G__48361) : self__.dispatch_fn.call(null,G__48344,G__48345,G__48346,G__48347,G__48348,G__48349,G__48350,G__48351,G__48352,G__48353,G__48354,G__48355,G__48356,G__48357,G__48358,G__48359,G__48360,G__48361));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__48362 = a;
var G__48363 = b;
var G__48364 = c;
var G__48365 = d;
var G__48366 = e;
var G__48367 = f;
var G__48368 = g;
var G__48369 = h;
var G__48370 = i;
var G__48371 = j;
var G__48372 = k;
var G__48373 = l;
var G__48374 = m;
var G__48375 = n;
var G__48376 = o;
var G__48377 = p;
var G__48378 = q;
var G__48379 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__48362,G__48363,G__48364,G__48365,G__48366,G__48367,G__48368,G__48369,G__48370,G__48371,G__48372,G__48373,G__48374,G__48375,G__48376,G__48377,G__48378,G__48379) : target_fn.call(null,G__48362,G__48363,G__48364,G__48365,G__48366,G__48367,G__48368,G__48369,G__48370,G__48371,G__48372,G__48373,G__48374,G__48375,G__48376,G__48377,G__48378,G__48379));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__48380 = a;
var G__48381 = b;
var G__48382 = c;
var G__48383 = d;
var G__48384 = e;
var G__48385 = f;
var G__48386 = g;
var G__48387 = h;
var G__48388 = i;
var G__48389 = j;
var G__48390 = k;
var G__48391 = l;
var G__48392 = m;
var G__48393 = n;
var G__48394 = o;
var G__48395 = p;
var G__48396 = q;
var G__48397 = r;
var G__48398 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__48380,G__48381,G__48382,G__48383,G__48384,G__48385,G__48386,G__48387,G__48388,G__48389,G__48390,G__48391,G__48392,G__48393,G__48394,G__48395,G__48396,G__48397,G__48398) : self__.dispatch_fn.call(null,G__48380,G__48381,G__48382,G__48383,G__48384,G__48385,G__48386,G__48387,G__48388,G__48389,G__48390,G__48391,G__48392,G__48393,G__48394,G__48395,G__48396,G__48397,G__48398));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__48399 = a;
var G__48400 = b;
var G__48401 = c;
var G__48402 = d;
var G__48403 = e;
var G__48404 = f;
var G__48405 = g;
var G__48406 = h;
var G__48407 = i;
var G__48408 = j;
var G__48409 = k;
var G__48410 = l;
var G__48411 = m;
var G__48412 = n;
var G__48413 = o;
var G__48414 = p;
var G__48415 = q;
var G__48416 = r;
var G__48417 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__48399,G__48400,G__48401,G__48402,G__48403,G__48404,G__48405,G__48406,G__48407,G__48408,G__48409,G__48410,G__48411,G__48412,G__48413,G__48414,G__48415,G__48416,G__48417) : target_fn.call(null,G__48399,G__48400,G__48401,G__48402,G__48403,G__48404,G__48405,G__48406,G__48407,G__48408,G__48409,G__48410,G__48411,G__48412,G__48413,G__48414,G__48415,G__48416,G__48417));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__48418 = a;
var G__48419 = b;
var G__48420 = c;
var G__48421 = d;
var G__48422 = e;
var G__48423 = f;
var G__48424 = g;
var G__48425 = h;
var G__48426 = i;
var G__48427 = j;
var G__48428 = k;
var G__48429 = l;
var G__48430 = m;
var G__48431 = n;
var G__48432 = o;
var G__48433 = p;
var G__48434 = q;
var G__48435 = r;
var G__48436 = s;
var G__48437 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__48418,G__48419,G__48420,G__48421,G__48422,G__48423,G__48424,G__48425,G__48426,G__48427,G__48428,G__48429,G__48430,G__48431,G__48432,G__48433,G__48434,G__48435,G__48436,G__48437) : self__.dispatch_fn.call(null,G__48418,G__48419,G__48420,G__48421,G__48422,G__48423,G__48424,G__48425,G__48426,G__48427,G__48428,G__48429,G__48430,G__48431,G__48432,G__48433,G__48434,G__48435,G__48436,G__48437));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__48438 = a;
var G__48439 = b;
var G__48440 = c;
var G__48441 = d;
var G__48442 = e;
var G__48443 = f;
var G__48444 = g;
var G__48445 = h;
var G__48446 = i;
var G__48447 = j;
var G__48448 = k;
var G__48449 = l;
var G__48450 = m;
var G__48451 = n;
var G__48452 = o;
var G__48453 = p;
var G__48454 = q;
var G__48455 = r;
var G__48456 = s;
var G__48457 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__48438,G__48439,G__48440,G__48441,G__48442,G__48443,G__48444,G__48445,G__48446,G__48447,G__48448,G__48449,G__48450,G__48451,G__48452,G__48453,G__48454,G__48455,G__48456,G__48457) : target_fn.call(null,G__48438,G__48439,G__48440,G__48441,G__48442,G__48443,G__48444,G__48445,G__48446,G__48447,G__48448,G__48449,G__48450,G__48451,G__48452,G__48453,G__48454,G__48455,G__48456,G__48457));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__32524__auto__,writer__32525__auto__,opt__32526__auto__){
return cljs.core._write(writer__32525__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__48459 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__48459);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__32524__auto__,writer__32525__auto__,opt__32526__auto__){
return cljs.core._write(writer__32525__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__32524__auto__,writer__32525__auto__,opt__32526__auto__){
return cljs.core._write(writer__32525__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__48464 = msg;
return Error(G__48464);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__48469 = x;
var G__48470 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__48469,G__48470) : pred.call(null,G__48469,G__48470));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__48471 = y;
var G__48472 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__48471,G__48472) : pred.call(null,G__48471,G__48472));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return cljs.core.constant$keyword$18;
} else {
return cljs.core.constant$keyword$19;
}
});
