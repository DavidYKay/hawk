// Compiled by ClojureScript 0.0-2850 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2850";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [cljs.core.constant$keyword$44,cljs.core._STAR_flush_on_newline_STAR_,cljs.core.constant$keyword$45,cljs.core._STAR_print_readably_STAR_,cljs.core.constant$keyword$46,cljs.core._STAR_print_meta_STAR_,cljs.core.constant$keyword$47,cljs.core._STAR_print_dup_STAR_,cljs.core.constant$keyword$48,cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__36924__delegate = function (args){
return console.log.apply(console,(function (){var G__36923 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__36923) : cljs.core.into_array.call(null,G__36923));
})());
};
var G__36924 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__36925__i = 0, G__36925__a = new Array(arguments.length -  0);
while (G__36925__i < G__36925__a.length) {G__36925__a[G__36925__i] = arguments[G__36925__i + 0]; ++G__36925__i;}
  args = new cljs.core.IndexedSeq(G__36925__a,0);
} 
return G__36924__delegate.call(this,args);};
G__36924.cljs$lang$maxFixedArity = 0;
G__36924.cljs$lang$applyTo = (function (arglist__36926){
var args = cljs.core.seq(arglist__36926);
return G__36924__delegate(args);
});
G__36924.cljs$core$IFn$_invoke$arity$variadic = G__36924__delegate;
return G__36924;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__36928 = x;
return goog.isString(G__36928);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__36930 = x__$1;
return goog.typeOf(G__36930);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__17665__auto__ = ty;
if(cljs.core.truth_(and__17665__auto__)){
return ty.cljs$lang$type;
} else {
return and__17665__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__36932 = obj;
return goog.typeOf(G__36932);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__36934 = Symbol;
return goog.typeOf(G__36934);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__18564__auto___36936 = len;
var i_36937 = (0);
while(true){
if((i_36937 < n__18564__auto___36936)){
(new_arr[i_36937] = (arr[i_36937]));

var G__36938 = (i_36937 + (1));
i_36937 = G__36938;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__36939 = (i + (1));
i = G__36939;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__36948__delegate = function (array,i,idxs){
var G__36945 = aget;
var G__36946 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__36947 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__36945,G__36946,G__36947) : cljs.core.apply.call(null,G__36945,G__36946,G__36947));
};
var G__36948 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__36949__i = 0, G__36949__a = new Array(arguments.length -  2);
while (G__36949__i < G__36949__a.length) {G__36949__a[G__36949__i] = arguments[G__36949__i + 2]; ++G__36949__i;}
  idxs = new cljs.core.IndexedSeq(G__36949__a,0);
} 
return G__36948__delegate.call(this,array,i,idxs);};
G__36948.cljs$lang$maxFixedArity = 2;
G__36948.cljs$lang$applyTo = (function (arglist__36950){
var array = cljs.core.first(arglist__36950);
arglist__36950 = cljs.core.next(arglist__36950);
var i = cljs.core.first(arglist__36950);
var idxs = cljs.core.rest(arglist__36950);
return G__36948__delegate(array,i,idxs);
});
G__36948.cljs$core$IFn$_invoke$arity$variadic = G__36948__delegate;
return G__36948;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__36951 = null;
if (arguments.length > 2) {
var G__36952__i = 0, G__36952__a = new Array(arguments.length -  2);
while (G__36952__i < G__36952__a.length) {G__36952__a[G__36952__i] = arguments[G__36952__i + 2]; ++G__36952__i;}
G__36951 = new cljs.core.IndexedSeq(G__36952__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__36951);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__36961__delegate = function (array,idx,idx2,idxv){
var G__36957 = aset;
var G__36958 = (array[idx]);
var G__36959 = idx2;
var G__36960 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__36957,G__36958,G__36959,G__36960) : cljs.core.apply.call(null,G__36957,G__36958,G__36959,G__36960));
};
var G__36961 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__36962__i = 0, G__36962__a = new Array(arguments.length -  3);
while (G__36962__i < G__36962__a.length) {G__36962__a[G__36962__i] = arguments[G__36962__i + 3]; ++G__36962__i;}
  idxv = new cljs.core.IndexedSeq(G__36962__a,0);
} 
return G__36961__delegate.call(this,array,idx,idx2,idxv);};
G__36961.cljs$lang$maxFixedArity = 3;
G__36961.cljs$lang$applyTo = (function (arglist__36963){
var array = cljs.core.first(arglist__36963);
arglist__36963 = cljs.core.next(arglist__36963);
var idx = cljs.core.first(arglist__36963);
arglist__36963 = cljs.core.next(arglist__36963);
var idx2 = cljs.core.first(arglist__36963);
var idxv = cljs.core.rest(arglist__36963);
return G__36961__delegate(array,idx,idx2,idxv);
});
G__36961.cljs$core$IFn$_invoke$arity$variadic = G__36961__delegate;
return G__36961;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__36964 = null;
if (arguments.length > 3) {
var G__36965__i = 0, G__36965__a = new Array(arguments.length -  3);
while (G__36965__i < G__36965__a.length) {G__36965__a[G__36965__i] = arguments[G__36965__i + 3]; ++G__36965__i;}
G__36964 = new cljs.core.IndexedSeq(G__36965__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__36964);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__36971 = (function (a,x){
a.push(x);

return a;
});
var G__36972 = [];
var G__36973 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__36971,G__36972,G__36973) : cljs.core.reduce.call(null,G__36971,G__36972,G__36973));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__36974__i = 0, G__36974__a = new Array(arguments.length -  2);
while (G__36974__i < G__36974__a.length) {G__36974__a[G__36974__i] = arguments[G__36974__i + 2]; ++G__36974__i;}
  args = new cljs.core.IndexedSeq(G__36974__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__36975){
var obj = cljs.core.first(arglist__36975);
arglist__36975 = cljs.core.next(arglist__36975);
var s = cljs.core.first(arglist__36975);
var args = cljs.core.rest(arglist__36975);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj36977 = {};
return obj36977;
})();


cljs.core.IFn = (function (){var obj36979 = {};
return obj36979;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__17665__auto__ = this$;
if(and__17665__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__17665__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__18321__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17677__auto__ = (cljs.core._invoke[(function (){var G__37025 = x__18321__auto__;
return goog.typeOf(G__37025);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._invoke["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__17665__auto__ = this$;
if(and__17665__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__17665__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__18321__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17677__auto__ = (cljs.core._invoke[(function (){var G__37027 = x__18321__auto__;
return goog.typeOf(G__37027);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._invoke["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__17665__auto__ = this$;
if(and__17665__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__17665__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__18321__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17677__auto__ = (cljs.core._invoke[(function (){var G__37029 = x__18321__auto__;
return goog.typeOf(G__37029);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._invoke["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__17665__auto__ = this$;
if(and__17665__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__17665__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__18321__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17677__auto__ = (cljs.core._invoke[(function (){var G__37031 = x__18321__auto__;
return goog.typeOf(G__37031);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._invoke["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__17665__auto__ = this$;
if(and__17665__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__17665__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__18321__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17677__auto__ = (cljs.core._invoke[(function (){var G__37033 = x__18321__auto__;
return goog.typeOf(G__37033);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._invoke["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__17665__auto__ = this$;
if(and__17665__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__17665__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__18321__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17677__auto__ = (cljs.core._invoke[(function (){var G__37035 = x__18321__auto__;
return goog.typeOf(G__37035);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._invoke["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__17665__auto__ = this$;
if(and__17665__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__17665__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__18321__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17677__auto__ = (cljs.core._invoke[(function (){var G__37037 = x__18321__auto__;
return goog.typeOf(G__37037);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._invoke["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__17665__auto__ = this$;
if(and__17665__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__17665__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__18321__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17677__auto__ = (cljs.core._invoke[(function (){var G__37039 = x__18321__auto__;
return goog.typeOf(G__37039);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._invoke["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__17665__auto__ = this$;
if(and__17665__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__17665__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__18321__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17677__auto__ = (cljs.core._invoke[(function (){var G__37041 = x__18321__auto__;
return goog.typeOf(G__37041);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._invoke["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__17665__auto__ = this$;
if(and__17665__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__17665__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__18321__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17677__auto__ = (cljs.core._invoke[(function (){var G__37043 = x__18321__auto__;
return goog.typeOf(G__37043);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._invoke["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__17665__auto__ = this$;
if(and__17665__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__17665__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__18321__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17677__auto__ = (cljs.core._invoke[(function (){var G__37045 = x__18321__auto__;
return goog.typeOf(G__37045);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._invoke["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__17665__auto__ = this$;
if(and__17665__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__17665__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__18321__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17677__auto__ = (cljs.core._invoke[(function (){var G__37047 = x__18321__auto__;
return goog.typeOf(G__37047);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._invoke["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__17665__auto__ = this$;
if(and__17665__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__17665__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__18321__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17677__auto__ = (cljs.core._invoke[(function (){var G__37049 = x__18321__auto__;
return goog.typeOf(G__37049);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._invoke["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__17665__auto__ = this$;
if(and__17665__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__17665__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__18321__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17677__auto__ = (cljs.core._invoke[(function (){var G__37051 = x__18321__auto__;
return goog.typeOf(G__37051);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._invoke["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__17665__auto__ = this$;
if(and__17665__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__17665__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__18321__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17677__auto__ = (cljs.core._invoke[(function (){var G__37053 = x__18321__auto__;
return goog.typeOf(G__37053);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._invoke["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__17665__auto__ = this$;
if(and__17665__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__17665__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__18321__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17677__auto__ = (cljs.core._invoke[(function (){var G__37055 = x__18321__auto__;
return goog.typeOf(G__37055);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._invoke["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__17665__auto__ = this$;
if(and__17665__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__17665__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__18321__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17677__auto__ = (cljs.core._invoke[(function (){var G__37057 = x__18321__auto__;
return goog.typeOf(G__37057);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._invoke["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__17665__auto__ = this$;
if(and__17665__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__17665__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__18321__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17677__auto__ = (cljs.core._invoke[(function (){var G__37059 = x__18321__auto__;
return goog.typeOf(G__37059);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._invoke["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__17665__auto__ = this$;
if(and__17665__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__17665__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__18321__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17677__auto__ = (cljs.core._invoke[(function (){var G__37061 = x__18321__auto__;
return goog.typeOf(G__37061);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._invoke["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__17665__auto__ = this$;
if(and__17665__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__17665__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__18321__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17677__auto__ = (cljs.core._invoke[(function (){var G__37063 = x__18321__auto__;
return goog.typeOf(G__37063);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._invoke["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__17665__auto__ = this$;
if(and__17665__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__17665__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__18321__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17677__auto__ = (cljs.core._invoke[(function (){var G__37065 = x__18321__auto__;
return goog.typeOf(G__37065);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._invoke["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__17665__auto__ = this$;
if(and__17665__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__17665__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__18321__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17677__auto__ = (cljs.core._invoke[(function (){var G__37067 = x__18321__auto__;
return goog.typeOf(G__37067);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._invoke["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj37069 = {};
return obj37069;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__17665__auto__ = value;
if(and__17665__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__17665__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__18321__auto__ = (((value == null))?null:value);
return (function (){var or__17677__auto__ = (cljs.core._clone[(function (){var G__37073 = x__18321__auto__;
return goog.typeOf(G__37073);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._clone["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj37075 = {};
return obj37075;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__17665__auto__ = coll;
if(and__17665__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__17665__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__18321__auto__ = (((coll == null))?null:coll);
return (function (){var or__17677__auto__ = (cljs.core._count[(function (){var G__37079 = x__18321__auto__;
return goog.typeOf(G__37079);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._count["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj37081 = {};
return obj37081;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__17665__auto__ = coll;
if(and__17665__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__17665__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__18321__auto__ = (((coll == null))?null:coll);
return (function (){var or__17677__auto__ = (cljs.core._empty[(function (){var G__37085 = x__18321__auto__;
return goog.typeOf(G__37085);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._empty["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj37087 = {};
return obj37087;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__17665__auto__ = coll;
if(and__17665__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__17665__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__18321__auto__ = (((coll == null))?null:coll);
return (function (){var or__17677__auto__ = (cljs.core._conj[(function (){var G__37091 = x__18321__auto__;
return goog.typeOf(G__37091);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._conj["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj37093 = {};
return obj37093;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__17665__auto__ = coll;
if(and__17665__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__17665__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__18321__auto__ = (((coll == null))?null:coll);
return (function (){var or__17677__auto__ = (cljs.core._nth[(function (){var G__37099 = x__18321__auto__;
return goog.typeOf(G__37099);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._nth["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__17665__auto__ = coll;
if(and__17665__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__17665__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__18321__auto__ = (((coll == null))?null:coll);
return (function (){var or__17677__auto__ = (cljs.core._nth[(function (){var G__37101 = x__18321__auto__;
return goog.typeOf(G__37101);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._nth["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj37103 = {};
return obj37103;
})();


cljs.core.ISeq = (function (){var obj37105 = {};
return obj37105;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__17665__auto__ = coll;
if(and__17665__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__17665__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__18321__auto__ = (((coll == null))?null:coll);
return (function (){var or__17677__auto__ = (cljs.core._first[(function (){var G__37109 = x__18321__auto__;
return goog.typeOf(G__37109);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._first["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__17665__auto__ = coll;
if(and__17665__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__17665__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__18321__auto__ = (((coll == null))?null:coll);
return (function (){var or__17677__auto__ = (cljs.core._rest[(function (){var G__37113 = x__18321__auto__;
return goog.typeOf(G__37113);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._rest["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj37115 = {};
return obj37115;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__17665__auto__ = coll;
if(and__17665__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__17665__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__18321__auto__ = (((coll == null))?null:coll);
return (function (){var or__17677__auto__ = (cljs.core._next[(function (){var G__37119 = x__18321__auto__;
return goog.typeOf(G__37119);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._next["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj37121 = {};
return obj37121;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__17665__auto__ = o;
if(and__17665__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__17665__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__18321__auto__ = (((o == null))?null:o);
return (function (){var or__17677__auto__ = (cljs.core._lookup[(function (){var G__37127 = x__18321__auto__;
return goog.typeOf(G__37127);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._lookup["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__17665__auto__ = o;
if(and__17665__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__17665__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__18321__auto__ = (((o == null))?null:o);
return (function (){var or__17677__auto__ = (cljs.core._lookup[(function (){var G__37129 = x__18321__auto__;
return goog.typeOf(G__37129);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._lookup["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj37131 = {};
return obj37131;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__17665__auto__ = coll;
if(and__17665__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__17665__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__18321__auto__ = (((coll == null))?null:coll);
return (function (){var or__17677__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__37135 = x__18321__auto__;
return goog.typeOf(G__37135);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__17665__auto__ = coll;
if(and__17665__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__17665__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__18321__auto__ = (((coll == null))?null:coll);
return (function (){var or__17677__auto__ = (cljs.core._assoc[(function (){var G__37139 = x__18321__auto__;
return goog.typeOf(G__37139);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._assoc["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj37141 = {};
return obj37141;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__17665__auto__ = coll;
if(and__17665__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__17665__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__18321__auto__ = (((coll == null))?null:coll);
return (function (){var or__17677__auto__ = (cljs.core._dissoc[(function (){var G__37145 = x__18321__auto__;
return goog.typeOf(G__37145);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._dissoc["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj37147 = {};
return obj37147;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__17665__auto__ = coll;
if(and__17665__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__17665__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__18321__auto__ = (((coll == null))?null:coll);
return (function (){var or__17677__auto__ = (cljs.core._key[(function (){var G__37151 = x__18321__auto__;
return goog.typeOf(G__37151);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._key["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__17665__auto__ = coll;
if(and__17665__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__17665__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__18321__auto__ = (((coll == null))?null:coll);
return (function (){var or__17677__auto__ = (cljs.core._val[(function (){var G__37155 = x__18321__auto__;
return goog.typeOf(G__37155);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._val["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj37157 = {};
return obj37157;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__17665__auto__ = coll;
if(and__17665__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__17665__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__18321__auto__ = (((coll == null))?null:coll);
return (function (){var or__17677__auto__ = (cljs.core._disjoin[(function (){var G__37161 = x__18321__auto__;
return goog.typeOf(G__37161);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._disjoin["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj37163 = {};
return obj37163;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__17665__auto__ = coll;
if(and__17665__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__17665__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__18321__auto__ = (((coll == null))?null:coll);
return (function (){var or__17677__auto__ = (cljs.core._peek[(function (){var G__37167 = x__18321__auto__;
return goog.typeOf(G__37167);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._peek["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__17665__auto__ = coll;
if(and__17665__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__17665__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__18321__auto__ = (((coll == null))?null:coll);
return (function (){var or__17677__auto__ = (cljs.core._pop[(function (){var G__37171 = x__18321__auto__;
return goog.typeOf(G__37171);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._pop["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj37173 = {};
return obj37173;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__17665__auto__ = coll;
if(and__17665__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__17665__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__18321__auto__ = (((coll == null))?null:coll);
return (function (){var or__17677__auto__ = (cljs.core._assoc_n[(function (){var G__37177 = x__18321__auto__;
return goog.typeOf(G__37177);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj37179 = {};
return obj37179;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__17665__auto__ = o;
if(and__17665__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__17665__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__18321__auto__ = (((o == null))?null:o);
return (function (){var or__17677__auto__ = (cljs.core._deref[(function (){var G__37183 = x__18321__auto__;
return goog.typeOf(G__37183);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._deref["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj37185 = {};
return obj37185;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__17665__auto__ = o;
if(and__17665__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__17665__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__18321__auto__ = (((o == null))?null:o);
return (function (){var or__17677__auto__ = (cljs.core._deref_with_timeout[(function (){var G__37189 = x__18321__auto__;
return goog.typeOf(G__37189);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj37191 = {};
return obj37191;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__17665__auto__ = o;
if(and__17665__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__17665__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__18321__auto__ = (((o == null))?null:o);
return (function (){var or__17677__auto__ = (cljs.core._meta[(function (){var G__37195 = x__18321__auto__;
return goog.typeOf(G__37195);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._meta["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj37197 = {};
return obj37197;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__17665__auto__ = o;
if(and__17665__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__17665__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__18321__auto__ = (((o == null))?null:o);
return (function (){var or__17677__auto__ = (cljs.core._with_meta[(function (){var G__37201 = x__18321__auto__;
return goog.typeOf(G__37201);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._with_meta["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj37203 = {};
return obj37203;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__17665__auto__ = coll;
if(and__17665__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__17665__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__18321__auto__ = (((coll == null))?null:coll);
return (function (){var or__17677__auto__ = (cljs.core._reduce[(function (){var G__37209 = x__18321__auto__;
return goog.typeOf(G__37209);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._reduce["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__17665__auto__ = coll;
if(and__17665__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__17665__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__18321__auto__ = (((coll == null))?null:coll);
return (function (){var or__17677__auto__ = (cljs.core._reduce[(function (){var G__37211 = x__18321__auto__;
return goog.typeOf(G__37211);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._reduce["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj37213 = {};
return obj37213;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__17665__auto__ = coll;
if(and__17665__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__17665__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__18321__auto__ = (((coll == null))?null:coll);
return (function (){var or__17677__auto__ = (cljs.core._kv_reduce[(function (){var G__37217 = x__18321__auto__;
return goog.typeOf(G__37217);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj37219 = {};
return obj37219;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__17665__auto__ = o;
if(and__17665__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__17665__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__18321__auto__ = (((o == null))?null:o);
return (function (){var or__17677__auto__ = (cljs.core._equiv[(function (){var G__37223 = x__18321__auto__;
return goog.typeOf(G__37223);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._equiv["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj37225 = {};
return obj37225;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__17665__auto__ = o;
if(and__17665__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__17665__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__18321__auto__ = (((o == null))?null:o);
return (function (){var or__17677__auto__ = (cljs.core._hash[(function (){var G__37229 = x__18321__auto__;
return goog.typeOf(G__37229);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._hash["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj37231 = {};
return obj37231;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__17665__auto__ = o;
if(and__17665__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__17665__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__18321__auto__ = (((o == null))?null:o);
return (function (){var or__17677__auto__ = (cljs.core._seq[(function (){var G__37235 = x__18321__auto__;
return goog.typeOf(G__37235);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._seq["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj37237 = {};
return obj37237;
})();


cljs.core.IList = (function (){var obj37239 = {};
return obj37239;
})();


cljs.core.IRecord = (function (){var obj37241 = {};
return obj37241;
})();


cljs.core.IReversible = (function (){var obj37243 = {};
return obj37243;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__17665__auto__ = coll;
if(and__17665__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__17665__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__18321__auto__ = (((coll == null))?null:coll);
return (function (){var or__17677__auto__ = (cljs.core._rseq[(function (){var G__37247 = x__18321__auto__;
return goog.typeOf(G__37247);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._rseq["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj37249 = {};
return obj37249;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__17665__auto__ = coll;
if(and__17665__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__17665__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__18321__auto__ = (((coll == null))?null:coll);
return (function (){var or__17677__auto__ = (cljs.core._sorted_seq[(function (){var G__37253 = x__18321__auto__;
return goog.typeOf(G__37253);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__17665__auto__ = coll;
if(and__17665__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__17665__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__18321__auto__ = (((coll == null))?null:coll);
return (function (){var or__17677__auto__ = (cljs.core._sorted_seq_from[(function (){var G__37257 = x__18321__auto__;
return goog.typeOf(G__37257);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__17665__auto__ = coll;
if(and__17665__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__17665__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__18321__auto__ = (((coll == null))?null:coll);
return (function (){var or__17677__auto__ = (cljs.core._entry_key[(function (){var G__37261 = x__18321__auto__;
return goog.typeOf(G__37261);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._entry_key["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__17665__auto__ = coll;
if(and__17665__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__17665__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__18321__auto__ = (((coll == null))?null:coll);
return (function (){var or__17677__auto__ = (cljs.core._comparator[(function (){var G__37265 = x__18321__auto__;
return goog.typeOf(G__37265);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._comparator["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj37267 = {};
return obj37267;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__17665__auto__ = writer;
if(and__17665__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__17665__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__18321__auto__ = (((writer == null))?null:writer);
return (function (){var or__17677__auto__ = (cljs.core._write[(function (){var G__37271 = x__18321__auto__;
return goog.typeOf(G__37271);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._write["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__17665__auto__ = writer;
if(and__17665__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__17665__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__18321__auto__ = (((writer == null))?null:writer);
return (function (){var or__17677__auto__ = (cljs.core._flush[(function (){var G__37275 = x__18321__auto__;
return goog.typeOf(G__37275);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._flush["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj37277 = {};
return obj37277;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__17665__auto__ = o;
if(and__17665__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__17665__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__18321__auto__ = (((o == null))?null:o);
return (function (){var or__17677__auto__ = (cljs.core._pr_writer[(function (){var G__37281 = x__18321__auto__;
return goog.typeOf(G__37281);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj37283 = {};
return obj37283;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__17665__auto__ = d;
if(and__17665__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__17665__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__18321__auto__ = (((d == null))?null:d);
return (function (){var or__17677__auto__ = (cljs.core._realized_QMARK_[(function (){var G__37287 = x__18321__auto__;
return goog.typeOf(G__37287);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj37289 = {};
return obj37289;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__17665__auto__ = this$;
if(and__17665__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__17665__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__18321__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17677__auto__ = (cljs.core._notify_watches[(function (){var G__37293 = x__18321__auto__;
return goog.typeOf(G__37293);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__17665__auto__ = this$;
if(and__17665__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__17665__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__18321__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17677__auto__ = (cljs.core._add_watch[(function (){var G__37297 = x__18321__auto__;
return goog.typeOf(G__37297);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._add_watch["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__17665__auto__ = this$;
if(and__17665__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__17665__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__18321__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17677__auto__ = (cljs.core._remove_watch[(function (){var G__37301 = x__18321__auto__;
return goog.typeOf(G__37301);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj37303 = {};
return obj37303;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__17665__auto__ = coll;
if(and__17665__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__17665__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__18321__auto__ = (((coll == null))?null:coll);
return (function (){var or__17677__auto__ = (cljs.core._as_transient[(function (){var G__37307 = x__18321__auto__;
return goog.typeOf(G__37307);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._as_transient["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj37309 = {};
return obj37309;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__17665__auto__ = tcoll;
if(and__17665__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__17665__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__18321__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__17677__auto__ = (cljs.core._conj_BANG_[(function (){var G__37313 = x__18321__auto__;
return goog.typeOf(G__37313);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__17665__auto__ = tcoll;
if(and__17665__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__17665__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__18321__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__17677__auto__ = (cljs.core._persistent_BANG_[(function (){var G__37317 = x__18321__auto__;
return goog.typeOf(G__37317);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj37319 = {};
return obj37319;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__17665__auto__ = tcoll;
if(and__17665__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__17665__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__18321__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__17677__auto__ = (cljs.core._assoc_BANG_[(function (){var G__37323 = x__18321__auto__;
return goog.typeOf(G__37323);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj37325 = {};
return obj37325;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__17665__auto__ = tcoll;
if(and__17665__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__17665__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__18321__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__17677__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__37329 = x__18321__auto__;
return goog.typeOf(G__37329);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj37331 = {};
return obj37331;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__17665__auto__ = tcoll;
if(and__17665__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__17665__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__18321__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__17677__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__37335 = x__18321__auto__;
return goog.typeOf(G__37335);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__17665__auto__ = tcoll;
if(and__17665__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__17665__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__18321__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__17677__auto__ = (cljs.core._pop_BANG_[(function (){var G__37339 = x__18321__auto__;
return goog.typeOf(G__37339);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj37341 = {};
return obj37341;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__17665__auto__ = tcoll;
if(and__17665__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__17665__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__18321__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__17677__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__37345 = x__18321__auto__;
return goog.typeOf(G__37345);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj37347 = {};
return obj37347;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__17665__auto__ = x;
if(and__17665__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__17665__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__18321__auto__ = (((x == null))?null:x);
return (function (){var or__17677__auto__ = (cljs.core._compare[(function (){var G__37351 = x__18321__auto__;
return goog.typeOf(G__37351);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._compare["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj37353 = {};
return obj37353;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__17665__auto__ = coll;
if(and__17665__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__17665__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__18321__auto__ = (((coll == null))?null:coll);
return (function (){var or__17677__auto__ = (cljs.core._drop_first[(function (){var G__37357 = x__18321__auto__;
return goog.typeOf(G__37357);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._drop_first["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj37359 = {};
return obj37359;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__17665__auto__ = coll;
if(and__17665__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__17665__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__18321__auto__ = (((coll == null))?null:coll);
return (function (){var or__17677__auto__ = (cljs.core._chunked_first[(function (){var G__37363 = x__18321__auto__;
return goog.typeOf(G__37363);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__17665__auto__ = coll;
if(and__17665__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__17665__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__18321__auto__ = (((coll == null))?null:coll);
return (function (){var or__17677__auto__ = (cljs.core._chunked_rest[(function (){var G__37367 = x__18321__auto__;
return goog.typeOf(G__37367);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj37369 = {};
return obj37369;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__17665__auto__ = coll;
if(and__17665__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__17665__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__18321__auto__ = (((coll == null))?null:coll);
return (function (){var or__17677__auto__ = (cljs.core._chunked_next[(function (){var G__37373 = x__18321__auto__;
return goog.typeOf(G__37373);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj37375 = {};
return obj37375;
})();

cljs.core._name = (function _name(x){
if((function (){var and__17665__auto__ = x;
if(and__17665__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__17665__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__18321__auto__ = (((x == null))?null:x);
return (function (){var or__17677__auto__ = (cljs.core._name[(function (){var G__37379 = x__18321__auto__;
return goog.typeOf(G__37379);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._name["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__17665__auto__ = x;
if(and__17665__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__17665__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__18321__auto__ = (((x == null))?null:x);
return (function (){var or__17677__auto__ = (cljs.core._namespace[(function (){var G__37383 = x__18321__auto__;
return goog.typeOf(G__37383);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._namespace["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj37385 = {};
return obj37385;
})();


cljs.core.IReset = (function (){var obj37387 = {};
return obj37387;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__17665__auto__ = o;
if(and__17665__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__17665__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__18321__auto__ = (((o == null))?null:o);
return (function (){var or__17677__auto__ = (cljs.core._reset_BANG_[(function (){var G__37391 = x__18321__auto__;
return goog.typeOf(G__37391);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj37393 = {};
return obj37393;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__17665__auto__ = o;
if(and__17665__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__17665__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__18321__auto__ = (((o == null))?null:o);
return (function (){var or__17677__auto__ = (cljs.core._swap_BANG_[(function (){var G__37403 = x__18321__auto__;
return goog.typeOf(G__37403);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__17665__auto__ = o;
if(and__17665__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__17665__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__18321__auto__ = (((o == null))?null:o);
return (function (){var or__17677__auto__ = (cljs.core._swap_BANG_[(function (){var G__37405 = x__18321__auto__;
return goog.typeOf(G__37405);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__17665__auto__ = o;
if(and__17665__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__17665__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__18321__auto__ = (((o == null))?null:o);
return (function (){var or__17677__auto__ = (cljs.core._swap_BANG_[(function (){var G__37407 = x__18321__auto__;
return goog.typeOf(G__37407);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__17665__auto__ = o;
if(and__17665__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__17665__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__18321__auto__ = (((o == null))?null:o);
return (function (){var or__17677__auto__ = (cljs.core._swap_BANG_[(function (){var G__37409 = x__18321__auto__;
return goog.typeOf(G__37409);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj37411 = {};
return obj37411;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__17665__auto__ = o;
if(and__17665__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__17665__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__18321__auto__ = (((o == null))?null:o);
return (function (){var or__17677__auto__ = (cljs.core._vreset_BANG_[(function (){var G__37415 = x__18321__auto__;
return goog.typeOf(G__37415);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj37417 = {};
return obj37417;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__17665__auto__ = coll;
if(and__17665__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__17665__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__18321__auto__ = (((coll == null))?null:coll);
return (function (){var or__17677__auto__ = (cljs.core._iterator[(function (){var G__37421 = x__18321__auto__;
return goog.typeOf(G__37421);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._iterator["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__18264__auto__,writer__18265__auto__,opt__18266__auto__){
return cljs.core._write(writer__18265__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__37424 = (4294967295);
var G__37425 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__37424,G__37425) : Math.imul.call(null,G__37424,G__37425));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__37428 = a;
var G__37429 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__37428,G__37429) : Math.imul.call(null,G__37428,G__37429));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__37430 = (i + (2));
var G__37431 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__37430;
h1 = G__37431;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj37433 = {};
return obj37433;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__37434 = (i + (1));
var G__37435 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__37434;
hash = G__37435;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj37439 = {};
return obj37439;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__37442 = o;
if(G__37442){
var bit__18351__auto__ = (G__37442.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__18351__auto__) || (G__37442.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__37443 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__37443) : Math.floor.call(null,G__37443));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__17665__auto__ = cljs.core.not(a.ns);
if(and__17665__auto__){
return b.ns;
} else {
return and__17665__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__37450 = a.ns;
var G__37451 = b.ns;
return goog.array.defaultCompare(G__37450,G__37451);
})();
if(((0) === nsc)){
var G__37452 = a.name;
var G__37453 = b.name;
return goog.array.defaultCompare(G__37452,G__37453);
} else {
return nsc;
}
}
} else {
var G__37454 = a.name;
var G__37455 = b.name;
return goog.array.defaultCompare(G__37454,G__37455);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__18098__auto__ = self__._hash;
if(!((h__18098__auto__ == null))){
return h__18098__auto__;
} else {
var h__18098__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__18098__auto____$1;

return h__18098__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__37457 = null;
var G__37457__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__37457__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__37457 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__37457__2.call(this,self__,coll);
case 3:
return G__37457__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__37457.cljs$core$IFn$_invoke$arity$2 = G__37457__2;
G__37457.cljs$core$IFn$_invoke$arity$3 = G__37457__3;
return G__37457;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args37456){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args37456)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__18264__auto__,writer__18265__auto__,opt__18266__auto__){
return cljs.core._write(writer__18265__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__37505 = null;
var G__37505__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__37505__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__37505__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__37505__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__37505__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__37505__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__37505__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__37505__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__37505__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__37505__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__37505__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__37505__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__37505__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__37505__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__37505__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__37505__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__37505__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__37505__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__37505__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__37505__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__37505__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__37505__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__37461 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__37462 = a;
var G__37463 = b;
var G__37464 = c;
var G__37465 = d;
var G__37466 = e;
var G__37467 = f;
var G__37468 = g;
var G__37469 = h;
var G__37470 = i;
var G__37471 = j;
var G__37472 = k;
var G__37473 = l;
var G__37474 = m;
var G__37475 = n;
var G__37476 = o;
var G__37477 = p;
var G__37478 = q;
var G__37479 = r;
var G__37480 = s;
var G__37481 = t;
var G__37482 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__37461,G__37462,G__37463,G__37464,G__37465,G__37466,G__37467,G__37468,G__37469,G__37470,G__37471,G__37472,G__37473,G__37474,G__37475,G__37476,G__37477,G__37478,G__37479,G__37480,G__37481,G__37482) : cljs.core.apply.call(null,G__37461,G__37462,G__37463,G__37464,G__37465,G__37466,G__37467,G__37468,G__37469,G__37470,G__37471,G__37472,G__37473,G__37474,G__37475,G__37476,G__37477,G__37478,G__37479,G__37480,G__37481,G__37482));
});
G__37505 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__37505__1.call(this,self__);
case 2:
return G__37505__2.call(this,self__,a);
case 3:
return G__37505__3.call(this,self__,a,b);
case 4:
return G__37505__4.call(this,self__,a,b,c);
case 5:
return G__37505__5.call(this,self__,a,b,c,d);
case 6:
return G__37505__6.call(this,self__,a,b,c,d,e);
case 7:
return G__37505__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__37505__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__37505__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__37505__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__37505__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__37505__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__37505__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__37505__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__37505__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__37505__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__37505__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__37505__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__37505__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__37505__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__37505__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__37505__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__37505.cljs$core$IFn$_invoke$arity$1 = G__37505__1;
G__37505.cljs$core$IFn$_invoke$arity$2 = G__37505__2;
G__37505.cljs$core$IFn$_invoke$arity$3 = G__37505__3;
G__37505.cljs$core$IFn$_invoke$arity$4 = G__37505__4;
G__37505.cljs$core$IFn$_invoke$arity$5 = G__37505__5;
G__37505.cljs$core$IFn$_invoke$arity$6 = G__37505__6;
G__37505.cljs$core$IFn$_invoke$arity$7 = G__37505__7;
G__37505.cljs$core$IFn$_invoke$arity$8 = G__37505__8;
G__37505.cljs$core$IFn$_invoke$arity$9 = G__37505__9;
G__37505.cljs$core$IFn$_invoke$arity$10 = G__37505__10;
G__37505.cljs$core$IFn$_invoke$arity$11 = G__37505__11;
G__37505.cljs$core$IFn$_invoke$arity$12 = G__37505__12;
G__37505.cljs$core$IFn$_invoke$arity$13 = G__37505__13;
G__37505.cljs$core$IFn$_invoke$arity$14 = G__37505__14;
G__37505.cljs$core$IFn$_invoke$arity$15 = G__37505__15;
G__37505.cljs$core$IFn$_invoke$arity$16 = G__37505__16;
G__37505.cljs$core$IFn$_invoke$arity$17 = G__37505__17;
G__37505.cljs$core$IFn$_invoke$arity$18 = G__37505__18;
G__37505.cljs$core$IFn$_invoke$arity$19 = G__37505__19;
G__37505.cljs$core$IFn$_invoke$arity$20 = G__37505__20;
G__37505.cljs$core$IFn$_invoke$arity$21 = G__37505__21;
G__37505.cljs$core$IFn$_invoke$arity$22 = G__37505__22;
return G__37505;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args37460){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args37460)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__37483 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__37484 = a;
var G__37485 = b;
var G__37486 = c;
var G__37487 = d;
var G__37488 = e;
var G__37489 = f;
var G__37490 = g;
var G__37491 = h;
var G__37492 = i;
var G__37493 = j;
var G__37494 = k;
var G__37495 = l;
var G__37496 = m;
var G__37497 = n;
var G__37498 = o;
var G__37499 = p;
var G__37500 = q;
var G__37501 = r;
var G__37502 = s;
var G__37503 = t;
var G__37504 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__37483,G__37484,G__37485,G__37486,G__37487,G__37488,G__37489,G__37490,G__37491,G__37492,G__37493,G__37494,G__37495,G__37496,G__37497,G__37498,G__37499,G__37500,G__37501,G__37502,G__37503,G__37504) : cljs.core.apply.call(null,G__37483,G__37484,G__37485,G__37486,G__37487,G__37488,G__37489,G__37490,G__37491,G__37492,G__37493,G__37494,G__37495,G__37496,G__37497,G__37498,G__37499,G__37500,G__37501,G__37502,G__37503,G__37504));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__18264__auto__,writer__18265__auto__,opt__18266__auto__){
return cljs.core._write(writer__18265__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__37507 = x;
if(G__37507){
var bit__18358__auto__ = null;
if(cljs.core.truth_((function (){var or__17677__auto__ = bit__18358__auto__;
if(cljs.core.truth_(or__17677__auto__)){
return or__17677__auto__;
} else {
return G__37507.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__37507.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__37507);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__37507);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__37509 = value;
if(G__37509){
var bit__18358__auto__ = (G__37509.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__18358__auto__) || (G__37509.cljs$core$ICloneable$)){
return true;
} else {
if((!G__37509.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__37509);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__37509);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__37511 = coll;
if(G__37511){
var bit__18351__auto__ = (G__37511.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__18351__auto__) || (G__37511.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__37513 = coll;
if(G__37513){
var bit__18351__auto__ = (G__37513.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__18351__auto__) || (G__37513.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__37515 = coll;
if(G__37515){
var bit__18351__auto__ = (G__37515.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__18351__auto__) || (G__37515.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__37517 = coll;
if(G__37517){
var bit__18351__auto__ = (G__37517.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__18351__auto__) || (G__37517.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__37522__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__37523 = y;
var G__37524 = cljs.core.first(more);
var G__37525 = cljs.core.next(more);
x = G__37523;
y = G__37524;
more = G__37525;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__37522 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__37526__i = 0, G__37526__a = new Array(arguments.length -  2);
while (G__37526__i < G__37526__a.length) {G__37526__a[G__37526__i] = arguments[G__37526__i + 2]; ++G__37526__i;}
  more = new cljs.core.IndexedSeq(G__37526__a,0);
} 
return G__37522__delegate.call(this,x,y,more);};
G__37522.cljs$lang$maxFixedArity = 2;
G__37522.cljs$lang$applyTo = (function (arglist__37527){
var x = cljs.core.first(arglist__37527);
arglist__37527 = cljs.core.next(arglist__37527);
var y = cljs.core.first(arglist__37527);
var more = cljs.core.rest(arglist__37527);
return G__37522__delegate(x,y,more);
});
G__37522.cljs$core$IFn$_invoke$arity$variadic = G__37522__delegate;
return G__37522;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__37528 = null;
if (arguments.length > 2) {
var G__37529__i = 0, G__37529__a = new Array(arguments.length -  2);
while (G__37529__i < G__37529__a.length) {G__37529__a[G__37529__i] = arguments[G__37529__i + 2]; ++G__37529__i;}
G__37528 = new cljs.core.IndexedSeq(G__37529__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__37528);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__18264__auto__,writer__18265__auto__,opt__18266__auto__){
return cljs.core._write(writer__18265__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__37530 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__37530) : cljs.core.es6_iterator_seq.call(null,G__37530));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__18264__auto__,writer__18265__auto__,opt__18266__auto__){
return cljs.core._write(writer__18265__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__37531 = (n + (1));
var G__37532 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__37533 = cljs.core.next(coll__$1);
n = G__37531;
hash_code = G__37532;
coll__$1 = G__37533;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__37534 = (n + (1));
var G__37535 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__37536 = cljs.core.next(coll__$1);
n = G__37534;
hash_code = G__37535;
coll__$1 = G__37536;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__37537 = o;
return goog.getUid(G__37537);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__18264__auto__,writer__18265__auto__,opt__18266__auto__){
return cljs.core._write(writer__18265__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__37539 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__37539) : cljs.core.deref.call(null,G__37539));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__37546 = val;
var G__37547 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__37546,G__37547) : f.call(null,G__37546,G__37547));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__37552 = nval;
var G__37553 = (n + (1));
val = G__37552;
n = G__37553;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__37548 = val__$1;
var G__37549 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__37548,G__37549) : f.call(null,G__37548,G__37549));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__37554 = nval;
var G__37555 = (n + (1));
val__$1 = G__37554;
n = G__37555;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__37550 = val__$1;
var G__37551 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__37550,G__37551) : f.call(null,G__37550,G__37551));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__37556 = nval;
var G__37557 = (n + (1));
val__$1 = G__37556;
n = G__37557;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__37564 = val;
var G__37565 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__37564,G__37565) : f.call(null,G__37564,G__37565));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__37570 = nval;
var G__37571 = (n + (1));
val = G__37570;
n = G__37571;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__37566 = val__$1;
var G__37567 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__37566,G__37567) : f.call(null,G__37566,G__37567));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__37572 = nval;
var G__37573 = (n + (1));
val__$1 = G__37572;
n = G__37573;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__37568 = val__$1;
var G__37569 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__37568,G__37569) : f.call(null,G__37568,G__37569));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__37574 = nval;
var G__37575 = (n + (1));
val__$1 = G__37574;
n = G__37575;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__37577 = x;
if(G__37577){
var bit__18358__auto__ = (G__37577.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__18358__auto__) || (G__37577.cljs$core$ICounted$)){
return true;
} else {
if((!G__37577.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__37577);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__37577);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__37579 = x;
if(G__37579){
var bit__18358__auto__ = (G__37579.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__18358__auto__) || (G__37579.cljs$core$IIndexed$)){
return true;
} else {
if((!G__37579.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__37579);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__37579);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__18264__auto__,writer__18265__auto__,opt__18266__auto__){
return cljs.core._write(writer__18265__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__37580 = coll__$1;
var G__37581 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__37580,G__37581) : cljs.core.equiv_sequential.call(null,G__37580,G__37581));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__37582 = o;
var G__37583 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__37582,G__37583) : cljs.core.cons.call(null,G__37582,G__37583));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__18264__auto__,writer__18265__auto__,opt__18266__auto__){
return cljs.core._write(writer__18265__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18655__auto__ = this;
return cljs.core.es6_iterator(this__18655__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__37586 = coll__$1;
var G__37587 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__37586,G__37587) : cljs.core.equiv_sequential.call(null,G__37586,G__37587));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__37588 = cljs.core.List.EMPTY;
var G__37589 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__37588,G__37589) : cljs.core.with_meta.call(null,G__37588,G__37589));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__37590 = f;
var G__37591 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__37590,G__37591) : cljs.core.seq_reduce.call(null,G__37590,G__37591));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__37592 = f;
var G__37593 = start;
var G__37594 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__37592,G__37593,G__37594) : cljs.core.seq_reduce.call(null,G__37592,G__37593,G__37594));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__37595 = o;
var G__37596 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__37595,G__37596) : cljs.core.cons.call(null,G__37595,G__37596));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__18264__auto__,writer__18265__auto__,opt__18266__auto__){
return cljs.core._write(writer__18265__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18655__auto__ = this;
return cljs.core.es6_iterator(this__18655__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__37597 = sn;
s = G__37597;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__37602__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__37603 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__37604 = cljs.core.first(xs);
var G__37605 = cljs.core.next(xs);
coll = G__37603;
x = G__37604;
xs = G__37605;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__37602 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__37606__i = 0, G__37606__a = new Array(arguments.length -  2);
while (G__37606__i < G__37606__a.length) {G__37606__a[G__37606__i] = arguments[G__37606__i + 2]; ++G__37606__i;}
  xs = new cljs.core.IndexedSeq(G__37606__a,0);
} 
return G__37602__delegate.call(this,coll,x,xs);};
G__37602.cljs$lang$maxFixedArity = 2;
G__37602.cljs$lang$applyTo = (function (arglist__37607){
var coll = cljs.core.first(arglist__37607);
arglist__37607 = cljs.core.next(arglist__37607);
var x = cljs.core.first(arglist__37607);
var xs = cljs.core.rest(arglist__37607);
return G__37602__delegate(coll,x,xs);
});
G__37602.cljs$core$IFn$_invoke$arity$variadic = G__37602__delegate;
return G__37602;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__37608 = null;
if (arguments.length > 2) {
var G__37609__i = 0, G__37609__a = new Array(arguments.length -  2);
while (G__37609__i < G__37609__a.length) {G__37609__a[G__37609__i] = arguments[G__37609__i + 2]; ++G__37609__i;}
G__37608 = new cljs.core.IndexedSeq(G__37609__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__37608);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__37610 = cljs.core.next(s);
var G__37611 = (acc + (1));
s = G__37610;
acc = G__37611;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__37613 = coll;
if(G__37613){
var bit__18351__auto__ = (G__37613.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__18351__auto__) || (G__37613.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__37614 = cljs.core.next(coll);
var G__37615 = (n - (1));
coll = G__37614;
n = G__37615;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__37616 = cljs.core.next(coll);
var G__37617 = (n - (1));
var G__37618 = not_found;
coll = G__37616;
n = G__37617;
not_found = G__37618;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__37623 = coll;
if(G__37623){
var bit__18351__auto__ = (G__37623.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__18351__auto__) || (G__37623.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__37624 = coll;
if(G__37624){
var bit__18358__auto__ = (G__37624.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__18358__auto__) || (G__37624.cljs$core$ISeq$)){
return true;
} else {
if((!G__37624.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__37624);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__37624);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__37625 = coll;
if(G__37625){
var bit__18351__auto__ = (G__37625.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__18351__auto__) || (G__37625.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__37626 = coll;
if(G__37626){
var bit__18358__auto__ = (G__37626.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__18358__auto__) || (G__37626.cljs$core$ISeq$)){
return true;
} else {
if((!G__37626.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__37626);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__37626);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__37627 = (n__$1 - (1));
var G__37628 = cljs.core.rest(xs);
n__$1 = G__37627;
xs = G__37628;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__37631 = o;
if(G__37631){
var bit__18351__auto__ = (G__37631.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__18351__auto__) || (G__37631.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__37632 = o;
if(G__37632){
var bit__18351__auto__ = (G__37632.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__18351__auto__) || (G__37632.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__37636__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__37637 = ret;
var G__37638 = cljs.core.first(kvs);
var G__37639 = cljs.core.second(kvs);
var G__37640 = cljs.core.nnext(kvs);
coll = G__37637;
k = G__37638;
v = G__37639;
kvs = G__37640;
continue;
} else {
return ret;
}
break;
}
};
var G__37636 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__37641__i = 0, G__37641__a = new Array(arguments.length -  3);
while (G__37641__i < G__37641__a.length) {G__37641__a[G__37641__i] = arguments[G__37641__i + 3]; ++G__37641__i;}
  kvs = new cljs.core.IndexedSeq(G__37641__a,0);
} 
return G__37636__delegate.call(this,coll,k,v,kvs);};
G__37636.cljs$lang$maxFixedArity = 3;
G__37636.cljs$lang$applyTo = (function (arglist__37642){
var coll = cljs.core.first(arglist__37642);
arglist__37642 = cljs.core.next(arglist__37642);
var k = cljs.core.first(arglist__37642);
arglist__37642 = cljs.core.next(arglist__37642);
var v = cljs.core.first(arglist__37642);
var kvs = cljs.core.rest(arglist__37642);
return G__37636__delegate(coll,k,v,kvs);
});
G__37636.cljs$core$IFn$_invoke$arity$variadic = G__37636__delegate;
return G__37636;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__37643 = null;
if (arguments.length > 3) {
var G__37644__i = 0, G__37644__a = new Array(arguments.length -  3);
while (G__37644__i < G__37644__a.length) {G__37644__a[G__37644__i] = arguments[G__37644__i + 3]; ++G__37644__i;}
G__37643 = new cljs.core.IndexedSeq(G__37644__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__37643);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__37647__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__37648 = ret;
var G__37649 = cljs.core.first(ks);
var G__37650 = cljs.core.next(ks);
coll = G__37648;
k = G__37649;
ks = G__37650;
continue;
} else {
return ret;
}
}
break;
}
};
var G__37647 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__37651__i = 0, G__37651__a = new Array(arguments.length -  2);
while (G__37651__i < G__37651__a.length) {G__37651__a[G__37651__i] = arguments[G__37651__i + 2]; ++G__37651__i;}
  ks = new cljs.core.IndexedSeq(G__37651__a,0);
} 
return G__37647__delegate.call(this,coll,k,ks);};
G__37647.cljs$lang$maxFixedArity = 2;
G__37647.cljs$lang$applyTo = (function (arglist__37652){
var coll = cljs.core.first(arglist__37652);
arglist__37652 = cljs.core.next(arglist__37652);
var k = cljs.core.first(arglist__37652);
var ks = cljs.core.rest(arglist__37652);
return G__37647__delegate(coll,k,ks);
});
G__37647.cljs$core$IFn$_invoke$arity$variadic = G__37647__delegate;
return G__37647;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__37653 = null;
if (arguments.length > 2) {
var G__37654__i = 0, G__37654__a = new Array(arguments.length -  2);
while (G__37654__i < G__37654__a.length) {G__37654__a[G__37654__i] = arguments[G__37654__i + 2]; ++G__37654__i;}
G__37653 = new cljs.core.IndexedSeq(G__37654__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__37653);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__17677__auto__ = (function (){var G__37659 = f;
return goog.isFunction(G__37659);
})();
if(cljs.core.truth_(or__17677__auto__)){
return or__17677__auto__;
} else {
var G__37660 = f;
if(G__37660){
var bit__18358__auto__ = null;
if(cljs.core.truth_((function (){var or__17677__auto____$1 = bit__18358__auto__;
if(cljs.core.truth_(or__17677__auto____$1)){
return or__17677__auto____$1;
} else {
return G__37660.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__37660.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__37660);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__37660);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__38126 = null;
var G__38126__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__38126__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__37662 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__37662) : self__.afn.call(null,G__37662));
});
var G__38126__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__37663 = a;
var G__37664 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__37663,G__37664) : self__.afn.call(null,G__37663,G__37664));
});
var G__38126__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__37665 = a;
var G__37666 = b;
var G__37667 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__37665,G__37666,G__37667) : self__.afn.call(null,G__37665,G__37666,G__37667));
});
var G__38126__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__37668 = a;
var G__37669 = b;
var G__37670 = c;
var G__37671 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__37668,G__37669,G__37670,G__37671) : self__.afn.call(null,G__37668,G__37669,G__37670,G__37671));
});
var G__38126__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__37672 = a;
var G__37673 = b;
var G__37674 = c;
var G__37675 = d;
var G__37676 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__37672,G__37673,G__37674,G__37675,G__37676) : self__.afn.call(null,G__37672,G__37673,G__37674,G__37675,G__37676));
});
var G__38126__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__37677 = a;
var G__37678 = b;
var G__37679 = c;
var G__37680 = d;
var G__37681 = e;
var G__37682 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__37677,G__37678,G__37679,G__37680,G__37681,G__37682) : self__.afn.call(null,G__37677,G__37678,G__37679,G__37680,G__37681,G__37682));
});
var G__38126__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__37683 = a;
var G__37684 = b;
var G__37685 = c;
var G__37686 = d;
var G__37687 = e;
var G__37688 = f;
var G__37689 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__37683,G__37684,G__37685,G__37686,G__37687,G__37688,G__37689) : self__.afn.call(null,G__37683,G__37684,G__37685,G__37686,G__37687,G__37688,G__37689));
});
var G__38126__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__37690 = a;
var G__37691 = b;
var G__37692 = c;
var G__37693 = d;
var G__37694 = e;
var G__37695 = f;
var G__37696 = g;
var G__37697 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__37690,G__37691,G__37692,G__37693,G__37694,G__37695,G__37696,G__37697) : self__.afn.call(null,G__37690,G__37691,G__37692,G__37693,G__37694,G__37695,G__37696,G__37697));
});
var G__38126__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__37698 = a;
var G__37699 = b;
var G__37700 = c;
var G__37701 = d;
var G__37702 = e;
var G__37703 = f;
var G__37704 = g;
var G__37705 = h;
var G__37706 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__37698,G__37699,G__37700,G__37701,G__37702,G__37703,G__37704,G__37705,G__37706) : self__.afn.call(null,G__37698,G__37699,G__37700,G__37701,G__37702,G__37703,G__37704,G__37705,G__37706));
});
var G__38126__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__37707 = a;
var G__37708 = b;
var G__37709 = c;
var G__37710 = d;
var G__37711 = e;
var G__37712 = f;
var G__37713 = g;
var G__37714 = h;
var G__37715 = i;
var G__37716 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__37707,G__37708,G__37709,G__37710,G__37711,G__37712,G__37713,G__37714,G__37715,G__37716) : self__.afn.call(null,G__37707,G__37708,G__37709,G__37710,G__37711,G__37712,G__37713,G__37714,G__37715,G__37716));
});
var G__38126__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__37717 = a;
var G__37718 = b;
var G__37719 = c;
var G__37720 = d;
var G__37721 = e;
var G__37722 = f;
var G__37723 = g;
var G__37724 = h;
var G__37725 = i;
var G__37726 = j;
var G__37727 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__37717,G__37718,G__37719,G__37720,G__37721,G__37722,G__37723,G__37724,G__37725,G__37726,G__37727) : self__.afn.call(null,G__37717,G__37718,G__37719,G__37720,G__37721,G__37722,G__37723,G__37724,G__37725,G__37726,G__37727));
});
var G__38126__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__37728 = a;
var G__37729 = b;
var G__37730 = c;
var G__37731 = d;
var G__37732 = e;
var G__37733 = f;
var G__37734 = g;
var G__37735 = h;
var G__37736 = i;
var G__37737 = j;
var G__37738 = k;
var G__37739 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__37728,G__37729,G__37730,G__37731,G__37732,G__37733,G__37734,G__37735,G__37736,G__37737,G__37738,G__37739) : self__.afn.call(null,G__37728,G__37729,G__37730,G__37731,G__37732,G__37733,G__37734,G__37735,G__37736,G__37737,G__37738,G__37739));
});
var G__38126__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__37740 = a;
var G__37741 = b;
var G__37742 = c;
var G__37743 = d;
var G__37744 = e;
var G__37745 = f;
var G__37746 = g;
var G__37747 = h;
var G__37748 = i;
var G__37749 = j;
var G__37750 = k;
var G__37751 = l;
var G__37752 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__37740,G__37741,G__37742,G__37743,G__37744,G__37745,G__37746,G__37747,G__37748,G__37749,G__37750,G__37751,G__37752) : self__.afn.call(null,G__37740,G__37741,G__37742,G__37743,G__37744,G__37745,G__37746,G__37747,G__37748,G__37749,G__37750,G__37751,G__37752));
});
var G__38126__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__37753 = a;
var G__37754 = b;
var G__37755 = c;
var G__37756 = d;
var G__37757 = e;
var G__37758 = f;
var G__37759 = g;
var G__37760 = h;
var G__37761 = i;
var G__37762 = j;
var G__37763 = k;
var G__37764 = l;
var G__37765 = m;
var G__37766 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__37753,G__37754,G__37755,G__37756,G__37757,G__37758,G__37759,G__37760,G__37761,G__37762,G__37763,G__37764,G__37765,G__37766) : self__.afn.call(null,G__37753,G__37754,G__37755,G__37756,G__37757,G__37758,G__37759,G__37760,G__37761,G__37762,G__37763,G__37764,G__37765,G__37766));
});
var G__38126__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__37767 = a;
var G__37768 = b;
var G__37769 = c;
var G__37770 = d;
var G__37771 = e;
var G__37772 = f;
var G__37773 = g;
var G__37774 = h;
var G__37775 = i;
var G__37776 = j;
var G__37777 = k;
var G__37778 = l;
var G__37779 = m;
var G__37780 = n;
var G__37781 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__37767,G__37768,G__37769,G__37770,G__37771,G__37772,G__37773,G__37774,G__37775,G__37776,G__37777,G__37778,G__37779,G__37780,G__37781) : self__.afn.call(null,G__37767,G__37768,G__37769,G__37770,G__37771,G__37772,G__37773,G__37774,G__37775,G__37776,G__37777,G__37778,G__37779,G__37780,G__37781));
});
var G__38126__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__37782 = a;
var G__37783 = b;
var G__37784 = c;
var G__37785 = d;
var G__37786 = e;
var G__37787 = f;
var G__37788 = g;
var G__37789 = h;
var G__37790 = i;
var G__37791 = j;
var G__37792 = k;
var G__37793 = l;
var G__37794 = m;
var G__37795 = n;
var G__37796 = o;
var G__37797 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__37782,G__37783,G__37784,G__37785,G__37786,G__37787,G__37788,G__37789,G__37790,G__37791,G__37792,G__37793,G__37794,G__37795,G__37796,G__37797) : self__.afn.call(null,G__37782,G__37783,G__37784,G__37785,G__37786,G__37787,G__37788,G__37789,G__37790,G__37791,G__37792,G__37793,G__37794,G__37795,G__37796,G__37797));
});
var G__38126__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__37798 = a;
var G__37799 = b;
var G__37800 = c;
var G__37801 = d;
var G__37802 = e;
var G__37803 = f;
var G__37804 = g;
var G__37805 = h;
var G__37806 = i;
var G__37807 = j;
var G__37808 = k;
var G__37809 = l;
var G__37810 = m;
var G__37811 = n;
var G__37812 = o;
var G__37813 = p;
var G__37814 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__37798,G__37799,G__37800,G__37801,G__37802,G__37803,G__37804,G__37805,G__37806,G__37807,G__37808,G__37809,G__37810,G__37811,G__37812,G__37813,G__37814) : self__.afn.call(null,G__37798,G__37799,G__37800,G__37801,G__37802,G__37803,G__37804,G__37805,G__37806,G__37807,G__37808,G__37809,G__37810,G__37811,G__37812,G__37813,G__37814));
});
var G__38126__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__37815 = a;
var G__37816 = b;
var G__37817 = c;
var G__37818 = d;
var G__37819 = e;
var G__37820 = f;
var G__37821 = g;
var G__37822 = h;
var G__37823 = i;
var G__37824 = j;
var G__37825 = k;
var G__37826 = l;
var G__37827 = m;
var G__37828 = n;
var G__37829 = o;
var G__37830 = p;
var G__37831 = q;
var G__37832 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__37815,G__37816,G__37817,G__37818,G__37819,G__37820,G__37821,G__37822,G__37823,G__37824,G__37825,G__37826,G__37827,G__37828,G__37829,G__37830,G__37831,G__37832) : self__.afn.call(null,G__37815,G__37816,G__37817,G__37818,G__37819,G__37820,G__37821,G__37822,G__37823,G__37824,G__37825,G__37826,G__37827,G__37828,G__37829,G__37830,G__37831,G__37832));
});
var G__38126__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__37833 = a;
var G__37834 = b;
var G__37835 = c;
var G__37836 = d;
var G__37837 = e;
var G__37838 = f;
var G__37839 = g;
var G__37840 = h;
var G__37841 = i;
var G__37842 = j;
var G__37843 = k;
var G__37844 = l;
var G__37845 = m;
var G__37846 = n;
var G__37847 = o;
var G__37848 = p;
var G__37849 = q;
var G__37850 = r;
var G__37851 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__37833,G__37834,G__37835,G__37836,G__37837,G__37838,G__37839,G__37840,G__37841,G__37842,G__37843,G__37844,G__37845,G__37846,G__37847,G__37848,G__37849,G__37850,G__37851) : self__.afn.call(null,G__37833,G__37834,G__37835,G__37836,G__37837,G__37838,G__37839,G__37840,G__37841,G__37842,G__37843,G__37844,G__37845,G__37846,G__37847,G__37848,G__37849,G__37850,G__37851));
});
var G__38126__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__37852 = a;
var G__37853 = b;
var G__37854 = c;
var G__37855 = d;
var G__37856 = e;
var G__37857 = f;
var G__37858 = g;
var G__37859 = h;
var G__37860 = i;
var G__37861 = j;
var G__37862 = k;
var G__37863 = l;
var G__37864 = m;
var G__37865 = n;
var G__37866 = o;
var G__37867 = p;
var G__37868 = q;
var G__37869 = r;
var G__37870 = s;
var G__37871 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__37852,G__37853,G__37854,G__37855,G__37856,G__37857,G__37858,G__37859,G__37860,G__37861,G__37862,G__37863,G__37864,G__37865,G__37866,G__37867,G__37868,G__37869,G__37870,G__37871) : self__.afn.call(null,G__37852,G__37853,G__37854,G__37855,G__37856,G__37857,G__37858,G__37859,G__37860,G__37861,G__37862,G__37863,G__37864,G__37865,G__37866,G__37867,G__37868,G__37869,G__37870,G__37871));
});
var G__38126__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__37872 = self__.afn;
var G__37873 = a;
var G__37874 = b;
var G__37875 = c;
var G__37876 = d;
var G__37877 = e;
var G__37878 = f;
var G__37879 = g;
var G__37880 = h;
var G__37881 = i;
var G__37882 = j;
var G__37883 = k;
var G__37884 = l;
var G__37885 = m;
var G__37886 = n;
var G__37887 = o;
var G__37888 = p;
var G__37889 = q;
var G__37890 = r;
var G__37891 = s;
var G__37892 = t;
var G__37893 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__37872,G__37873,G__37874,G__37875,G__37876,G__37877,G__37878,G__37879,G__37880,G__37881,G__37882,G__37883,G__37884,G__37885,G__37886,G__37887,G__37888,G__37889,G__37890,G__37891,G__37892,G__37893) : cljs.core.apply.call(null,G__37872,G__37873,G__37874,G__37875,G__37876,G__37877,G__37878,G__37879,G__37880,G__37881,G__37882,G__37883,G__37884,G__37885,G__37886,G__37887,G__37888,G__37889,G__37890,G__37891,G__37892,G__37893));
});
G__38126 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__38126__1.call(this,self__);
case 2:
return G__38126__2.call(this,self__,a);
case 3:
return G__38126__3.call(this,self__,a,b);
case 4:
return G__38126__4.call(this,self__,a,b,c);
case 5:
return G__38126__5.call(this,self__,a,b,c,d);
case 6:
return G__38126__6.call(this,self__,a,b,c,d,e);
case 7:
return G__38126__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__38126__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__38126__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__38126__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__38126__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__38126__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__38126__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__38126__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__38126__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__38126__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__38126__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__38126__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__38126__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__38126__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__38126__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__38126__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__38126.cljs$core$IFn$_invoke$arity$1 = G__38126__1;
G__38126.cljs$core$IFn$_invoke$arity$2 = G__38126__2;
G__38126.cljs$core$IFn$_invoke$arity$3 = G__38126__3;
G__38126.cljs$core$IFn$_invoke$arity$4 = G__38126__4;
G__38126.cljs$core$IFn$_invoke$arity$5 = G__38126__5;
G__38126.cljs$core$IFn$_invoke$arity$6 = G__38126__6;
G__38126.cljs$core$IFn$_invoke$arity$7 = G__38126__7;
G__38126.cljs$core$IFn$_invoke$arity$8 = G__38126__8;
G__38126.cljs$core$IFn$_invoke$arity$9 = G__38126__9;
G__38126.cljs$core$IFn$_invoke$arity$10 = G__38126__10;
G__38126.cljs$core$IFn$_invoke$arity$11 = G__38126__11;
G__38126.cljs$core$IFn$_invoke$arity$12 = G__38126__12;
G__38126.cljs$core$IFn$_invoke$arity$13 = G__38126__13;
G__38126.cljs$core$IFn$_invoke$arity$14 = G__38126__14;
G__38126.cljs$core$IFn$_invoke$arity$15 = G__38126__15;
G__38126.cljs$core$IFn$_invoke$arity$16 = G__38126__16;
G__38126.cljs$core$IFn$_invoke$arity$17 = G__38126__17;
G__38126.cljs$core$IFn$_invoke$arity$18 = G__38126__18;
G__38126.cljs$core$IFn$_invoke$arity$19 = G__38126__19;
G__38126.cljs$core$IFn$_invoke$arity$20 = G__38126__20;
G__38126.cljs$core$IFn$_invoke$arity$21 = G__38126__21;
G__38126.cljs$core$IFn$_invoke$arity$22 = G__38126__22;
return G__38126;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args37661){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args37661)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__37894 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__37894) : self__.afn.call(null,G__37894));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__37895 = a;
var G__37896 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__37895,G__37896) : self__.afn.call(null,G__37895,G__37896));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__37897 = a;
var G__37898 = b;
var G__37899 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__37897,G__37898,G__37899) : self__.afn.call(null,G__37897,G__37898,G__37899));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__37900 = a;
var G__37901 = b;
var G__37902 = c;
var G__37903 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__37900,G__37901,G__37902,G__37903) : self__.afn.call(null,G__37900,G__37901,G__37902,G__37903));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__37904 = a;
var G__37905 = b;
var G__37906 = c;
var G__37907 = d;
var G__37908 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__37904,G__37905,G__37906,G__37907,G__37908) : self__.afn.call(null,G__37904,G__37905,G__37906,G__37907,G__37908));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__37909 = a;
var G__37910 = b;
var G__37911 = c;
var G__37912 = d;
var G__37913 = e;
var G__37914 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__37909,G__37910,G__37911,G__37912,G__37913,G__37914) : self__.afn.call(null,G__37909,G__37910,G__37911,G__37912,G__37913,G__37914));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__37915 = a;
var G__37916 = b;
var G__37917 = c;
var G__37918 = d;
var G__37919 = e;
var G__37920 = f;
var G__37921 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__37915,G__37916,G__37917,G__37918,G__37919,G__37920,G__37921) : self__.afn.call(null,G__37915,G__37916,G__37917,G__37918,G__37919,G__37920,G__37921));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__37922 = a;
var G__37923 = b;
var G__37924 = c;
var G__37925 = d;
var G__37926 = e;
var G__37927 = f;
var G__37928 = g;
var G__37929 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__37922,G__37923,G__37924,G__37925,G__37926,G__37927,G__37928,G__37929) : self__.afn.call(null,G__37922,G__37923,G__37924,G__37925,G__37926,G__37927,G__37928,G__37929));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__37930 = a;
var G__37931 = b;
var G__37932 = c;
var G__37933 = d;
var G__37934 = e;
var G__37935 = f;
var G__37936 = g;
var G__37937 = h;
var G__37938 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__37930,G__37931,G__37932,G__37933,G__37934,G__37935,G__37936,G__37937,G__37938) : self__.afn.call(null,G__37930,G__37931,G__37932,G__37933,G__37934,G__37935,G__37936,G__37937,G__37938));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__37939 = a;
var G__37940 = b;
var G__37941 = c;
var G__37942 = d;
var G__37943 = e;
var G__37944 = f;
var G__37945 = g;
var G__37946 = h;
var G__37947 = i;
var G__37948 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__37939,G__37940,G__37941,G__37942,G__37943,G__37944,G__37945,G__37946,G__37947,G__37948) : self__.afn.call(null,G__37939,G__37940,G__37941,G__37942,G__37943,G__37944,G__37945,G__37946,G__37947,G__37948));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__37949 = a;
var G__37950 = b;
var G__37951 = c;
var G__37952 = d;
var G__37953 = e;
var G__37954 = f;
var G__37955 = g;
var G__37956 = h;
var G__37957 = i;
var G__37958 = j;
var G__37959 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__37949,G__37950,G__37951,G__37952,G__37953,G__37954,G__37955,G__37956,G__37957,G__37958,G__37959) : self__.afn.call(null,G__37949,G__37950,G__37951,G__37952,G__37953,G__37954,G__37955,G__37956,G__37957,G__37958,G__37959));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__37960 = a;
var G__37961 = b;
var G__37962 = c;
var G__37963 = d;
var G__37964 = e;
var G__37965 = f;
var G__37966 = g;
var G__37967 = h;
var G__37968 = i;
var G__37969 = j;
var G__37970 = k;
var G__37971 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__37960,G__37961,G__37962,G__37963,G__37964,G__37965,G__37966,G__37967,G__37968,G__37969,G__37970,G__37971) : self__.afn.call(null,G__37960,G__37961,G__37962,G__37963,G__37964,G__37965,G__37966,G__37967,G__37968,G__37969,G__37970,G__37971));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__37972 = a;
var G__37973 = b;
var G__37974 = c;
var G__37975 = d;
var G__37976 = e;
var G__37977 = f;
var G__37978 = g;
var G__37979 = h;
var G__37980 = i;
var G__37981 = j;
var G__37982 = k;
var G__37983 = l;
var G__37984 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__37972,G__37973,G__37974,G__37975,G__37976,G__37977,G__37978,G__37979,G__37980,G__37981,G__37982,G__37983,G__37984) : self__.afn.call(null,G__37972,G__37973,G__37974,G__37975,G__37976,G__37977,G__37978,G__37979,G__37980,G__37981,G__37982,G__37983,G__37984));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__37985 = a;
var G__37986 = b;
var G__37987 = c;
var G__37988 = d;
var G__37989 = e;
var G__37990 = f;
var G__37991 = g;
var G__37992 = h;
var G__37993 = i;
var G__37994 = j;
var G__37995 = k;
var G__37996 = l;
var G__37997 = m;
var G__37998 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__37985,G__37986,G__37987,G__37988,G__37989,G__37990,G__37991,G__37992,G__37993,G__37994,G__37995,G__37996,G__37997,G__37998) : self__.afn.call(null,G__37985,G__37986,G__37987,G__37988,G__37989,G__37990,G__37991,G__37992,G__37993,G__37994,G__37995,G__37996,G__37997,G__37998));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__37999 = a;
var G__38000 = b;
var G__38001 = c;
var G__38002 = d;
var G__38003 = e;
var G__38004 = f;
var G__38005 = g;
var G__38006 = h;
var G__38007 = i;
var G__38008 = j;
var G__38009 = k;
var G__38010 = l;
var G__38011 = m;
var G__38012 = n;
var G__38013 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__37999,G__38000,G__38001,G__38002,G__38003,G__38004,G__38005,G__38006,G__38007,G__38008,G__38009,G__38010,G__38011,G__38012,G__38013) : self__.afn.call(null,G__37999,G__38000,G__38001,G__38002,G__38003,G__38004,G__38005,G__38006,G__38007,G__38008,G__38009,G__38010,G__38011,G__38012,G__38013));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__38014 = a;
var G__38015 = b;
var G__38016 = c;
var G__38017 = d;
var G__38018 = e;
var G__38019 = f;
var G__38020 = g;
var G__38021 = h;
var G__38022 = i;
var G__38023 = j;
var G__38024 = k;
var G__38025 = l;
var G__38026 = m;
var G__38027 = n;
var G__38028 = o;
var G__38029 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__38014,G__38015,G__38016,G__38017,G__38018,G__38019,G__38020,G__38021,G__38022,G__38023,G__38024,G__38025,G__38026,G__38027,G__38028,G__38029) : self__.afn.call(null,G__38014,G__38015,G__38016,G__38017,G__38018,G__38019,G__38020,G__38021,G__38022,G__38023,G__38024,G__38025,G__38026,G__38027,G__38028,G__38029));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__38030 = a;
var G__38031 = b;
var G__38032 = c;
var G__38033 = d;
var G__38034 = e;
var G__38035 = f;
var G__38036 = g;
var G__38037 = h;
var G__38038 = i;
var G__38039 = j;
var G__38040 = k;
var G__38041 = l;
var G__38042 = m;
var G__38043 = n;
var G__38044 = o;
var G__38045 = p;
var G__38046 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__38030,G__38031,G__38032,G__38033,G__38034,G__38035,G__38036,G__38037,G__38038,G__38039,G__38040,G__38041,G__38042,G__38043,G__38044,G__38045,G__38046) : self__.afn.call(null,G__38030,G__38031,G__38032,G__38033,G__38034,G__38035,G__38036,G__38037,G__38038,G__38039,G__38040,G__38041,G__38042,G__38043,G__38044,G__38045,G__38046));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__38047 = a;
var G__38048 = b;
var G__38049 = c;
var G__38050 = d;
var G__38051 = e;
var G__38052 = f;
var G__38053 = g;
var G__38054 = h;
var G__38055 = i;
var G__38056 = j;
var G__38057 = k;
var G__38058 = l;
var G__38059 = m;
var G__38060 = n;
var G__38061 = o;
var G__38062 = p;
var G__38063 = q;
var G__38064 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__38047,G__38048,G__38049,G__38050,G__38051,G__38052,G__38053,G__38054,G__38055,G__38056,G__38057,G__38058,G__38059,G__38060,G__38061,G__38062,G__38063,G__38064) : self__.afn.call(null,G__38047,G__38048,G__38049,G__38050,G__38051,G__38052,G__38053,G__38054,G__38055,G__38056,G__38057,G__38058,G__38059,G__38060,G__38061,G__38062,G__38063,G__38064));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__38065 = a;
var G__38066 = b;
var G__38067 = c;
var G__38068 = d;
var G__38069 = e;
var G__38070 = f;
var G__38071 = g;
var G__38072 = h;
var G__38073 = i;
var G__38074 = j;
var G__38075 = k;
var G__38076 = l;
var G__38077 = m;
var G__38078 = n;
var G__38079 = o;
var G__38080 = p;
var G__38081 = q;
var G__38082 = r;
var G__38083 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__38065,G__38066,G__38067,G__38068,G__38069,G__38070,G__38071,G__38072,G__38073,G__38074,G__38075,G__38076,G__38077,G__38078,G__38079,G__38080,G__38081,G__38082,G__38083) : self__.afn.call(null,G__38065,G__38066,G__38067,G__38068,G__38069,G__38070,G__38071,G__38072,G__38073,G__38074,G__38075,G__38076,G__38077,G__38078,G__38079,G__38080,G__38081,G__38082,G__38083));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__38084 = a;
var G__38085 = b;
var G__38086 = c;
var G__38087 = d;
var G__38088 = e;
var G__38089 = f;
var G__38090 = g;
var G__38091 = h;
var G__38092 = i;
var G__38093 = j;
var G__38094 = k;
var G__38095 = l;
var G__38096 = m;
var G__38097 = n;
var G__38098 = o;
var G__38099 = p;
var G__38100 = q;
var G__38101 = r;
var G__38102 = s;
var G__38103 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__38084,G__38085,G__38086,G__38087,G__38088,G__38089,G__38090,G__38091,G__38092,G__38093,G__38094,G__38095,G__38096,G__38097,G__38098,G__38099,G__38100,G__38101,G__38102,G__38103) : self__.afn.call(null,G__38084,G__38085,G__38086,G__38087,G__38088,G__38089,G__38090,G__38091,G__38092,G__38093,G__38094,G__38095,G__38096,G__38097,G__38098,G__38099,G__38100,G__38101,G__38102,G__38103));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__38104 = self__.afn;
var G__38105 = a;
var G__38106 = b;
var G__38107 = c;
var G__38108 = d;
var G__38109 = e;
var G__38110 = f;
var G__38111 = g;
var G__38112 = h;
var G__38113 = i;
var G__38114 = j;
var G__38115 = k;
var G__38116 = l;
var G__38117 = m;
var G__38118 = n;
var G__38119 = o;
var G__38120 = p;
var G__38121 = q;
var G__38122 = r;
var G__38123 = s;
var G__38124 = t;
var G__38125 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__38104,G__38105,G__38106,G__38107,G__38108,G__38109,G__38110,G__38111,G__38112,G__38113,G__38114,G__38115,G__38116,G__38117,G__38118,G__38119,G__38120,G__38121,G__38122,G__38123,G__38124,G__38125) : cljs.core.apply.call(null,G__38104,G__38105,G__38106,G__38107,G__38108,G__38109,G__38110,G__38111,G__38112,G__38113,G__38114,G__38115,G__38116,G__38117,G__38118,G__38119,G__38120,G__38121,G__38122,G__38123,G__38124,G__38125));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__18264__auto__,writer__18265__auto__,opt__18266__auto__){
return cljs.core._write(writer__18265__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__38130 = o;
if(G__38130){
var bit__18358__auto__ = (G__38130.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__18358__auto__) || (G__38130.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__38130.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__38130);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__38130);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__17665__auto__ = !((o == null));
if(and__17665__auto__){
var G__38134 = o;
if(G__38134){
var bit__18358__auto__ = (G__38134.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__18358__auto__) || (G__38134.cljs$core$IMeta$)){
return true;
} else {
if((!G__38134.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__38134);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__38134);
}
} else {
return and__17665__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__38137__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__38138 = ret;
var G__38139 = cljs.core.first(ks);
var G__38140 = cljs.core.next(ks);
coll = G__38138;
k = G__38139;
ks = G__38140;
continue;
} else {
return ret;
}
}
break;
}
};
var G__38137 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__38141__i = 0, G__38141__a = new Array(arguments.length -  2);
while (G__38141__i < G__38141__a.length) {G__38141__a[G__38141__i] = arguments[G__38141__i + 2]; ++G__38141__i;}
  ks = new cljs.core.IndexedSeq(G__38141__a,0);
} 
return G__38137__delegate.call(this,coll,k,ks);};
G__38137.cljs$lang$maxFixedArity = 2;
G__38137.cljs$lang$applyTo = (function (arglist__38142){
var coll = cljs.core.first(arglist__38142);
arglist__38142 = cljs.core.next(arglist__38142);
var k = cljs.core.first(arglist__38142);
var ks = cljs.core.rest(arglist__38142);
return G__38137__delegate(coll,k,ks);
});
G__38137.cljs$core$IFn$_invoke$arity$variadic = G__38137__delegate;
return G__38137;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__38143 = null;
if (arguments.length > 2) {
var G__38144__i = 0, G__38144__a = new Array(arguments.length -  2);
while (G__38144__i < G__38144__a.length) {G__38144__a[G__38144__i] = arguments[G__38144__i + 2]; ++G__38144__i;}
G__38143 = new cljs.core.IndexedSeq(G__38144__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__38143);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__38146 = x;
if(G__38146){
var bit__18358__auto__ = (G__38146.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__18358__auto__) || (G__38146.cljs$core$ICollection$)){
return true;
} else {
if((!G__38146.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__38146);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__38146);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__38148 = x;
if(G__38148){
var bit__18358__auto__ = (G__38148.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__18358__auto__) || (G__38148.cljs$core$ISet$)){
return true;
} else {
if((!G__38148.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__38148);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__38148);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__38150 = x;
if(G__38150){
var bit__18358__auto__ = (G__38150.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__18358__auto__) || (G__38150.cljs$core$IAssociative$)){
return true;
} else {
if((!G__38150.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__38150);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__38150);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__38152 = x;
if(G__38152){
var bit__18358__auto__ = (G__38152.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__18358__auto__) || (G__38152.cljs$core$ISequential$)){
return true;
} else {
if((!G__38152.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__38152);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__38152);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__38154 = x;
if(G__38154){
var bit__18358__auto__ = (G__38154.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__18358__auto__) || (G__38154.cljs$core$ISorted$)){
return true;
} else {
if((!G__38154.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__38154);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__38154);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__38156 = x;
if(G__38156){
var bit__18358__auto__ = (G__38156.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__18358__auto__) || (G__38156.cljs$core$IReduce$)){
return true;
} else {
if((!G__38156.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__38156);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__38156);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__38158 = x;
if(G__38158){
var bit__18358__auto__ = (G__38158.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__18358__auto__) || (G__38158.cljs$core$IMap$)){
return true;
} else {
if((!G__38158.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__38158);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__38158);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__38160 = x;
if(G__38160){
var bit__18358__auto__ = (G__38160.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__18358__auto__) || (G__38160.cljs$core$IVector$)){
return true;
} else {
if((!G__38160.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__38160);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__38160);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__38162 = x;
if(G__38162){
var bit__18351__auto__ = (G__38162.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__18351__auto__) || (G__38162.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj38168 = {};
return obj38168;
});
var js_obj__1 = (function() { 
var G__38171__delegate = function (keyvals){
var G__38169 = goog.object.create;
var G__38170 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__38169,G__38170) : cljs.core.apply.call(null,G__38169,G__38170));
};
var G__38171 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__38172__i = 0, G__38172__a = new Array(arguments.length -  0);
while (G__38172__i < G__38172__a.length) {G__38172__a[G__38172__i] = arguments[G__38172__i + 0]; ++G__38172__i;}
  keyvals = new cljs.core.IndexedSeq(G__38172__a,0);
} 
return G__38171__delegate.call(this,keyvals);};
G__38171.cljs$lang$maxFixedArity = 0;
G__38171.cljs$lang$applyTo = (function (arglist__38173){
var keyvals = cljs.core.seq(arglist__38173);
return G__38171__delegate(keyvals);
});
G__38171.cljs$core$IFn$_invoke$arity$variadic = G__38171__delegate;
return G__38171;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__38174 = null;
if (arguments.length > 0) {
var G__38175__i = 0, G__38175__a = new Array(arguments.length -  0);
while (G__38175__i < G__38175__a.length) {G__38175__a[G__38175__i] = arguments[G__38175__i + 0]; ++G__38175__i;}
G__38174 = new cljs.core.IndexedSeq(G__38175__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__38174);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__38178_38180 = obj;
var G__38179_38181 = ((function (G__38178_38180,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__38178_38180,keys))
;
goog.object.forEach(G__38178_38180,G__38179_38181);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__38182 = (i__$1 + (1));
var G__38183 = (j__$1 + (1));
var G__38184 = (len__$1 - (1));
i__$1 = G__38182;
j__$1 = G__38183;
len__$1 = G__38184;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__38185 = (i__$1 - (1));
var G__38186 = (j__$1 - (1));
var G__38187 = (len__$1 - (1));
i__$1 = G__38185;
j__$1 = G__38186;
len__$1 = G__38187;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj38189 = {};
return obj38189;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__38191 = s;
if(G__38191){
var bit__18358__auto__ = (G__38191.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__18358__auto__) || (G__38191.cljs$core$ISeq$)){
return true;
} else {
if((!G__38191.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__38191);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__38191);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__38193 = s;
if(G__38193){
var bit__18358__auto__ = (G__38193.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__18358__auto__) || (G__38193.cljs$core$ISeqable$)){
return true;
} else {
if((!G__38193.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__38193);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__38193);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__17677__auto__ = cljs.core.fn_QMARK_(f);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var G__38197 = f;
if(G__38197){
var bit__18358__auto__ = (G__38197.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__18358__auto__) || (G__38197.cljs$core$IFn$)){
return true;
} else {
if((!G__38197.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__38197);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__38197);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__38210 = n;
return isNaN(G__38210);
})())) && (!((n === Infinity))) && (((function (){var G__38211 = n;
return parseFloat(G__38211);
})() === (function (){var G__38212 = n;
var G__38213 = (10);
return parseInt(G__38212,G__38213);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__38214__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__38215 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__38216 = etc;
s = G__38215;
xs = G__38216;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__38214 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__38217__i = 0, G__38217__a = new Array(arguments.length -  2);
while (G__38217__i < G__38217__a.length) {G__38217__a[G__38217__i] = arguments[G__38217__i + 2]; ++G__38217__i;}
  more = new cljs.core.IndexedSeq(G__38217__a,0);
} 
return G__38214__delegate.call(this,x,y,more);};
G__38214.cljs$lang$maxFixedArity = 2;
G__38214.cljs$lang$applyTo = (function (arglist__38218){
var x = cljs.core.first(arglist__38218);
arglist__38218 = cljs.core.next(arglist__38218);
var y = cljs.core.first(arglist__38218);
var more = cljs.core.rest(arglist__38218);
return G__38214__delegate(x,y,more);
});
G__38214.cljs$core$IFn$_invoke$arity$variadic = G__38214__delegate;
return G__38214;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__38219 = null;
if (arguments.length > 2) {
var G__38220__i = 0, G__38220__a = new Array(arguments.length -  2);
while (G__38220__i < G__38220__a.length) {G__38220__a[G__38220__i] = arguments[G__38220__i + 2]; ++G__38220__i;}
G__38219 = new cljs.core.IndexedSeq(G__38220__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__38219);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__38224 = x;
if(G__38224){
var bit__18351__auto__ = (G__38224.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__18351__auto__) || (G__38224.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__38225 = x;
var G__38226 = y;
return goog.array.defaultCompare(G__38225,G__38226);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__38231 = xs;
var G__38232 = ys;
var G__38233 = len;
var G__38234 = (n + (1));
xs = G__38231;
ys = G__38232;
len = G__38233;
n = G__38234;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__38239 = x;
var G__38240 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__38239,G__38240) : f.call(null,G__38239,G__38240));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__38241 = y;
var G__38242 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__38241,G__38242) : f.call(null,G__38241,G__38242));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__38248 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__38248) : cljs.core.to_array.call(null,G__38248));
})();
var G__38249_38251 = a;
var G__38250_38252 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__38249_38251,G__38250_38252);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__38258 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__38258) : keyfn.call(null,G__38258));
})(),(function (){var G__38259 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__38259) : keyfn.call(null,G__38259));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__38265 = f;
var G__38266 = cljs.core.first(s);
var G__38267 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__38265,G__38266,G__38267) : cljs.core.reduce.call(null,G__38265,G__38266,G__38267));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__38268 = val__$1;
var G__38269 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__38268,G__38269) : f.call(null,G__38268,G__38269));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__38270 = nval;
var G__38271 = cljs.core.next(coll__$1);
val__$1 = G__38270;
coll__$1 = G__38271;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__38275 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__38275) : cljs.core.to_array.call(null,G__38275));
})();
var G__38276_38278 = a;
goog.array.shuffle(G__38276_38278);

var G__38277 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__38277) : cljs.core.vec.call(null,G__38277));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__38281 = coll;
if(G__38281){
var bit__18351__auto__ = (G__38281.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__18351__auto__) || (G__38281.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__38282 = coll;
if(G__38282){
var bit__18351__auto__ = (G__38282.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__18351__auto__) || (G__38282.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__38291 = null;
var G__38291__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__38291__1 = (function (x){
var G__38288 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__38288) : cf.call(null,G__38288));
});
var G__38291__2 = (function (x,y){
var G__38289 = x;
var G__38290 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__38289,G__38290) : f.call(null,G__38289,G__38290));
});
G__38291 = function(x,y){
switch(arguments.length){
case 0:
return G__38291__0.call(this);
case 1:
return G__38291__1.call(this,x);
case 2:
return G__38291__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__38291.cljs$core$IFn$_invoke$arity$0 = G__38291__0;
G__38291.cljs$core$IFn$_invoke$arity$1 = G__38291__1;
G__38291.cljs$core$IFn$_invoke$arity$2 = G__38291__2;
return G__38291;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__38298 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__38298) : xform.call(null,G__38298));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__38299 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__38299) : f__$1.call(null,G__38299));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__38300__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__38300 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__38301__i = 0, G__38301__a = new Array(arguments.length -  2);
while (G__38301__i < G__38301__a.length) {G__38301__a[G__38301__i] = arguments[G__38301__i + 2]; ++G__38301__i;}
  more = new cljs.core.IndexedSeq(G__38301__a,0);
} 
return G__38300__delegate.call(this,x,y,more);};
G__38300.cljs$lang$maxFixedArity = 2;
G__38300.cljs$lang$applyTo = (function (arglist__38302){
var x = cljs.core.first(arglist__38302);
arglist__38302 = cljs.core.next(arglist__38302);
var y = cljs.core.first(arglist__38302);
var more = cljs.core.rest(arglist__38302);
return G__38300__delegate(x,y,more);
});
G__38300.cljs$core$IFn$_invoke$arity$variadic = G__38300__delegate;
return G__38300;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__38303 = null;
if (arguments.length > 2) {
var G__38304__i = 0, G__38304__a = new Array(arguments.length -  2);
while (G__38304__i < G__38304__a.length) {G__38304__a[G__38304__i] = arguments[G__38304__i + 2]; ++G__38304__i;}
G__38303 = new cljs.core.IndexedSeq(G__38304__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__38303);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__38305__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__38305 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__38306__i = 0, G__38306__a = new Array(arguments.length -  2);
while (G__38306__i < G__38306__a.length) {G__38306__a[G__38306__i] = arguments[G__38306__i + 2]; ++G__38306__i;}
  more = new cljs.core.IndexedSeq(G__38306__a,0);
} 
return G__38305__delegate.call(this,x,y,more);};
G__38305.cljs$lang$maxFixedArity = 2;
G__38305.cljs$lang$applyTo = (function (arglist__38307){
var x = cljs.core.first(arglist__38307);
arglist__38307 = cljs.core.next(arglist__38307);
var y = cljs.core.first(arglist__38307);
var more = cljs.core.rest(arglist__38307);
return G__38305__delegate(x,y,more);
});
G__38305.cljs$core$IFn$_invoke$arity$variadic = G__38305__delegate;
return G__38305;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__38308 = null;
if (arguments.length > 2) {
var G__38309__i = 0, G__38309__a = new Array(arguments.length -  2);
while (G__38309__i < G__38309__a.length) {G__38309__a[G__38309__i] = arguments[G__38309__i + 2]; ++G__38309__i;}
G__38308 = new cljs.core.IndexedSeq(G__38309__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__38308);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__38310__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__38310 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__38311__i = 0, G__38311__a = new Array(arguments.length -  2);
while (G__38311__i < G__38311__a.length) {G__38311__a[G__38311__i] = arguments[G__38311__i + 2]; ++G__38311__i;}
  more = new cljs.core.IndexedSeq(G__38311__a,0);
} 
return G__38310__delegate.call(this,x,y,more);};
G__38310.cljs$lang$maxFixedArity = 2;
G__38310.cljs$lang$applyTo = (function (arglist__38312){
var x = cljs.core.first(arglist__38312);
arglist__38312 = cljs.core.next(arglist__38312);
var y = cljs.core.first(arglist__38312);
var more = cljs.core.rest(arglist__38312);
return G__38310__delegate(x,y,more);
});
G__38310.cljs$core$IFn$_invoke$arity$variadic = G__38310__delegate;
return G__38310;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__38313 = null;
if (arguments.length > 2) {
var G__38314__i = 0, G__38314__a = new Array(arguments.length -  2);
while (G__38314__i < G__38314__a.length) {G__38314__a[G__38314__i] = arguments[G__38314__i + 2]; ++G__38314__i;}
G__38313 = new cljs.core.IndexedSeq(G__38314__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__38313);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__38319__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__38319 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__38320__i = 0, G__38320__a = new Array(arguments.length -  2);
while (G__38320__i < G__38320__a.length) {G__38320__a[G__38320__i] = arguments[G__38320__i + 2]; ++G__38320__i;}
  more = new cljs.core.IndexedSeq(G__38320__a,0);
} 
return G__38319__delegate.call(this,x,y,more);};
G__38319.cljs$lang$maxFixedArity = 2;
G__38319.cljs$lang$applyTo = (function (arglist__38321){
var x = cljs.core.first(arglist__38321);
arglist__38321 = cljs.core.next(arglist__38321);
var y = cljs.core.first(arglist__38321);
var more = cljs.core.rest(arglist__38321);
return G__38319__delegate(x,y,more);
});
G__38319.cljs$core$IFn$_invoke$arity$variadic = G__38319__delegate;
return G__38319;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__38322 = null;
if (arguments.length > 2) {
var G__38323__i = 0, G__38323__a = new Array(arguments.length -  2);
while (G__38323__i < G__38323__a.length) {G__38323__a[G__38323__i] = arguments[G__38323__i + 2]; ++G__38323__i;}
G__38322 = new cljs.core.IndexedSeq(G__38323__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__38322);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__38324__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__38325 = y;
var G__38326 = cljs.core.first(more);
var G__38327 = cljs.core.next(more);
x = G__38325;
y = G__38326;
more = G__38327;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__38324 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__38328__i = 0, G__38328__a = new Array(arguments.length -  2);
while (G__38328__i < G__38328__a.length) {G__38328__a[G__38328__i] = arguments[G__38328__i + 2]; ++G__38328__i;}
  more = new cljs.core.IndexedSeq(G__38328__a,0);
} 
return G__38324__delegate.call(this,x,y,more);};
G__38324.cljs$lang$maxFixedArity = 2;
G__38324.cljs$lang$applyTo = (function (arglist__38329){
var x = cljs.core.first(arglist__38329);
arglist__38329 = cljs.core.next(arglist__38329);
var y = cljs.core.first(arglist__38329);
var more = cljs.core.rest(arglist__38329);
return G__38324__delegate(x,y,more);
});
G__38324.cljs$core$IFn$_invoke$arity$variadic = G__38324__delegate;
return G__38324;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__38330 = null;
if (arguments.length > 2) {
var G__38331__i = 0, G__38331__a = new Array(arguments.length -  2);
while (G__38331__i < G__38331__a.length) {G__38331__a[G__38331__i] = arguments[G__38331__i + 2]; ++G__38331__i;}
G__38330 = new cljs.core.IndexedSeq(G__38331__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__38330);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__38332__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__38333 = y;
var G__38334 = cljs.core.first(more);
var G__38335 = cljs.core.next(more);
x = G__38333;
y = G__38334;
more = G__38335;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__38332 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__38336__i = 0, G__38336__a = new Array(arguments.length -  2);
while (G__38336__i < G__38336__a.length) {G__38336__a[G__38336__i] = arguments[G__38336__i + 2]; ++G__38336__i;}
  more = new cljs.core.IndexedSeq(G__38336__a,0);
} 
return G__38332__delegate.call(this,x,y,more);};
G__38332.cljs$lang$maxFixedArity = 2;
G__38332.cljs$lang$applyTo = (function (arglist__38337){
var x = cljs.core.first(arglist__38337);
arglist__38337 = cljs.core.next(arglist__38337);
var y = cljs.core.first(arglist__38337);
var more = cljs.core.rest(arglist__38337);
return G__38332__delegate(x,y,more);
});
G__38332.cljs$core$IFn$_invoke$arity$variadic = G__38332__delegate;
return G__38332;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__38338 = null;
if (arguments.length > 2) {
var G__38339__i = 0, G__38339__a = new Array(arguments.length -  2);
while (G__38339__i < G__38339__a.length) {G__38339__a[G__38339__i] = arguments[G__38339__i + 2]; ++G__38339__i;}
G__38338 = new cljs.core.IndexedSeq(G__38339__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__38338);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__38340__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__38341 = y;
var G__38342 = cljs.core.first(more);
var G__38343 = cljs.core.next(more);
x = G__38341;
y = G__38342;
more = G__38343;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__38340 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__38344__i = 0, G__38344__a = new Array(arguments.length -  2);
while (G__38344__i < G__38344__a.length) {G__38344__a[G__38344__i] = arguments[G__38344__i + 2]; ++G__38344__i;}
  more = new cljs.core.IndexedSeq(G__38344__a,0);
} 
return G__38340__delegate.call(this,x,y,more);};
G__38340.cljs$lang$maxFixedArity = 2;
G__38340.cljs$lang$applyTo = (function (arglist__38345){
var x = cljs.core.first(arglist__38345);
arglist__38345 = cljs.core.next(arglist__38345);
var y = cljs.core.first(arglist__38345);
var more = cljs.core.rest(arglist__38345);
return G__38340__delegate(x,y,more);
});
G__38340.cljs$core$IFn$_invoke$arity$variadic = G__38340__delegate;
return G__38340;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__38346 = null;
if (arguments.length > 2) {
var G__38347__i = 0, G__38347__a = new Array(arguments.length -  2);
while (G__38347__i < G__38347__a.length) {G__38347__a[G__38347__i] = arguments[G__38347__i + 2]; ++G__38347__i;}
G__38346 = new cljs.core.IndexedSeq(G__38347__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__38346);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__38348__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__38349 = y;
var G__38350 = cljs.core.first(more);
var G__38351 = cljs.core.next(more);
x = G__38349;
y = G__38350;
more = G__38351;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__38348 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__38352__i = 0, G__38352__a = new Array(arguments.length -  2);
while (G__38352__i < G__38352__a.length) {G__38352__a[G__38352__i] = arguments[G__38352__i + 2]; ++G__38352__i;}
  more = new cljs.core.IndexedSeq(G__38352__a,0);
} 
return G__38348__delegate.call(this,x,y,more);};
G__38348.cljs$lang$maxFixedArity = 2;
G__38348.cljs$lang$applyTo = (function (arglist__38353){
var x = cljs.core.first(arglist__38353);
arglist__38353 = cljs.core.next(arglist__38353);
var y = cljs.core.first(arglist__38353);
var more = cljs.core.rest(arglist__38353);
return G__38348__delegate(x,y,more);
});
G__38348.cljs$core$IFn$_invoke$arity$variadic = G__38348__delegate;
return G__38348;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__38354 = null;
if (arguments.length > 2) {
var G__38355__i = 0, G__38355__a = new Array(arguments.length -  2);
while (G__38355__i < G__38355__a.length) {G__38355__a[G__38355__i] = arguments[G__38355__i + 2]; ++G__38355__i;}
G__38354 = new cljs.core.IndexedSeq(G__38355__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__38354);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__17994__auto__ = x;
var y__17995__auto__ = y;
return ((x__17994__auto__ > y__17995__auto__) ? x__17994__auto__ : y__17995__auto__);
});
var max__3 = (function() { 
var G__38356__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__17994__auto__ = x;
var y__17995__auto__ = y;
return ((x__17994__auto__ > y__17995__auto__) ? x__17994__auto__ : y__17995__auto__);
})(),more);
};
var G__38356 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__38357__i = 0, G__38357__a = new Array(arguments.length -  2);
while (G__38357__i < G__38357__a.length) {G__38357__a[G__38357__i] = arguments[G__38357__i + 2]; ++G__38357__i;}
  more = new cljs.core.IndexedSeq(G__38357__a,0);
} 
return G__38356__delegate.call(this,x,y,more);};
G__38356.cljs$lang$maxFixedArity = 2;
G__38356.cljs$lang$applyTo = (function (arglist__38358){
var x = cljs.core.first(arglist__38358);
arglist__38358 = cljs.core.next(arglist__38358);
var y = cljs.core.first(arglist__38358);
var more = cljs.core.rest(arglist__38358);
return G__38356__delegate(x,y,more);
});
G__38356.cljs$core$IFn$_invoke$arity$variadic = G__38356__delegate;
return G__38356;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__38359 = null;
if (arguments.length > 2) {
var G__38360__i = 0, G__38360__a = new Array(arguments.length -  2);
while (G__38360__i < G__38360__a.length) {G__38360__a[G__38360__i] = arguments[G__38360__i + 2]; ++G__38360__i;}
G__38359 = new cljs.core.IndexedSeq(G__38360__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__38359);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__18001__auto__ = x;
var y__18002__auto__ = y;
return ((x__18001__auto__ < y__18002__auto__) ? x__18001__auto__ : y__18002__auto__);
});
var min__3 = (function() { 
var G__38361__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__18001__auto__ = x;
var y__18002__auto__ = y;
return ((x__18001__auto__ < y__18002__auto__) ? x__18001__auto__ : y__18002__auto__);
})(),more);
};
var G__38361 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__38362__i = 0, G__38362__a = new Array(arguments.length -  2);
while (G__38362__i < G__38362__a.length) {G__38362__a[G__38362__i] = arguments[G__38362__i + 2]; ++G__38362__i;}
  more = new cljs.core.IndexedSeq(G__38362__a,0);
} 
return G__38361__delegate.call(this,x,y,more);};
G__38361.cljs$lang$maxFixedArity = 2;
G__38361.cljs$lang$applyTo = (function (arglist__38363){
var x = cljs.core.first(arglist__38363);
arglist__38363 = cljs.core.next(arglist__38363);
var y = cljs.core.first(arglist__38363);
var more = cljs.core.rest(arglist__38363);
return G__38361__delegate(x,y,more);
});
G__38361.cljs$core$IFn$_invoke$arity$variadic = G__38361__delegate;
return G__38361;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__38364 = null;
if (arguments.length > 2) {
var G__38365__i = 0, G__38365__a = new Array(arguments.length -  2);
while (G__38365__i < G__38365__a.length) {G__38365__a[G__38365__i] = arguments[G__38365__i + 2]; ++G__38365__i;}
G__38364 = new cljs.core.IndexedSeq(G__38365__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__38364);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__38366__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__38366 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__38367__i = 0, G__38367__a = new Array(arguments.length -  2);
while (G__38367__i < G__38367__a.length) {G__38367__a[G__38367__i] = arguments[G__38367__i + 2]; ++G__38367__i;}
  more = new cljs.core.IndexedSeq(G__38367__a,0);
} 
return G__38366__delegate.call(this,x,y,more);};
G__38366.cljs$lang$maxFixedArity = 2;
G__38366.cljs$lang$applyTo = (function (arglist__38368){
var x = cljs.core.first(arglist__38368);
arglist__38368 = cljs.core.next(arglist__38368);
var y = cljs.core.first(arglist__38368);
var more = cljs.core.rest(arglist__38368);
return G__38366__delegate(x,y,more);
});
G__38366.cljs$core$IFn$_invoke$arity$variadic = G__38366__delegate;
return G__38366;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__38369 = null;
if (arguments.length > 2) {
var G__38370__i = 0, G__38370__a = new Array(arguments.length -  2);
while (G__38370__i < G__38370__a.length) {G__38370__a[G__38370__i] = arguments[G__38370__i + 2]; ++G__38370__i;}
G__38369 = new cljs.core.IndexedSeq(G__38370__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__38369);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__38371__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__38371 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__38372__i = 0, G__38372__a = new Array(arguments.length -  2);
while (G__38372__i < G__38372__a.length) {G__38372__a[G__38372__i] = arguments[G__38372__i + 2]; ++G__38372__i;}
  more = new cljs.core.IndexedSeq(G__38372__a,0);
} 
return G__38371__delegate.call(this,x,y,more);};
G__38371.cljs$lang$maxFixedArity = 2;
G__38371.cljs$lang$applyTo = (function (arglist__38373){
var x = cljs.core.first(arglist__38373);
arglist__38373 = cljs.core.next(arglist__38373);
var y = cljs.core.first(arglist__38373);
var more = cljs.core.rest(arglist__38373);
return G__38371__delegate(x,y,more);
});
G__38371.cljs$core$IFn$_invoke$arity$variadic = G__38371__delegate;
return G__38371;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__38374 = null;
if (arguments.length > 2) {
var G__38375__i = 0, G__38375__a = new Array(arguments.length -  2);
while (G__38375__i < G__38375__a.length) {G__38375__a[G__38375__i] = arguments[G__38375__i + 2]; ++G__38375__i;}
G__38374 = new cljs.core.IndexedSeq(G__38375__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__38374);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__38380__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__38380 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__38381__i = 0, G__38381__a = new Array(arguments.length -  2);
while (G__38381__i < G__38381__a.length) {G__38381__a[G__38381__i] = arguments[G__38381__i + 2]; ++G__38381__i;}
  more = new cljs.core.IndexedSeq(G__38381__a,0);
} 
return G__38380__delegate.call(this,x,y,more);};
G__38380.cljs$lang$maxFixedArity = 2;
G__38380.cljs$lang$applyTo = (function (arglist__38382){
var x = cljs.core.first(arglist__38382);
arglist__38382 = cljs.core.next(arglist__38382);
var y = cljs.core.first(arglist__38382);
var more = cljs.core.rest(arglist__38382);
return G__38380__delegate(x,y,more);
});
G__38380.cljs$core$IFn$_invoke$arity$variadic = G__38380__delegate;
return G__38380;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__38383 = null;
if (arguments.length > 2) {
var G__38384__i = 0, G__38384__a = new Array(arguments.length -  2);
while (G__38384__i < G__38384__a.length) {G__38384__a[G__38384__i] = arguments[G__38384__i + 2]; ++G__38384__i;}
G__38383 = new cljs.core.IndexedSeq(G__38384__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__38383);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__38385__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__38385 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__38386__i = 0, G__38386__a = new Array(arguments.length -  2);
while (G__38386__i < G__38386__a.length) {G__38386__a[G__38386__i] = arguments[G__38386__i + 2]; ++G__38386__i;}
  more = new cljs.core.IndexedSeq(G__38386__a,0);
} 
return G__38385__delegate.call(this,x,y,more);};
G__38385.cljs$lang$maxFixedArity = 2;
G__38385.cljs$lang$applyTo = (function (arglist__38387){
var x = cljs.core.first(arglist__38387);
arglist__38387 = cljs.core.next(arglist__38387);
var y = cljs.core.first(arglist__38387);
var more = cljs.core.rest(arglist__38387);
return G__38385__delegate(x,y,more);
});
G__38385.cljs$core$IFn$_invoke$arity$variadic = G__38385__delegate;
return G__38385;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__38388 = null;
if (arguments.length > 2) {
var G__38389__i = 0, G__38389__a = new Array(arguments.length -  2);
while (G__38389__i < G__38389__a.length) {G__38389__a[G__38389__i] = arguments[G__38389__i + 2]; ++G__38389__i;}
G__38388 = new cljs.core.IndexedSeq(G__38389__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__38388);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__38390__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__38390 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__38391__i = 0, G__38391__a = new Array(arguments.length -  2);
while (G__38391__i < G__38391__a.length) {G__38391__a[G__38391__i] = arguments[G__38391__i + 2]; ++G__38391__i;}
  more = new cljs.core.IndexedSeq(G__38391__a,0);
} 
return G__38390__delegate.call(this,x,y,more);};
G__38390.cljs$lang$maxFixedArity = 2;
G__38390.cljs$lang$applyTo = (function (arglist__38392){
var x = cljs.core.first(arglist__38392);
arglist__38392 = cljs.core.next(arglist__38392);
var y = cljs.core.first(arglist__38392);
var more = cljs.core.rest(arglist__38392);
return G__38390__delegate(x,y,more);
});
G__38390.cljs$core$IFn$_invoke$arity$variadic = G__38390__delegate;
return G__38390;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__38393 = null;
if (arguments.length > 2) {
var G__38394__i = 0, G__38394__a = new Array(arguments.length -  2);
while (G__38394__i < G__38394__a.length) {G__38394__a[G__38394__i] = arguments[G__38394__i + 2]; ++G__38394__i;}
G__38393 = new cljs.core.IndexedSeq(G__38394__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__38393);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__38397 = x;
var G__38398 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__38397,G__38398) : cljs.core.mod.call(null,G__38397,G__38398));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__38399__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__38399 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__38400__i = 0, G__38400__a = new Array(arguments.length -  2);
while (G__38400__i < G__38400__a.length) {G__38400__a[G__38400__i] = arguments[G__38400__i + 2]; ++G__38400__i;}
  more = new cljs.core.IndexedSeq(G__38400__a,0);
} 
return G__38399__delegate.call(this,x,y,more);};
G__38399.cljs$lang$maxFixedArity = 2;
G__38399.cljs$lang$applyTo = (function (arglist__38401){
var x = cljs.core.first(arglist__38401);
arglist__38401 = cljs.core.next(arglist__38401);
var y = cljs.core.first(arglist__38401);
var more = cljs.core.rest(arglist__38401);
return G__38399__delegate(x,y,more);
});
G__38399.cljs$core$IFn$_invoke$arity$variadic = G__38399__delegate;
return G__38399;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__38402 = null;
if (arguments.length > 2) {
var G__38403__i = 0, G__38403__a = new Array(arguments.length -  2);
while (G__38403__i < G__38403__a.length) {G__38403__a[G__38403__i] = arguments[G__38403__i + 2]; ++G__38403__i;}
G__38402 = new cljs.core.IndexedSeq(G__38403__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__38402);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__38404__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__38404 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__38405__i = 0, G__38405__a = new Array(arguments.length -  2);
while (G__38405__i < G__38405__a.length) {G__38405__a[G__38405__i] = arguments[G__38405__i + 2]; ++G__38405__i;}
  more = new cljs.core.IndexedSeq(G__38405__a,0);
} 
return G__38404__delegate.call(this,x,y,more);};
G__38404.cljs$lang$maxFixedArity = 2;
G__38404.cljs$lang$applyTo = (function (arglist__38406){
var x = cljs.core.first(arglist__38406);
arglist__38406 = cljs.core.next(arglist__38406);
var y = cljs.core.first(arglist__38406);
var more = cljs.core.rest(arglist__38406);
return G__38404__delegate(x,y,more);
});
G__38404.cljs$core$IFn$_invoke$arity$variadic = G__38404__delegate;
return G__38404;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__38407 = null;
if (arguments.length > 2) {
var G__38408__i = 0, G__38408__a = new Array(arguments.length -  2);
while (G__38408__i < G__38408__a.length) {G__38408__a[G__38408__i] = arguments[G__38408__i + 2]; ++G__38408__i;}
G__38407 = new cljs.core.IndexedSeq(G__38408__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__38407);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__38411 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__38411) : Math.floor.call(null,G__38411));
} else {
var G__38412 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__38412) : Math.ceil.call(null,G__38412));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__38413__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__38413 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__38414__i = 0, G__38414__a = new Array(arguments.length -  2);
while (G__38414__i < G__38414__a.length) {G__38414__a[G__38414__i] = arguments[G__38414__i + 2]; ++G__38414__i;}
  more = new cljs.core.IndexedSeq(G__38414__a,0);
} 
return G__38413__delegate.call(this,x,y,more);};
G__38413.cljs$lang$maxFixedArity = 2;
G__38413.cljs$lang$applyTo = (function (arglist__38415){
var x = cljs.core.first(arglist__38415);
arglist__38415 = cljs.core.next(arglist__38415);
var y = cljs.core.first(arglist__38415);
var more = cljs.core.rest(arglist__38415);
return G__38413__delegate(x,y,more);
});
G__38413.cljs$core$IFn$_invoke$arity$variadic = G__38413__delegate;
return G__38413;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__38416 = null;
if (arguments.length > 2) {
var G__38417__i = 0, G__38417__a = new Array(arguments.length -  2);
while (G__38417__i < G__38417__a.length) {G__38417__a[G__38417__i] = arguments[G__38417__i + 2]; ++G__38417__i;}
G__38416 = new cljs.core.IndexedSeq(G__38417__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__38416);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__38418__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__38418 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__38419__i = 0, G__38419__a = new Array(arguments.length -  2);
while (G__38419__i < G__38419__a.length) {G__38419__a[G__38419__i] = arguments[G__38419__i + 2]; ++G__38419__i;}
  more = new cljs.core.IndexedSeq(G__38419__a,0);
} 
return G__38418__delegate.call(this,x,y,more);};
G__38418.cljs$lang$maxFixedArity = 2;
G__38418.cljs$lang$applyTo = (function (arglist__38420){
var x = cljs.core.first(arglist__38420);
arglist__38420 = cljs.core.next(arglist__38420);
var y = cljs.core.first(arglist__38420);
var more = cljs.core.rest(arglist__38420);
return G__38418__delegate(x,y,more);
});
G__38418.cljs$core$IFn$_invoke$arity$variadic = G__38418__delegate;
return G__38418;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__38421 = null;
if (arguments.length > 2) {
var G__38422__i = 0, G__38422__a = new Array(arguments.length -  2);
while (G__38422__i < G__38422__a.length) {G__38422__a[G__38422__i] = arguments[G__38422__i + 2]; ++G__38422__i;}
G__38421 = new cljs.core.IndexedSeq(G__38422__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__38421);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__38423__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__38423 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__38424__i = 0, G__38424__a = new Array(arguments.length -  2);
while (G__38424__i < G__38424__a.length) {G__38424__a[G__38424__i] = arguments[G__38424__i + 2]; ++G__38424__i;}
  more = new cljs.core.IndexedSeq(G__38424__a,0);
} 
return G__38423__delegate.call(this,x,y,more);};
G__38423.cljs$lang$maxFixedArity = 2;
G__38423.cljs$lang$applyTo = (function (arglist__38425){
var x = cljs.core.first(arglist__38425);
arglist__38425 = cljs.core.next(arglist__38425);
var y = cljs.core.first(arglist__38425);
var more = cljs.core.rest(arglist__38425);
return G__38423__delegate(x,y,more);
});
G__38423.cljs$core$IFn$_invoke$arity$variadic = G__38423__delegate;
return G__38423;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__38426 = null;
if (arguments.length > 2) {
var G__38427__i = 0, G__38427__a = new Array(arguments.length -  2);
while (G__38427__i < G__38427__a.length) {G__38427__a[G__38427__i] = arguments[G__38427__i + 2]; ++G__38427__i;}
G__38426 = new cljs.core.IndexedSeq(G__38427__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__38426);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__38428__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__38428 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__38429__i = 0, G__38429__a = new Array(arguments.length -  2);
while (G__38429__i < G__38429__a.length) {G__38429__a[G__38429__i] = arguments[G__38429__i + 2]; ++G__38429__i;}
  more = new cljs.core.IndexedSeq(G__38429__a,0);
} 
return G__38428__delegate.call(this,x,y,more);};
G__38428.cljs$lang$maxFixedArity = 2;
G__38428.cljs$lang$applyTo = (function (arglist__38430){
var x = cljs.core.first(arglist__38430);
arglist__38430 = cljs.core.next(arglist__38430);
var y = cljs.core.first(arglist__38430);
var more = cljs.core.rest(arglist__38430);
return G__38428__delegate(x,y,more);
});
G__38428.cljs$core$IFn$_invoke$arity$variadic = G__38428__delegate;
return G__38428;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__38431 = null;
if (arguments.length > 2) {
var G__38432__i = 0, G__38432__a = new Array(arguments.length -  2);
while (G__38432__i < G__38432__a.length) {G__38432__a[G__38432__i] = arguments[G__38432__i + 2]; ++G__38432__i;}
G__38431 = new cljs.core.IndexedSeq(G__38432__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__38431);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__38437__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__38438 = y;
var G__38439 = cljs.core.first(more);
var G__38440 = cljs.core.next(more);
x = G__38438;
y = G__38439;
more = G__38440;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__38437 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__38441__i = 0, G__38441__a = new Array(arguments.length -  2);
while (G__38441__i < G__38441__a.length) {G__38441__a[G__38441__i] = arguments[G__38441__i + 2]; ++G__38441__i;}
  more = new cljs.core.IndexedSeq(G__38441__a,0);
} 
return G__38437__delegate.call(this,x,y,more);};
G__38437.cljs$lang$maxFixedArity = 2;
G__38437.cljs$lang$applyTo = (function (arglist__38442){
var x = cljs.core.first(arglist__38442);
arglist__38442 = cljs.core.next(arglist__38442);
var y = cljs.core.first(arglist__38442);
var more = cljs.core.rest(arglist__38442);
return G__38437__delegate(x,y,more);
});
G__38437.cljs$core$IFn$_invoke$arity$variadic = G__38437__delegate;
return G__38437;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__38443 = null;
if (arguments.length > 2) {
var G__38444__i = 0, G__38444__a = new Array(arguments.length -  2);
while (G__38444__i < G__38444__a.length) {G__38444__a[G__38444__i] = arguments[G__38444__i + 2]; ++G__38444__i;}
G__38443 = new cljs.core.IndexedSeq(G__38444__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__38443);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__38445 = (n__$1 - (1));
var G__38446 = cljs.core.next(xs);
n__$1 = G__38445;
xs = G__38446;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__38450 = x;
return goog.string.buildString(G__38450);
}
});
var str__2 = (function() { 
var G__38451__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__38452 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__38453 = cljs.core.next(more);
sb = G__38452;
more = G__38453;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__38451 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__38454__i = 0, G__38454__a = new Array(arguments.length -  1);
while (G__38454__i < G__38454__a.length) {G__38454__a[G__38454__i] = arguments[G__38454__i + 1]; ++G__38454__i;}
  ys = new cljs.core.IndexedSeq(G__38454__a,0);
} 
return G__38451__delegate.call(this,x,ys);};
G__38451.cljs$lang$maxFixedArity = 1;
G__38451.cljs$lang$applyTo = (function (arglist__38455){
var x = cljs.core.first(arglist__38455);
var ys = cljs.core.rest(arglist__38455);
return G__38451__delegate(x,ys);
});
G__38451.cljs$core$IFn$_invoke$arity$variadic = G__38451__delegate;
return G__38451;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__38456 = null;
if (arguments.length > 1) {
var G__38457__i = 0, G__38457__a = new Array(arguments.length -  1);
while (G__38457__i < G__38457__a.length) {G__38457__a[G__38457__i] = arguments[G__38457__i + 1]; ++G__38457__i;}
G__38456 = new cljs.core.IndexedSeq(G__38457__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__38456);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__38458 = cljs.core.next(xs);
var G__38459 = cljs.core.next(ys);
xs = G__38458;
ys = G__38459;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__38460 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__38461 = cljs.core.next(s);
res = G__38460;
s = G__38461;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__38466 = ((h + (cljs.core.hash((function (){var G__38464 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__38464) : cljs.core.key.call(null,G__38464));
})()) ^ cljs.core.hash((function (){var G__38465 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__38465) : cljs.core.val.call(null,G__38465));
})()))) % (4503599627370496));
var G__38467 = cljs.core.next(s);
h = G__38466;
s = G__38467;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__38468 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__38469 = cljs.core.next(s__$1);
h = G__38468;
s__$1 = G__38469;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__38480_38490 = cljs.core.seq(fn_map);
var chunk__38481_38491 = null;
var count__38482_38492 = (0);
var i__38483_38493 = (0);
while(true){
if((i__38483_38493 < count__38482_38492)){
var vec__38484_38494 = chunk__38481_38491.cljs$core$IIndexed$_nth$arity$2(null,i__38483_38493);
var key_name_38495 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__38484_38494,(0),null);
var f_38496 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__38484_38494,(1),null);
var str_name_38497 = (function (){var G__38485 = key_name_38495;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__38485) : cljs.core.name.call(null,G__38485));
})();
(obj[str_name_38497] = f_38496);

var G__38498 = seq__38480_38490;
var G__38499 = chunk__38481_38491;
var G__38500 = count__38482_38492;
var G__38501 = (i__38483_38493 + (1));
seq__38480_38490 = G__38498;
chunk__38481_38491 = G__38499;
count__38482_38492 = G__38500;
i__38483_38493 = G__38501;
continue;
} else {
var temp__4126__auto___38502 = cljs.core.seq(seq__38480_38490);
if(temp__4126__auto___38502){
var seq__38480_38503__$1 = temp__4126__auto___38502;
if(cljs.core.chunked_seq_QMARK_(seq__38480_38503__$1)){
var c__18464__auto___38504 = (function (){var G__38486 = seq__38480_38503__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__38486) : cljs.core.chunk_first.call(null,G__38486));
})();
var G__38505 = (function (){var G__38487 = seq__38480_38503__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__38487) : cljs.core.chunk_rest.call(null,G__38487));
})();
var G__38506 = c__18464__auto___38504;
var G__38507 = cljs.core.count(c__18464__auto___38504);
var G__38508 = (0);
seq__38480_38490 = G__38505;
chunk__38481_38491 = G__38506;
count__38482_38492 = G__38507;
i__38483_38493 = G__38508;
continue;
} else {
var vec__38488_38509 = cljs.core.first(seq__38480_38503__$1);
var key_name_38510 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__38488_38509,(0),null);
var f_38511 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__38488_38509,(1),null);
var str_name_38512 = (function (){var G__38489 = key_name_38510;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__38489) : cljs.core.name.call(null,G__38489));
})();
(obj[str_name_38512] = f_38511);

var G__38513 = cljs.core.next(seq__38480_38503__$1);
var G__38514 = null;
var G__38515 = (0);
var G__38516 = (0);
seq__38480_38490 = G__38513;
chunk__38481_38491 = G__38514;
count__38482_38492 = G__38515;
i__38483_38493 = G__38516;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__18098__auto__ = self__.__hash;
if(!((h__18098__auto__ == null))){
return h__18098__auto__;
} else {
var h__18098__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__18098__auto____$1;

return h__18098__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__18264__auto__,writer__18265__auto__,opt__18266__auto__){
return cljs.core._write(writer__18265__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18655__auto__ = this;
return cljs.core.es6_iterator(this__18655__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__18264__auto__,writer__18265__auto__,opt__18266__auto__){
return cljs.core._write(writer__18265__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18655__auto__ = this;
return cljs.core.es6_iterator(this__18655__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__38518 = coll;
if(G__38518){
var bit__18358__auto__ = (G__38518.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__18358__auto__) || (G__38518.cljs$core$IReversible$)){
return true;
} else {
if((!G__38518.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__38518);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__38518);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__38519 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__38519;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__38520 = (i - (1));
var G__38521 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__38520;
r = G__38521;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__38522__i = 0, G__38522__a = new Array(arguments.length -  0);
while (G__38522__i < G__38522__a.length) {G__38522__a[G__38522__i] = arguments[G__38522__i + 0]; ++G__38522__i;}
  xs = new cljs.core.IndexedSeq(G__38522__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__38523){
var xs = cljs.core.seq(arglist__38523);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__18098__auto__ = self__.__hash;
if(!((h__18098__auto__ == null))){
return h__18098__auto__;
} else {
var h__18098__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__18098__auto____$1;

return h__18098__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__18264__auto__,writer__18265__auto__,opt__18266__auto__){
return cljs.core._write(writer__18265__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18655__auto__ = this;
return cljs.core.es6_iterator(this__18655__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__17677__auto__ = (coll == null);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var G__38527 = coll;
if(G__38527){
var bit__18351__auto__ = (G__38527.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__18351__auto__) || (G__38527.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__38529 = x;
if(G__38529){
var bit__18358__auto__ = (G__38529.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__18358__auto__) || (G__38529.cljs$core$IList$)){
return true;
} else {
if((!G__38529.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__38529);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__38529);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__17665__auto__ = cljs.core.not(a.ns);
if(and__17665__auto__){
return b.ns;
} else {
return and__17665__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__38536 = a.ns;
var G__38537 = b.ns;
return goog.array.defaultCompare(G__38536,G__38537);
})();
if(((0) === nsc)){
var G__38538 = a.name;
var G__38539 = b.name;
return goog.array.defaultCompare(G__38538,G__38539);
} else {
return nsc;
}
}
} else {
var G__38540 = a.name;
var G__38541 = b.name;
return goog.array.defaultCompare(G__38540,G__38541);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__18098__auto__ = self__._hash;
if(!((h__18098__auto__ == null))){
return h__18098__auto__;
} else {
var h__18098__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__18098__auto____$1;

return h__18098__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__38543 = null;
var G__38543__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__38543__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__38543 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__38543__2.call(this,self__,coll);
case 3:
return G__38543__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__38543.cljs$core$IFn$_invoke$arity$2 = G__38543__2;
G__38543.cljs$core$IFn$_invoke$arity$3 = G__38543__3;
return G__38543;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args38542){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args38542)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__18264__auto__,writer__18265__auto__,opt__18266__auto__){
return cljs.core._write(writer__18265__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__38545 = x;
if(G__38545){
var bit__18351__auto__ = (G__38545.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__18351__auto__) || (G__38545.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__38547 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__38547) : cljs.core.name.call(null,G__38547));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__18098__auto__ = self__.__hash;
if(!((h__18098__auto__ == null))){
return h__18098__auto__;
} else {
var h__18098__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__18098__auto____$1;

return h__18098__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__38548 = ls.sval();
ls = G__38548;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__18264__auto__,writer__18265__auto__,opt__18266__auto__){
return cljs.core._write(writer__18265__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18655__auto__ = this;
return cljs.core.es6_iterator(this__18655__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__18264__auto__,writer__18265__auto__,opt__18266__auto__){
return cljs.core._write(writer__18265__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__18264__auto__,writer__18265__auto__,opt__18266__auto__){
return cljs.core._write(writer__18265__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__18098__auto__ = self__.__hash;
if(!((h__18098__auto__ == null))){
return h__18098__auto__;
} else {
var h__18098__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__18098__auto____$1;

return h__18098__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__18264__auto__,writer__18265__auto__,opt__18266__auto__){
return cljs.core._write(writer__18265__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18655__auto__ = this;
return cljs.core.es6_iterator(this__18655__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__38550 = s;
if(G__38550){
var bit__18351__auto__ = (G__38550.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__18351__auto__) || (G__38550.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__38551 = cljs.core.next(s__$1);
s__$1 = G__38551;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_38552 = (0);
var xs_38553 = cljs.core.seq(coll);
while(true){
if(xs_38553){
(ret[i_38552] = cljs.core.to_array(cljs.core.first(xs_38553)));

var G__38554 = (i_38552 + (1));
var G__38555 = cljs.core.next(xs_38553);
i_38552 = G__38554;
xs_38553 = G__38555;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__38558 = (i + (1));
var G__38559 = cljs.core.next(s__$1);
i = G__38558;
s__$1 = G__38559;
continue;
} else {
return a;
}
break;
}
} else {
var n__18564__auto___38560 = size;
var i_38561 = (0);
while(true){
if((i_38561 < n__18564__auto___38560)){
(a[i_38561] = init_val_or_seq);

var G__38562 = (i_38561 + (1));
i_38561 = G__38562;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__38565 = (i + (1));
var G__38566 = cljs.core.next(s__$1);
i = G__38565;
s__$1 = G__38566;
continue;
} else {
return a;
}
break;
}
} else {
var n__18564__auto___38567 = size;
var i_38568 = (0);
while(true){
if((i_38568 < n__18564__auto___38567)){
(a[i_38568] = init_val_or_seq);

var G__38569 = (i_38568 + (1));
i_38568 = G__38569;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__38572 = (i + (1));
var G__38573 = cljs.core.next(s__$1);
i = G__38572;
s__$1 = G__38573;
continue;
} else {
return a;
}
break;
}
} else {
var n__18564__auto___38574 = size;
var i_38575 = (0);
while(true){
if((i_38575 < n__18564__auto___38574)){
(a[i_38575] = init_val_or_seq);

var G__38576 = (i_38575 + (1));
i_38575 = G__38576;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__38579 = (i + (1));
var G__38580 = cljs.core.next(s__$1);
i = G__38579;
s__$1 = G__38580;
continue;
} else {
return a;
}
break;
}
} else {
var n__18564__auto___38581 = size;
var i_38582 = (0);
while(true){
if((i_38582 < n__18564__auto___38581)){
(a[i_38582] = init_val_or_seq);

var G__38583 = (i_38582 + (1));
i_38582 = G__38583;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__38584 = cljs.core.next(s__$1);
var G__38585 = (i - (1));
var G__38586 = (sum + (1));
s__$1 = G__38584;
i = G__38585;
sum = G__38586;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__38606__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__38606 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__38607__i = 0, G__38607__a = new Array(arguments.length -  2);
while (G__38607__i < G__38607__a.length) {G__38607__a[G__38607__i] = arguments[G__38607__i + 2]; ++G__38607__i;}
  zs = new cljs.core.IndexedSeq(G__38607__a,0);
} 
return G__38606__delegate.call(this,x,y,zs);};
G__38606.cljs$lang$maxFixedArity = 2;
G__38606.cljs$lang$applyTo = (function (arglist__38608){
var x = cljs.core.first(arglist__38608);
arglist__38608 = cljs.core.next(arglist__38608);
var y = cljs.core.first(arglist__38608);
var zs = cljs.core.rest(arglist__38608);
return G__38606__delegate(x,y,zs);
});
G__38606.cljs$core$IFn$_invoke$arity$variadic = G__38606__delegate;
return G__38606;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__38609 = null;
if (arguments.length > 2) {
var G__38610__i = 0, G__38610__a = new Array(arguments.length -  2);
while (G__38610__i < G__38610__a.length) {G__38610__a[G__38610__i] = arguments[G__38610__i + 2]; ++G__38610__i;}
G__38609 = new cljs.core.IndexedSeq(G__38610__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__38609);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__38611__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__38611 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__38612__i = 0, G__38612__a = new Array(arguments.length -  4);
while (G__38612__i < G__38612__a.length) {G__38612__a[G__38612__i] = arguments[G__38612__i + 4]; ++G__38612__i;}
  more = new cljs.core.IndexedSeq(G__38612__a,0);
} 
return G__38611__delegate.call(this,a,b,c,d,more);};
G__38611.cljs$lang$maxFixedArity = 4;
G__38611.cljs$lang$applyTo = (function (arglist__38613){
var a = cljs.core.first(arglist__38613);
arglist__38613 = cljs.core.next(arglist__38613);
var b = cljs.core.first(arglist__38613);
arglist__38613 = cljs.core.next(arglist__38613);
var c = cljs.core.first(arglist__38613);
arglist__38613 = cljs.core.next(arglist__38613);
var d = cljs.core.first(arglist__38613);
var more = cljs.core.rest(arglist__38613);
return G__38611__delegate(a,b,c,d,more);
});
G__38611.cljs$core$IFn$_invoke$arity$variadic = G__38611__delegate;
return G__38611;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__38614 = null;
if (arguments.length > 4) {
var G__38615__i = 0, G__38615__a = new Array(arguments.length -  4);
while (G__38615__i < G__38615__a.length) {G__38615__a[G__38615__i] = arguments[G__38615__i + 4]; ++G__38615__i;}
G__38614 = new cljs.core.IndexedSeq(G__38615__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__38614);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__38616__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__38617 = ntcoll;
var G__38618 = cljs.core.first(vals);
var G__38619 = cljs.core.next(vals);
tcoll = G__38617;
val = G__38618;
vals = G__38619;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__38616 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__38620__i = 0, G__38620__a = new Array(arguments.length -  2);
while (G__38620__i < G__38620__a.length) {G__38620__a[G__38620__i] = arguments[G__38620__i + 2]; ++G__38620__i;}
  vals = new cljs.core.IndexedSeq(G__38620__a,0);
} 
return G__38616__delegate.call(this,tcoll,val,vals);};
G__38616.cljs$lang$maxFixedArity = 2;
G__38616.cljs$lang$applyTo = (function (arglist__38621){
var tcoll = cljs.core.first(arglist__38621);
arglist__38621 = cljs.core.next(arglist__38621);
var val = cljs.core.first(arglist__38621);
var vals = cljs.core.rest(arglist__38621);
return G__38616__delegate(tcoll,val,vals);
});
G__38616.cljs$core$IFn$_invoke$arity$variadic = G__38616__delegate;
return G__38616;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__38622 = null;
if (arguments.length > 2) {
var G__38623__i = 0, G__38623__a = new Array(arguments.length -  2);
while (G__38623__i < G__38623__a.length) {G__38623__a[G__38623__i] = arguments[G__38623__i + 2]; ++G__38623__i;}
G__38622 = new cljs.core.IndexedSeq(G__38623__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__38622);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__38624__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__38625 = ntcoll;
var G__38626 = cljs.core.first(kvs);
var G__38627 = cljs.core.second(kvs);
var G__38628 = cljs.core.nnext(kvs);
tcoll = G__38625;
key = G__38626;
val = G__38627;
kvs = G__38628;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__38624 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__38629__i = 0, G__38629__a = new Array(arguments.length -  3);
while (G__38629__i < G__38629__a.length) {G__38629__a[G__38629__i] = arguments[G__38629__i + 3]; ++G__38629__i;}
  kvs = new cljs.core.IndexedSeq(G__38629__a,0);
} 
return G__38624__delegate.call(this,tcoll,key,val,kvs);};
G__38624.cljs$lang$maxFixedArity = 3;
G__38624.cljs$lang$applyTo = (function (arglist__38630){
var tcoll = cljs.core.first(arglist__38630);
arglist__38630 = cljs.core.next(arglist__38630);
var key = cljs.core.first(arglist__38630);
arglist__38630 = cljs.core.next(arglist__38630);
var val = cljs.core.first(arglist__38630);
var kvs = cljs.core.rest(arglist__38630);
return G__38624__delegate(tcoll,key,val,kvs);
});
G__38624.cljs$core$IFn$_invoke$arity$variadic = G__38624__delegate;
return G__38624;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__38631 = null;
if (arguments.length > 3) {
var G__38632__i = 0, G__38632__a = new Array(arguments.length -  3);
while (G__38632__i < G__38632__a.length) {G__38632__a[G__38632__i] = arguments[G__38632__i + 3]; ++G__38632__i;}
G__38631 = new cljs.core.IndexedSeq(G__38632__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__38631);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__38633__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__38634 = ntcoll;
var G__38635 = cljs.core.first(ks);
var G__38636 = cljs.core.next(ks);
tcoll = G__38634;
key = G__38635;
ks = G__38636;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__38633 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__38637__i = 0, G__38637__a = new Array(arguments.length -  2);
while (G__38637__i < G__38637__a.length) {G__38637__a[G__38637__i] = arguments[G__38637__i + 2]; ++G__38637__i;}
  ks = new cljs.core.IndexedSeq(G__38637__a,0);
} 
return G__38633__delegate.call(this,tcoll,key,ks);};
G__38633.cljs$lang$maxFixedArity = 2;
G__38633.cljs$lang$applyTo = (function (arglist__38638){
var tcoll = cljs.core.first(arglist__38638);
arglist__38638 = cljs.core.next(arglist__38638);
var key = cljs.core.first(arglist__38638);
var ks = cljs.core.rest(arglist__38638);
return G__38633__delegate(tcoll,key,ks);
});
G__38633.cljs$core$IFn$_invoke$arity$variadic = G__38633__delegate;
return G__38633;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__38639 = null;
if (arguments.length > 2) {
var G__38640__i = 0, G__38640__a = new Array(arguments.length -  2);
while (G__38640__i < G__38640__a.length) {G__38640__a[G__38640__i] = arguments[G__38640__i + 2]; ++G__38640__i;}
G__38639 = new cljs.core.IndexedSeq(G__38640__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__38639);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__38641__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__38642 = ntcoll;
var G__38643 = cljs.core.first(vals);
var G__38644 = cljs.core.next(vals);
tcoll = G__38642;
val = G__38643;
vals = G__38644;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__38641 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__38645__i = 0, G__38645__a = new Array(arguments.length -  2);
while (G__38645__i < G__38645__a.length) {G__38645__a[G__38645__i] = arguments[G__38645__i + 2]; ++G__38645__i;}
  vals = new cljs.core.IndexedSeq(G__38645__a,0);
} 
return G__38641__delegate.call(this,tcoll,val,vals);};
G__38641.cljs$lang$maxFixedArity = 2;
G__38641.cljs$lang$applyTo = (function (arglist__38646){
var tcoll = cljs.core.first(arglist__38646);
arglist__38646 = cljs.core.next(arglist__38646);
var val = cljs.core.first(arglist__38646);
var vals = cljs.core.rest(arglist__38646);
return G__38641__delegate(tcoll,val,vals);
});
G__38641.cljs$core$IFn$_invoke$arity$variadic = G__38641__delegate;
return G__38641;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__38647 = null;
if (arguments.length > 2) {
var G__38648__i = 0, G__38648__a = new Array(arguments.length -  2);
while (G__38648__i < G__38648__a.length) {G__38648__a[G__38648__i] = arguments[G__38648__i + 2]; ++G__38648__i;}
G__38647 = new cljs.core.IndexedSeq(G__38648__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__38647);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a18608 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a18608);
} else {
var G__38859 = a18608;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__38859) : f.call(null,G__38859));
}
} else {
var b18609 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a18608,b18609);
} else {
var G__38860 = a18608;
var G__38861 = b18609;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__38860,G__38861) : f.call(null,G__38860,G__38861));
}
} else {
var c18610 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a18608,b18609,c18610);
} else {
var G__38862 = a18608;
var G__38863 = b18609;
var G__38864 = c18610;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__38862,G__38863,G__38864) : f.call(null,G__38862,G__38863,G__38864));
}
} else {
var d18611 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a18608,b18609,c18610,d18611);
} else {
var G__38865 = a18608;
var G__38866 = b18609;
var G__38867 = c18610;
var G__38868 = d18611;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__38865,G__38866,G__38867,G__38868) : f.call(null,G__38865,G__38866,G__38867,G__38868));
}
} else {
var e18612 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a18608,b18609,c18610,d18611,e18612);
} else {
var G__38869 = a18608;
var G__38870 = b18609;
var G__38871 = c18610;
var G__38872 = d18611;
var G__38873 = e18612;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__38869,G__38870,G__38871,G__38872,G__38873) : f.call(null,G__38869,G__38870,G__38871,G__38872,G__38873));
}
} else {
var f18613 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a18608,b18609,c18610,d18611,e18612,f18613);
} else {
var G__38874 = a18608;
var G__38875 = b18609;
var G__38876 = c18610;
var G__38877 = d18611;
var G__38878 = e18612;
var G__38879 = f18613;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__38874,G__38875,G__38876,G__38877,G__38878,G__38879) : f.call(null,G__38874,G__38875,G__38876,G__38877,G__38878,G__38879));
}
} else {
var g18614 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a18608,b18609,c18610,d18611,e18612,f18613,g18614);
} else {
var G__38880 = a18608;
var G__38881 = b18609;
var G__38882 = c18610;
var G__38883 = d18611;
var G__38884 = e18612;
var G__38885 = f18613;
var G__38886 = g18614;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__38880,G__38881,G__38882,G__38883,G__38884,G__38885,G__38886) : f.call(null,G__38880,G__38881,G__38882,G__38883,G__38884,G__38885,G__38886));
}
} else {
var h18615 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a18608,b18609,c18610,d18611,e18612,f18613,g18614,h18615);
} else {
var G__38887 = a18608;
var G__38888 = b18609;
var G__38889 = c18610;
var G__38890 = d18611;
var G__38891 = e18612;
var G__38892 = f18613;
var G__38893 = g18614;
var G__38894 = h18615;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__38887,G__38888,G__38889,G__38890,G__38891,G__38892,G__38893,G__38894) : f.call(null,G__38887,G__38888,G__38889,G__38890,G__38891,G__38892,G__38893,G__38894));
}
} else {
var i18616 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a18608,b18609,c18610,d18611,e18612,f18613,g18614,h18615,i18616);
} else {
var G__38895 = a18608;
var G__38896 = b18609;
var G__38897 = c18610;
var G__38898 = d18611;
var G__38899 = e18612;
var G__38900 = f18613;
var G__38901 = g18614;
var G__38902 = h18615;
var G__38903 = i18616;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__38895,G__38896,G__38897,G__38898,G__38899,G__38900,G__38901,G__38902,G__38903) : f.call(null,G__38895,G__38896,G__38897,G__38898,G__38899,G__38900,G__38901,G__38902,G__38903));
}
} else {
var j18617 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a18608,b18609,c18610,d18611,e18612,f18613,g18614,h18615,i18616,j18617);
} else {
var G__38904 = a18608;
var G__38905 = b18609;
var G__38906 = c18610;
var G__38907 = d18611;
var G__38908 = e18612;
var G__38909 = f18613;
var G__38910 = g18614;
var G__38911 = h18615;
var G__38912 = i18616;
var G__38913 = j18617;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__38904,G__38905,G__38906,G__38907,G__38908,G__38909,G__38910,G__38911,G__38912,G__38913) : f.call(null,G__38904,G__38905,G__38906,G__38907,G__38908,G__38909,G__38910,G__38911,G__38912,G__38913));
}
} else {
var k18618 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a18608,b18609,c18610,d18611,e18612,f18613,g18614,h18615,i18616,j18617,k18618);
} else {
var G__38914 = a18608;
var G__38915 = b18609;
var G__38916 = c18610;
var G__38917 = d18611;
var G__38918 = e18612;
var G__38919 = f18613;
var G__38920 = g18614;
var G__38921 = h18615;
var G__38922 = i18616;
var G__38923 = j18617;
var G__38924 = k18618;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__38914,G__38915,G__38916,G__38917,G__38918,G__38919,G__38920,G__38921,G__38922,G__38923,G__38924) : f.call(null,G__38914,G__38915,G__38916,G__38917,G__38918,G__38919,G__38920,G__38921,G__38922,G__38923,G__38924));
}
} else {
var l18619 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a18608,b18609,c18610,d18611,e18612,f18613,g18614,h18615,i18616,j18617,k18618,l18619);
} else {
var G__38925 = a18608;
var G__38926 = b18609;
var G__38927 = c18610;
var G__38928 = d18611;
var G__38929 = e18612;
var G__38930 = f18613;
var G__38931 = g18614;
var G__38932 = h18615;
var G__38933 = i18616;
var G__38934 = j18617;
var G__38935 = k18618;
var G__38936 = l18619;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__38925,G__38926,G__38927,G__38928,G__38929,G__38930,G__38931,G__38932,G__38933,G__38934,G__38935,G__38936) : f.call(null,G__38925,G__38926,G__38927,G__38928,G__38929,G__38930,G__38931,G__38932,G__38933,G__38934,G__38935,G__38936));
}
} else {
var m18620 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a18608,b18609,c18610,d18611,e18612,f18613,g18614,h18615,i18616,j18617,k18618,l18619,m18620);
} else {
var G__38937 = a18608;
var G__38938 = b18609;
var G__38939 = c18610;
var G__38940 = d18611;
var G__38941 = e18612;
var G__38942 = f18613;
var G__38943 = g18614;
var G__38944 = h18615;
var G__38945 = i18616;
var G__38946 = j18617;
var G__38947 = k18618;
var G__38948 = l18619;
var G__38949 = m18620;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__38937,G__38938,G__38939,G__38940,G__38941,G__38942,G__38943,G__38944,G__38945,G__38946,G__38947,G__38948,G__38949) : f.call(null,G__38937,G__38938,G__38939,G__38940,G__38941,G__38942,G__38943,G__38944,G__38945,G__38946,G__38947,G__38948,G__38949));
}
} else {
var n18621 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a18608,b18609,c18610,d18611,e18612,f18613,g18614,h18615,i18616,j18617,k18618,l18619,m18620,n18621);
} else {
var G__38950 = a18608;
var G__38951 = b18609;
var G__38952 = c18610;
var G__38953 = d18611;
var G__38954 = e18612;
var G__38955 = f18613;
var G__38956 = g18614;
var G__38957 = h18615;
var G__38958 = i18616;
var G__38959 = j18617;
var G__38960 = k18618;
var G__38961 = l18619;
var G__38962 = m18620;
var G__38963 = n18621;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__38950,G__38951,G__38952,G__38953,G__38954,G__38955,G__38956,G__38957,G__38958,G__38959,G__38960,G__38961,G__38962,G__38963) : f.call(null,G__38950,G__38951,G__38952,G__38953,G__38954,G__38955,G__38956,G__38957,G__38958,G__38959,G__38960,G__38961,G__38962,G__38963));
}
} else {
var o18622 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a18608,b18609,c18610,d18611,e18612,f18613,g18614,h18615,i18616,j18617,k18618,l18619,m18620,n18621,o18622);
} else {
var G__38964 = a18608;
var G__38965 = b18609;
var G__38966 = c18610;
var G__38967 = d18611;
var G__38968 = e18612;
var G__38969 = f18613;
var G__38970 = g18614;
var G__38971 = h18615;
var G__38972 = i18616;
var G__38973 = j18617;
var G__38974 = k18618;
var G__38975 = l18619;
var G__38976 = m18620;
var G__38977 = n18621;
var G__38978 = o18622;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__38964,G__38965,G__38966,G__38967,G__38968,G__38969,G__38970,G__38971,G__38972,G__38973,G__38974,G__38975,G__38976,G__38977,G__38978) : f.call(null,G__38964,G__38965,G__38966,G__38967,G__38968,G__38969,G__38970,G__38971,G__38972,G__38973,G__38974,G__38975,G__38976,G__38977,G__38978));
}
} else {
var p18623 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a18608,b18609,c18610,d18611,e18612,f18613,g18614,h18615,i18616,j18617,k18618,l18619,m18620,n18621,o18622,p18623);
} else {
var G__38979 = a18608;
var G__38980 = b18609;
var G__38981 = c18610;
var G__38982 = d18611;
var G__38983 = e18612;
var G__38984 = f18613;
var G__38985 = g18614;
var G__38986 = h18615;
var G__38987 = i18616;
var G__38988 = j18617;
var G__38989 = k18618;
var G__38990 = l18619;
var G__38991 = m18620;
var G__38992 = n18621;
var G__38993 = o18622;
var G__38994 = p18623;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__38979,G__38980,G__38981,G__38982,G__38983,G__38984,G__38985,G__38986,G__38987,G__38988,G__38989,G__38990,G__38991,G__38992,G__38993,G__38994) : f.call(null,G__38979,G__38980,G__38981,G__38982,G__38983,G__38984,G__38985,G__38986,G__38987,G__38988,G__38989,G__38990,G__38991,G__38992,G__38993,G__38994));
}
} else {
var q18624 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a18608,b18609,c18610,d18611,e18612,f18613,g18614,h18615,i18616,j18617,k18618,l18619,m18620,n18621,o18622,p18623,q18624);
} else {
var G__38995 = a18608;
var G__38996 = b18609;
var G__38997 = c18610;
var G__38998 = d18611;
var G__38999 = e18612;
var G__39000 = f18613;
var G__39001 = g18614;
var G__39002 = h18615;
var G__39003 = i18616;
var G__39004 = j18617;
var G__39005 = k18618;
var G__39006 = l18619;
var G__39007 = m18620;
var G__39008 = n18621;
var G__39009 = o18622;
var G__39010 = p18623;
var G__39011 = q18624;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__38995,G__38996,G__38997,G__38998,G__38999,G__39000,G__39001,G__39002,G__39003,G__39004,G__39005,G__39006,G__39007,G__39008,G__39009,G__39010,G__39011) : f.call(null,G__38995,G__38996,G__38997,G__38998,G__38999,G__39000,G__39001,G__39002,G__39003,G__39004,G__39005,G__39006,G__39007,G__39008,G__39009,G__39010,G__39011));
}
} else {
var r18625 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a18608,b18609,c18610,d18611,e18612,f18613,g18614,h18615,i18616,j18617,k18618,l18619,m18620,n18621,o18622,p18623,q18624,r18625);
} else {
var G__39012 = a18608;
var G__39013 = b18609;
var G__39014 = c18610;
var G__39015 = d18611;
var G__39016 = e18612;
var G__39017 = f18613;
var G__39018 = g18614;
var G__39019 = h18615;
var G__39020 = i18616;
var G__39021 = j18617;
var G__39022 = k18618;
var G__39023 = l18619;
var G__39024 = m18620;
var G__39025 = n18621;
var G__39026 = o18622;
var G__39027 = p18623;
var G__39028 = q18624;
var G__39029 = r18625;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__39012,G__39013,G__39014,G__39015,G__39016,G__39017,G__39018,G__39019,G__39020,G__39021,G__39022,G__39023,G__39024,G__39025,G__39026,G__39027,G__39028,G__39029) : f.call(null,G__39012,G__39013,G__39014,G__39015,G__39016,G__39017,G__39018,G__39019,G__39020,G__39021,G__39022,G__39023,G__39024,G__39025,G__39026,G__39027,G__39028,G__39029));
}
} else {
var s18626 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a18608,b18609,c18610,d18611,e18612,f18613,g18614,h18615,i18616,j18617,k18618,l18619,m18620,n18621,o18622,p18623,q18624,r18625,s18626);
} else {
var G__39030 = a18608;
var G__39031 = b18609;
var G__39032 = c18610;
var G__39033 = d18611;
var G__39034 = e18612;
var G__39035 = f18613;
var G__39036 = g18614;
var G__39037 = h18615;
var G__39038 = i18616;
var G__39039 = j18617;
var G__39040 = k18618;
var G__39041 = l18619;
var G__39042 = m18620;
var G__39043 = n18621;
var G__39044 = o18622;
var G__39045 = p18623;
var G__39046 = q18624;
var G__39047 = r18625;
var G__39048 = s18626;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__39030,G__39031,G__39032,G__39033,G__39034,G__39035,G__39036,G__39037,G__39038,G__39039,G__39040,G__39041,G__39042,G__39043,G__39044,G__39045,G__39046,G__39047,G__39048) : f.call(null,G__39030,G__39031,G__39032,G__39033,G__39034,G__39035,G__39036,G__39037,G__39038,G__39039,G__39040,G__39041,G__39042,G__39043,G__39044,G__39045,G__39046,G__39047,G__39048));
}
} else {
var t18627 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a18608,b18609,c18610,d18611,e18612,f18613,g18614,h18615,i18616,j18617,k18618,l18619,m18620,n18621,o18622,p18623,q18624,r18625,s18626,t18627);
} else {
var G__39049 = a18608;
var G__39050 = b18609;
var G__39051 = c18610;
var G__39052 = d18611;
var G__39053 = e18612;
var G__39054 = f18613;
var G__39055 = g18614;
var G__39056 = h18615;
var G__39057 = i18616;
var G__39058 = j18617;
var G__39059 = k18618;
var G__39060 = l18619;
var G__39061 = m18620;
var G__39062 = n18621;
var G__39063 = o18622;
var G__39064 = p18623;
var G__39065 = q18624;
var G__39066 = r18625;
var G__39067 = s18626;
var G__39068 = t18627;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__39049,G__39050,G__39051,G__39052,G__39053,G__39054,G__39055,G__39056,G__39057,G__39058,G__39059,G__39060,G__39061,G__39062,G__39063,G__39064,G__39065,G__39066,G__39067,G__39068) : f.call(null,G__39049,G__39050,G__39051,G__39052,G__39053,G__39054,G__39055,G__39056,G__39057,G__39058,G__39059,G__39060,G__39061,G__39062,G__39063,G__39064,G__39065,G__39066,G__39067,G__39068));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__39069__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__39069 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__39070__i = 0, G__39070__a = new Array(arguments.length -  5);
while (G__39070__i < G__39070__a.length) {G__39070__a[G__39070__i] = arguments[G__39070__i + 5]; ++G__39070__i;}
  args = new cljs.core.IndexedSeq(G__39070__a,0);
} 
return G__39069__delegate.call(this,f,a,b,c,d,args);};
G__39069.cljs$lang$maxFixedArity = 5;
G__39069.cljs$lang$applyTo = (function (arglist__39071){
var f = cljs.core.first(arglist__39071);
arglist__39071 = cljs.core.next(arglist__39071);
var a = cljs.core.first(arglist__39071);
arglist__39071 = cljs.core.next(arglist__39071);
var b = cljs.core.first(arglist__39071);
arglist__39071 = cljs.core.next(arglist__39071);
var c = cljs.core.first(arglist__39071);
arglist__39071 = cljs.core.next(arglist__39071);
var d = cljs.core.first(arglist__39071);
var args = cljs.core.rest(arglist__39071);
return G__39069__delegate(f,a,b,c,d,args);
});
G__39069.cljs$core$IFn$_invoke$arity$variadic = G__39069__delegate;
return G__39069;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__39072 = null;
if (arguments.length > 5) {
var G__39073__i = 0, G__39073__a = new Array(arguments.length -  5);
while (G__39073__i < G__39073__a.length) {G__39073__a[G__39073__i] = arguments[G__39073__i + 5]; ++G__39073__i;}
G__39072 = new cljs.core.IndexedSeq(G__39073__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__39072);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__39089 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__39089) : f.call(null,G__39089));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__39090 = cljs.core.meta(obj);
var G__39091 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__39090,G__39091) : f.call(null,G__39090,G__39091));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__39092 = cljs.core.meta(obj);
var G__39093 = a;
var G__39094 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__39092,G__39093,G__39094) : f.call(null,G__39092,G__39093,G__39094));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__39095 = cljs.core.meta(obj);
var G__39096 = a;
var G__39097 = b;
var G__39098 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__39095,G__39096,G__39097,G__39098) : f.call(null,G__39095,G__39096,G__39097,G__39098));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__39099 = cljs.core.meta(obj);
var G__39100 = a;
var G__39101 = b;
var G__39102 = c;
var G__39103 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__39099,G__39100,G__39101,G__39102,G__39103) : f.call(null,G__39099,G__39100,G__39101,G__39102,G__39103));
})());
});
var vary_meta__7 = (function() { 
var G__39104__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__39104 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__39105__i = 0, G__39105__a = new Array(arguments.length -  6);
while (G__39105__i < G__39105__a.length) {G__39105__a[G__39105__i] = arguments[G__39105__i + 6]; ++G__39105__i;}
  args = new cljs.core.IndexedSeq(G__39105__a,0);
} 
return G__39104__delegate.call(this,obj,f,a,b,c,d,args);};
G__39104.cljs$lang$maxFixedArity = 6;
G__39104.cljs$lang$applyTo = (function (arglist__39106){
var obj = cljs.core.first(arglist__39106);
arglist__39106 = cljs.core.next(arglist__39106);
var f = cljs.core.first(arglist__39106);
arglist__39106 = cljs.core.next(arglist__39106);
var a = cljs.core.first(arglist__39106);
arglist__39106 = cljs.core.next(arglist__39106);
var b = cljs.core.first(arglist__39106);
arglist__39106 = cljs.core.next(arglist__39106);
var c = cljs.core.first(arglist__39106);
arglist__39106 = cljs.core.next(arglist__39106);
var d = cljs.core.first(arglist__39106);
var args = cljs.core.rest(arglist__39106);
return G__39104__delegate(obj,f,a,b,c,d,args);
});
G__39104.cljs$core$IFn$_invoke$arity$variadic = G__39104__delegate;
return G__39104;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__39107 = null;
if (arguments.length > 6) {
var G__39108__i = 0, G__39108__a = new Array(arguments.length -  6);
while (G__39108__i < G__39108__a.length) {G__39108__a[G__39108__i] = arguments[G__39108__i + 6]; ++G__39108__i;}
G__39107 = new cljs.core.IndexedSeq(G__39108__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__39107);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__39109__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__39109 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__39110__i = 0, G__39110__a = new Array(arguments.length -  2);
while (G__39110__i < G__39110__a.length) {G__39110__a[G__39110__i] = arguments[G__39110__i + 2]; ++G__39110__i;}
  more = new cljs.core.IndexedSeq(G__39110__a,0);
} 
return G__39109__delegate.call(this,x,y,more);};
G__39109.cljs$lang$maxFixedArity = 2;
G__39109.cljs$lang$applyTo = (function (arglist__39111){
var x = cljs.core.first(arglist__39111);
arglist__39111 = cljs.core.next(arglist__39111);
var y = cljs.core.first(arglist__39111);
var more = cljs.core.rest(arglist__39111);
return G__39109__delegate(x,y,more);
});
G__39109.cljs$core$IFn$_invoke$arity$variadic = G__39109__delegate;
return G__39109;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__39112 = null;
if (arguments.length > 2) {
var G__39113__i = 0, G__39113__a = new Array(arguments.length -  2);
while (G__39113__i < G__39113__a.length) {G__39113__a[G__39113__i] = arguments[G__39113__i + 2]; ++G__39113__i;}
G__39112 = new cljs.core.IndexedSeq(G__39113__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__39112);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t39117 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t39117 = (function (nil_iter,meta39118){
this.nil_iter = nil_iter;
this.meta39118 = meta39118;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t39117.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t39117.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t39117.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t39117.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_39119){
var self__ = this;
var _39119__$1 = this;
return self__.meta39118;
});

cljs.core.t39117.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_39119,meta39118__$1){
var self__ = this;
var _39119__$1 = this;
return (new cljs.core.t39117(self__.nil_iter,meta39118__$1));
});

cljs.core.t39117.cljs$lang$type = true;

cljs.core.t39117.cljs$lang$ctorStr = "cljs.core/t39117";

cljs.core.t39117.cljs$lang$ctorPrWriter = (function (this__18264__auto__,writer__18265__auto__,opt__18266__auto__){
return cljs.core._write(writer__18265__auto__,"cljs.core/t39117");
});

cljs.core.__GT_t39117 = (function __GT_t39117(nil_iter__$1,meta39118){
return (new cljs.core.t39117(nil_iter__$1,meta39118));
});

}

return (new cljs.core.t39117(nil_iter,cljs.core.PersistentArrayMap.EMPTY));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__18264__auto__,writer__18265__auto__,opt__18266__auto__){
return cljs.core._write(writer__18265__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__18264__auto__,writer__18265__auto__,opt__18266__auto__){
return cljs.core._write(writer__18265__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__18264__auto__,writer__18265__auto__,opt__18266__auto__){
return cljs.core._write(writer__18265__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__17665__auto__ = !((lt.stepper == null));
if(and__17665__auto__){
return self__.iter.hasNext();
} else {
return and__17665__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__39120 = lt;
var G__39121 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__39120,G__39121) : self__.xform.call(null,G__39120,G__39121));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__39122 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__39122) : self__.xform.call(null,G__39122));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__18264__auto__,writer__18265__auto__,opt__18266__auto__){
return cljs.core._write(writer__18265__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__39124 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__39124) : xform.call(null,G__39124));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__39126 = cljs.core.next(iters__$1);
iters__$1 = G__39126;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__18564__auto___39127 = self__.iters.length;
var i_39128 = (0);
while(true){
if((i_39128 < n__18564__auto___39127)){
(self__.nexts[i_39128] = (self__.iters[i_39128]).next());

var G__39129 = (i_39128 + (1));
i_39128 = G__39129;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__17665__auto__ = !((lt.stepper == null));
if(and__17665__auto__){
return this$.hasNext();
} else {
return and__17665__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__39125 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__39125) : self__.xform.call(null,G__39125));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__18264__auto__,writer__18265__auto__,opt__18266__auto__){
return cljs.core._write(writer__18265__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__39134 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__39134) : xform.call(null,G__39134));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__18264__auto__,writer__18265__auto__,opt__18266__auto__){
return cljs.core._write(writer__18265__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18655__auto__ = this;
return cljs.core.es6_iterator(this__18655__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__39135_39139 = cljs.core.seq(colls);
var chunk__39136_39140 = null;
var count__39137_39141 = (0);
var i__39138_39142 = (0);
while(true){
if((i__39138_39142 < count__39137_39141)){
var coll_39143 = chunk__39136_39140.cljs$core$IIndexed$_nth$arity$2(null,i__39138_39142);
iters.push(cljs.core.iter(coll_39143));

var G__39144 = seq__39135_39139;
var G__39145 = chunk__39136_39140;
var G__39146 = count__39137_39141;
var G__39147 = (i__39138_39142 + (1));
seq__39135_39139 = G__39144;
chunk__39136_39140 = G__39145;
count__39137_39141 = G__39146;
i__39138_39142 = G__39147;
continue;
} else {
var temp__4126__auto___39148 = cljs.core.seq(seq__39135_39139);
if(temp__4126__auto___39148){
var seq__39135_39149__$1 = temp__4126__auto___39148;
if(cljs.core.chunked_seq_QMARK_(seq__39135_39149__$1)){
var c__18464__auto___39150 = cljs.core.chunk_first(seq__39135_39149__$1);
var G__39151 = cljs.core.chunk_rest(seq__39135_39149__$1);
var G__39152 = c__18464__auto___39150;
var G__39153 = cljs.core.count(c__18464__auto___39150);
var G__39154 = (0);
seq__39135_39139 = G__39151;
chunk__39136_39140 = G__39152;
count__39137_39141 = G__39153;
i__39138_39142 = G__39154;
continue;
} else {
var coll_39155 = cljs.core.first(seq__39135_39149__$1);
iters.push(cljs.core.iter(coll_39155));

var G__39156 = cljs.core.next(seq__39135_39149__$1);
var G__39157 = null;
var G__39158 = (0);
var G__39159 = (0);
seq__39135_39139 = G__39156;
chunk__39136_39140 = G__39157;
count__39137_39141 = G__39158;
i__39138_39142 = G__39159;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__17677__auto__ = cljs.core.seq(coll);
if(or__17677__auto__){
return or__17677__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__39160__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__39160 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__39161__i = 0, G__39161__a = new Array(arguments.length -  2);
while (G__39161__i < G__39161__a.length) {G__39161__a[G__39161__i] = arguments[G__39161__i + 2]; ++G__39161__i;}
  colls = new cljs.core.IndexedSeq(G__39161__a,0);
} 
return G__39160__delegate.call(this,xform,coll,colls);};
G__39160.cljs$lang$maxFixedArity = 2;
G__39160.cljs$lang$applyTo = (function (arglist__39162){
var xform = cljs.core.first(arglist__39162);
arglist__39162 = cljs.core.next(arglist__39162);
var coll = cljs.core.first(arglist__39162);
var colls = cljs.core.rest(arglist__39162);
return G__39160__delegate(xform,coll,colls);
});
G__39160.cljs$core$IFn$_invoke$arity$variadic = G__39160__delegate;
return G__39160;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__39163 = null;
if (arguments.length > 2) {
var G__39164__i = 0, G__39164__a = new Array(arguments.length -  2);
while (G__39164__i < G__39164__a.length) {G__39164__a[G__39164__i] = arguments[G__39164__i + 2]; ++G__39164__i;}
G__39163 = new cljs.core.IndexedSeq(G__39164__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__39163);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__39166 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__39166) : pred.call(null,G__39166));
})())){
var G__39167 = pred;
var G__39168 = cljs.core.next(coll);
pred = G__39167;
coll = G__39168;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__17677__auto__ = (function (){var G__39172 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__39172) : pred.call(null,G__39172));
})();
if(cljs.core.truth_(or__17677__auto__)){
return or__17677__auto__;
} else {
var G__39173 = pred;
var G__39174 = cljs.core.next(coll);
pred = G__39173;
coll = G__39174;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__39181 = null;
var G__39181__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__39181__1 = (function (x){
return cljs.core.not((function (){var G__39178 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__39178) : f.call(null,G__39178));
})());
});
var G__39181__2 = (function (x,y){
return cljs.core.not((function (){var G__39179 = x;
var G__39180 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__39179,G__39180) : f.call(null,G__39179,G__39180));
})());
});
var G__39181__3 = (function() { 
var G__39182__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__39182 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__39183__i = 0, G__39183__a = new Array(arguments.length -  2);
while (G__39183__i < G__39183__a.length) {G__39183__a[G__39183__i] = arguments[G__39183__i + 2]; ++G__39183__i;}
  zs = new cljs.core.IndexedSeq(G__39183__a,0);
} 
return G__39182__delegate.call(this,x,y,zs);};
G__39182.cljs$lang$maxFixedArity = 2;
G__39182.cljs$lang$applyTo = (function (arglist__39184){
var x = cljs.core.first(arglist__39184);
arglist__39184 = cljs.core.next(arglist__39184);
var y = cljs.core.first(arglist__39184);
var zs = cljs.core.rest(arglist__39184);
return G__39182__delegate(x,y,zs);
});
G__39182.cljs$core$IFn$_invoke$arity$variadic = G__39182__delegate;
return G__39182;
})()
;
G__39181 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__39181__0.call(this);
case 1:
return G__39181__1.call(this,x);
case 2:
return G__39181__2.call(this,x,y);
default:
var G__39185 = null;
if (arguments.length > 2) {
var G__39186__i = 0, G__39186__a = new Array(arguments.length -  2);
while (G__39186__i < G__39186__a.length) {G__39186__a[G__39186__i] = arguments[G__39186__i + 2]; ++G__39186__i;}
G__39185 = new cljs.core.IndexedSeq(G__39186__a,0);
}
return G__39181__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__39185);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__39181.cljs$lang$maxFixedArity = 2;
G__39181.cljs$lang$applyTo = G__39181__3.cljs$lang$applyTo;
G__39181.cljs$core$IFn$_invoke$arity$0 = G__39181__0;
G__39181.cljs$core$IFn$_invoke$arity$1 = G__39181__1;
G__39181.cljs$core$IFn$_invoke$arity$2 = G__39181__2;
G__39181.cljs$core$IFn$_invoke$arity$variadic = G__39181__3.cljs$core$IFn$_invoke$arity$variadic;
return G__39181;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__39187__delegate = function (args){
return x;
};
var G__39187 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__39188__i = 0, G__39188__a = new Array(arguments.length -  0);
while (G__39188__i < G__39188__a.length) {G__39188__a[G__39188__i] = arguments[G__39188__i + 0]; ++G__39188__i;}
  args = new cljs.core.IndexedSeq(G__39188__a,0);
} 
return G__39187__delegate.call(this,args);};
G__39187.cljs$lang$maxFixedArity = 0;
G__39187.cljs$lang$applyTo = (function (arglist__39189){
var args = cljs.core.seq(arglist__39189);
return G__39187__delegate(args);
});
G__39187.cljs$core$IFn$_invoke$arity$variadic = G__39187__delegate;
return G__39187;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__39244 = null;
var G__39244__0 = (function (){
var G__39217 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__39217) : f.call(null,G__39217));
});
var G__39244__1 = (function (x){
var G__39218 = (function (){var G__39219 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__39219) : g.call(null,G__39219));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__39218) : f.call(null,G__39218));
});
var G__39244__2 = (function (x,y){
var G__39220 = (function (){var G__39221 = x;
var G__39222 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__39221,G__39222) : g.call(null,G__39221,G__39222));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__39220) : f.call(null,G__39220));
});
var G__39244__3 = (function (x,y,z){
var G__39223 = (function (){var G__39224 = x;
var G__39225 = y;
var G__39226 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__39224,G__39225,G__39226) : g.call(null,G__39224,G__39225,G__39226));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__39223) : f.call(null,G__39223));
});
var G__39244__4 = (function() { 
var G__39245__delegate = function (x,y,z,args){
var G__39227 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__39227) : f.call(null,G__39227));
};
var G__39245 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__39246__i = 0, G__39246__a = new Array(arguments.length -  3);
while (G__39246__i < G__39246__a.length) {G__39246__a[G__39246__i] = arguments[G__39246__i + 3]; ++G__39246__i;}
  args = new cljs.core.IndexedSeq(G__39246__a,0);
} 
return G__39245__delegate.call(this,x,y,z,args);};
G__39245.cljs$lang$maxFixedArity = 3;
G__39245.cljs$lang$applyTo = (function (arglist__39247){
var x = cljs.core.first(arglist__39247);
arglist__39247 = cljs.core.next(arglist__39247);
var y = cljs.core.first(arglist__39247);
arglist__39247 = cljs.core.next(arglist__39247);
var z = cljs.core.first(arglist__39247);
var args = cljs.core.rest(arglist__39247);
return G__39245__delegate(x,y,z,args);
});
G__39245.cljs$core$IFn$_invoke$arity$variadic = G__39245__delegate;
return G__39245;
})()
;
G__39244 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__39244__0.call(this);
case 1:
return G__39244__1.call(this,x);
case 2:
return G__39244__2.call(this,x,y);
case 3:
return G__39244__3.call(this,x,y,z);
default:
var G__39248 = null;
if (arguments.length > 3) {
var G__39249__i = 0, G__39249__a = new Array(arguments.length -  3);
while (G__39249__i < G__39249__a.length) {G__39249__a[G__39249__i] = arguments[G__39249__i + 3]; ++G__39249__i;}
G__39248 = new cljs.core.IndexedSeq(G__39249__a,0);
}
return G__39244__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__39248);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__39244.cljs$lang$maxFixedArity = 3;
G__39244.cljs$lang$applyTo = G__39244__4.cljs$lang$applyTo;
G__39244.cljs$core$IFn$_invoke$arity$0 = G__39244__0;
G__39244.cljs$core$IFn$_invoke$arity$1 = G__39244__1;
G__39244.cljs$core$IFn$_invoke$arity$2 = G__39244__2;
G__39244.cljs$core$IFn$_invoke$arity$3 = G__39244__3;
G__39244.cljs$core$IFn$_invoke$arity$variadic = G__39244__4.cljs$core$IFn$_invoke$arity$variadic;
return G__39244;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__39250 = null;
var G__39250__0 = (function (){
var G__39228 = (function (){var G__39229 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__39229) : g.call(null,G__39229));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__39228) : f.call(null,G__39228));
});
var G__39250__1 = (function (x){
var G__39230 = (function (){var G__39231 = (function (){var G__39232 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__39232) : h.call(null,G__39232));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__39231) : g.call(null,G__39231));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__39230) : f.call(null,G__39230));
});
var G__39250__2 = (function (x,y){
var G__39233 = (function (){var G__39234 = (function (){var G__39235 = x;
var G__39236 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__39235,G__39236) : h.call(null,G__39235,G__39236));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__39234) : g.call(null,G__39234));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__39233) : f.call(null,G__39233));
});
var G__39250__3 = (function (x,y,z){
var G__39237 = (function (){var G__39238 = (function (){var G__39239 = x;
var G__39240 = y;
var G__39241 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__39239,G__39240,G__39241) : h.call(null,G__39239,G__39240,G__39241));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__39238) : g.call(null,G__39238));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__39237) : f.call(null,G__39237));
});
var G__39250__4 = (function() { 
var G__39251__delegate = function (x,y,z,args){
var G__39242 = (function (){var G__39243 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__39243) : g.call(null,G__39243));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__39242) : f.call(null,G__39242));
};
var G__39251 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__39252__i = 0, G__39252__a = new Array(arguments.length -  3);
while (G__39252__i < G__39252__a.length) {G__39252__a[G__39252__i] = arguments[G__39252__i + 3]; ++G__39252__i;}
  args = new cljs.core.IndexedSeq(G__39252__a,0);
} 
return G__39251__delegate.call(this,x,y,z,args);};
G__39251.cljs$lang$maxFixedArity = 3;
G__39251.cljs$lang$applyTo = (function (arglist__39253){
var x = cljs.core.first(arglist__39253);
arglist__39253 = cljs.core.next(arglist__39253);
var y = cljs.core.first(arglist__39253);
arglist__39253 = cljs.core.next(arglist__39253);
var z = cljs.core.first(arglist__39253);
var args = cljs.core.rest(arglist__39253);
return G__39251__delegate(x,y,z,args);
});
G__39251.cljs$core$IFn$_invoke$arity$variadic = G__39251__delegate;
return G__39251;
})()
;
G__39250 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__39250__0.call(this);
case 1:
return G__39250__1.call(this,x);
case 2:
return G__39250__2.call(this,x,y);
case 3:
return G__39250__3.call(this,x,y,z);
default:
var G__39254 = null;
if (arguments.length > 3) {
var G__39255__i = 0, G__39255__a = new Array(arguments.length -  3);
while (G__39255__i < G__39255__a.length) {G__39255__a[G__39255__i] = arguments[G__39255__i + 3]; ++G__39255__i;}
G__39254 = new cljs.core.IndexedSeq(G__39255__a,0);
}
return G__39250__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__39254);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__39250.cljs$lang$maxFixedArity = 3;
G__39250.cljs$lang$applyTo = G__39250__4.cljs$lang$applyTo;
G__39250.cljs$core$IFn$_invoke$arity$0 = G__39250__0;
G__39250.cljs$core$IFn$_invoke$arity$1 = G__39250__1;
G__39250.cljs$core$IFn$_invoke$arity$2 = G__39250__2;
G__39250.cljs$core$IFn$_invoke$arity$3 = G__39250__3;
G__39250.cljs$core$IFn$_invoke$arity$variadic = G__39250__4.cljs$core$IFn$_invoke$arity$variadic;
return G__39250;
})()
});
var comp__4 = (function() { 
var G__39256__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__39257__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__39258 = cljs.core.first(fs__$2).call(null,ret);
var G__39259 = cljs.core.next(fs__$2);
ret = G__39258;
fs__$2 = G__39259;
continue;
} else {
return ret;
}
break;
}
};
var G__39257 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__39260__i = 0, G__39260__a = new Array(arguments.length -  0);
while (G__39260__i < G__39260__a.length) {G__39260__a[G__39260__i] = arguments[G__39260__i + 0]; ++G__39260__i;}
  args = new cljs.core.IndexedSeq(G__39260__a,0);
} 
return G__39257__delegate.call(this,args);};
G__39257.cljs$lang$maxFixedArity = 0;
G__39257.cljs$lang$applyTo = (function (arglist__39261){
var args = cljs.core.seq(arglist__39261);
return G__39257__delegate(args);
});
G__39257.cljs$core$IFn$_invoke$arity$variadic = G__39257__delegate;
return G__39257;
})()
;
;})(fs__$1))
};
var G__39256 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__39262__i = 0, G__39262__a = new Array(arguments.length -  3);
while (G__39262__i < G__39262__a.length) {G__39262__a[G__39262__i] = arguments[G__39262__i + 3]; ++G__39262__i;}
  fs = new cljs.core.IndexedSeq(G__39262__a,0);
} 
return G__39256__delegate.call(this,f1,f2,f3,fs);};
G__39256.cljs$lang$maxFixedArity = 3;
G__39256.cljs$lang$applyTo = (function (arglist__39263){
var f1 = cljs.core.first(arglist__39263);
arglist__39263 = cljs.core.next(arglist__39263);
var f2 = cljs.core.first(arglist__39263);
arglist__39263 = cljs.core.next(arglist__39263);
var f3 = cljs.core.first(arglist__39263);
var fs = cljs.core.rest(arglist__39263);
return G__39256__delegate(f1,f2,f3,fs);
});
G__39256.cljs$core$IFn$_invoke$arity$variadic = G__39256__delegate;
return G__39256;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__39264 = null;
if (arguments.length > 3) {
var G__39265__i = 0, G__39265__a = new Array(arguments.length -  3);
while (G__39265__i < G__39265__a.length) {G__39265__a[G__39265__i] = arguments[G__39265__i + 3]; ++G__39265__i;}
G__39264 = new cljs.core.IndexedSeq(G__39265__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__39264);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__39350 = null;
var G__39350__0 = (function (){
var G__39308 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__39308) : f.call(null,G__39308));
});
var G__39350__1 = (function (x){
var G__39309 = arg1;
var G__39310 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__39309,G__39310) : f.call(null,G__39309,G__39310));
});
var G__39350__2 = (function (x,y){
var G__39311 = arg1;
var G__39312 = x;
var G__39313 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__39311,G__39312,G__39313) : f.call(null,G__39311,G__39312,G__39313));
});
var G__39350__3 = (function (x,y,z){
var G__39314 = arg1;
var G__39315 = x;
var G__39316 = y;
var G__39317 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__39314,G__39315,G__39316,G__39317) : f.call(null,G__39314,G__39315,G__39316,G__39317));
});
var G__39350__4 = (function() { 
var G__39351__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__39351 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__39352__i = 0, G__39352__a = new Array(arguments.length -  3);
while (G__39352__i < G__39352__a.length) {G__39352__a[G__39352__i] = arguments[G__39352__i + 3]; ++G__39352__i;}
  args = new cljs.core.IndexedSeq(G__39352__a,0);
} 
return G__39351__delegate.call(this,x,y,z,args);};
G__39351.cljs$lang$maxFixedArity = 3;
G__39351.cljs$lang$applyTo = (function (arglist__39353){
var x = cljs.core.first(arglist__39353);
arglist__39353 = cljs.core.next(arglist__39353);
var y = cljs.core.first(arglist__39353);
arglist__39353 = cljs.core.next(arglist__39353);
var z = cljs.core.first(arglist__39353);
var args = cljs.core.rest(arglist__39353);
return G__39351__delegate(x,y,z,args);
});
G__39351.cljs$core$IFn$_invoke$arity$variadic = G__39351__delegate;
return G__39351;
})()
;
G__39350 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__39350__0.call(this);
case 1:
return G__39350__1.call(this,x);
case 2:
return G__39350__2.call(this,x,y);
case 3:
return G__39350__3.call(this,x,y,z);
default:
var G__39354 = null;
if (arguments.length > 3) {
var G__39355__i = 0, G__39355__a = new Array(arguments.length -  3);
while (G__39355__i < G__39355__a.length) {G__39355__a[G__39355__i] = arguments[G__39355__i + 3]; ++G__39355__i;}
G__39354 = new cljs.core.IndexedSeq(G__39355__a,0);
}
return G__39350__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__39354);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__39350.cljs$lang$maxFixedArity = 3;
G__39350.cljs$lang$applyTo = G__39350__4.cljs$lang$applyTo;
G__39350.cljs$core$IFn$_invoke$arity$0 = G__39350__0;
G__39350.cljs$core$IFn$_invoke$arity$1 = G__39350__1;
G__39350.cljs$core$IFn$_invoke$arity$2 = G__39350__2;
G__39350.cljs$core$IFn$_invoke$arity$3 = G__39350__3;
G__39350.cljs$core$IFn$_invoke$arity$variadic = G__39350__4.cljs$core$IFn$_invoke$arity$variadic;
return G__39350;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__39356 = null;
var G__39356__0 = (function (){
var G__39318 = arg1;
var G__39319 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__39318,G__39319) : f.call(null,G__39318,G__39319));
});
var G__39356__1 = (function (x){
var G__39320 = arg1;
var G__39321 = arg2;
var G__39322 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__39320,G__39321,G__39322) : f.call(null,G__39320,G__39321,G__39322));
});
var G__39356__2 = (function (x,y){
var G__39323 = arg1;
var G__39324 = arg2;
var G__39325 = x;
var G__39326 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__39323,G__39324,G__39325,G__39326) : f.call(null,G__39323,G__39324,G__39325,G__39326));
});
var G__39356__3 = (function (x,y,z){
var G__39327 = arg1;
var G__39328 = arg2;
var G__39329 = x;
var G__39330 = y;
var G__39331 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__39327,G__39328,G__39329,G__39330,G__39331) : f.call(null,G__39327,G__39328,G__39329,G__39330,G__39331));
});
var G__39356__4 = (function() { 
var G__39357__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__39357 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__39358__i = 0, G__39358__a = new Array(arguments.length -  3);
while (G__39358__i < G__39358__a.length) {G__39358__a[G__39358__i] = arguments[G__39358__i + 3]; ++G__39358__i;}
  args = new cljs.core.IndexedSeq(G__39358__a,0);
} 
return G__39357__delegate.call(this,x,y,z,args);};
G__39357.cljs$lang$maxFixedArity = 3;
G__39357.cljs$lang$applyTo = (function (arglist__39359){
var x = cljs.core.first(arglist__39359);
arglist__39359 = cljs.core.next(arglist__39359);
var y = cljs.core.first(arglist__39359);
arglist__39359 = cljs.core.next(arglist__39359);
var z = cljs.core.first(arglist__39359);
var args = cljs.core.rest(arglist__39359);
return G__39357__delegate(x,y,z,args);
});
G__39357.cljs$core$IFn$_invoke$arity$variadic = G__39357__delegate;
return G__39357;
})()
;
G__39356 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__39356__0.call(this);
case 1:
return G__39356__1.call(this,x);
case 2:
return G__39356__2.call(this,x,y);
case 3:
return G__39356__3.call(this,x,y,z);
default:
var G__39360 = null;
if (arguments.length > 3) {
var G__39361__i = 0, G__39361__a = new Array(arguments.length -  3);
while (G__39361__i < G__39361__a.length) {G__39361__a[G__39361__i] = arguments[G__39361__i + 3]; ++G__39361__i;}
G__39360 = new cljs.core.IndexedSeq(G__39361__a,0);
}
return G__39356__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__39360);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__39356.cljs$lang$maxFixedArity = 3;
G__39356.cljs$lang$applyTo = G__39356__4.cljs$lang$applyTo;
G__39356.cljs$core$IFn$_invoke$arity$0 = G__39356__0;
G__39356.cljs$core$IFn$_invoke$arity$1 = G__39356__1;
G__39356.cljs$core$IFn$_invoke$arity$2 = G__39356__2;
G__39356.cljs$core$IFn$_invoke$arity$3 = G__39356__3;
G__39356.cljs$core$IFn$_invoke$arity$variadic = G__39356__4.cljs$core$IFn$_invoke$arity$variadic;
return G__39356;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__39362 = null;
var G__39362__0 = (function (){
var G__39332 = arg1;
var G__39333 = arg2;
var G__39334 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__39332,G__39333,G__39334) : f.call(null,G__39332,G__39333,G__39334));
});
var G__39362__1 = (function (x){
var G__39335 = arg1;
var G__39336 = arg2;
var G__39337 = arg3;
var G__39338 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__39335,G__39336,G__39337,G__39338) : f.call(null,G__39335,G__39336,G__39337,G__39338));
});
var G__39362__2 = (function (x,y){
var G__39339 = arg1;
var G__39340 = arg2;
var G__39341 = arg3;
var G__39342 = x;
var G__39343 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__39339,G__39340,G__39341,G__39342,G__39343) : f.call(null,G__39339,G__39340,G__39341,G__39342,G__39343));
});
var G__39362__3 = (function (x,y,z){
var G__39344 = arg1;
var G__39345 = arg2;
var G__39346 = arg3;
var G__39347 = x;
var G__39348 = y;
var G__39349 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__39344,G__39345,G__39346,G__39347,G__39348,G__39349) : f.call(null,G__39344,G__39345,G__39346,G__39347,G__39348,G__39349));
});
var G__39362__4 = (function() { 
var G__39363__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__39363 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__39364__i = 0, G__39364__a = new Array(arguments.length -  3);
while (G__39364__i < G__39364__a.length) {G__39364__a[G__39364__i] = arguments[G__39364__i + 3]; ++G__39364__i;}
  args = new cljs.core.IndexedSeq(G__39364__a,0);
} 
return G__39363__delegate.call(this,x,y,z,args);};
G__39363.cljs$lang$maxFixedArity = 3;
G__39363.cljs$lang$applyTo = (function (arglist__39365){
var x = cljs.core.first(arglist__39365);
arglist__39365 = cljs.core.next(arglist__39365);
var y = cljs.core.first(arglist__39365);
arglist__39365 = cljs.core.next(arglist__39365);
var z = cljs.core.first(arglist__39365);
var args = cljs.core.rest(arglist__39365);
return G__39363__delegate(x,y,z,args);
});
G__39363.cljs$core$IFn$_invoke$arity$variadic = G__39363__delegate;
return G__39363;
})()
;
G__39362 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__39362__0.call(this);
case 1:
return G__39362__1.call(this,x);
case 2:
return G__39362__2.call(this,x,y);
case 3:
return G__39362__3.call(this,x,y,z);
default:
var G__39366 = null;
if (arguments.length > 3) {
var G__39367__i = 0, G__39367__a = new Array(arguments.length -  3);
while (G__39367__i < G__39367__a.length) {G__39367__a[G__39367__i] = arguments[G__39367__i + 3]; ++G__39367__i;}
G__39366 = new cljs.core.IndexedSeq(G__39367__a,0);
}
return G__39362__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__39366);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__39362.cljs$lang$maxFixedArity = 3;
G__39362.cljs$lang$applyTo = G__39362__4.cljs$lang$applyTo;
G__39362.cljs$core$IFn$_invoke$arity$0 = G__39362__0;
G__39362.cljs$core$IFn$_invoke$arity$1 = G__39362__1;
G__39362.cljs$core$IFn$_invoke$arity$2 = G__39362__2;
G__39362.cljs$core$IFn$_invoke$arity$3 = G__39362__3;
G__39362.cljs$core$IFn$_invoke$arity$variadic = G__39362__4.cljs$core$IFn$_invoke$arity$variadic;
return G__39362;
})()
});
var partial__5 = (function() { 
var G__39368__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__39369__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__39369 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__39370__i = 0, G__39370__a = new Array(arguments.length -  0);
while (G__39370__i < G__39370__a.length) {G__39370__a[G__39370__i] = arguments[G__39370__i + 0]; ++G__39370__i;}
  args = new cljs.core.IndexedSeq(G__39370__a,0);
} 
return G__39369__delegate.call(this,args);};
G__39369.cljs$lang$maxFixedArity = 0;
G__39369.cljs$lang$applyTo = (function (arglist__39371){
var args = cljs.core.seq(arglist__39371);
return G__39369__delegate(args);
});
G__39369.cljs$core$IFn$_invoke$arity$variadic = G__39369__delegate;
return G__39369;
})()
;
};
var G__39368 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__39372__i = 0, G__39372__a = new Array(arguments.length -  4);
while (G__39372__i < G__39372__a.length) {G__39372__a[G__39372__i] = arguments[G__39372__i + 4]; ++G__39372__i;}
  more = new cljs.core.IndexedSeq(G__39372__a,0);
} 
return G__39368__delegate.call(this,f,arg1,arg2,arg3,more);};
G__39368.cljs$lang$maxFixedArity = 4;
G__39368.cljs$lang$applyTo = (function (arglist__39373){
var f = cljs.core.first(arglist__39373);
arglist__39373 = cljs.core.next(arglist__39373);
var arg1 = cljs.core.first(arglist__39373);
arglist__39373 = cljs.core.next(arglist__39373);
var arg2 = cljs.core.first(arglist__39373);
arglist__39373 = cljs.core.next(arglist__39373);
var arg3 = cljs.core.first(arglist__39373);
var more = cljs.core.rest(arglist__39373);
return G__39368__delegate(f,arg1,arg2,arg3,more);
});
G__39368.cljs$core$IFn$_invoke$arity$variadic = G__39368__delegate;
return G__39368;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__39374 = null;
if (arguments.length > 4) {
var G__39375__i = 0, G__39375__a = new Array(arguments.length -  4);
while (G__39375__i < G__39375__a.length) {G__39375__a[G__39375__i] = arguments[G__39375__i + 4]; ++G__39375__i;}
G__39374 = new cljs.core.IndexedSeq(G__39375__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__39374);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__39408 = null;
var G__39408__1 = (function (a){
var G__39392 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__39392) : f.call(null,G__39392));
});
var G__39408__2 = (function (a,b){
var G__39393 = (((a == null))?x:a);
var G__39394 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__39393,G__39394) : f.call(null,G__39393,G__39394));
});
var G__39408__3 = (function (a,b,c){
var G__39395 = (((a == null))?x:a);
var G__39396 = b;
var G__39397 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__39395,G__39396,G__39397) : f.call(null,G__39395,G__39396,G__39397));
});
var G__39408__4 = (function() { 
var G__39409__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__39409 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__39410__i = 0, G__39410__a = new Array(arguments.length -  3);
while (G__39410__i < G__39410__a.length) {G__39410__a[G__39410__i] = arguments[G__39410__i + 3]; ++G__39410__i;}
  ds = new cljs.core.IndexedSeq(G__39410__a,0);
} 
return G__39409__delegate.call(this,a,b,c,ds);};
G__39409.cljs$lang$maxFixedArity = 3;
G__39409.cljs$lang$applyTo = (function (arglist__39411){
var a = cljs.core.first(arglist__39411);
arglist__39411 = cljs.core.next(arglist__39411);
var b = cljs.core.first(arglist__39411);
arglist__39411 = cljs.core.next(arglist__39411);
var c = cljs.core.first(arglist__39411);
var ds = cljs.core.rest(arglist__39411);
return G__39409__delegate(a,b,c,ds);
});
G__39409.cljs$core$IFn$_invoke$arity$variadic = G__39409__delegate;
return G__39409;
})()
;
G__39408 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__39408__1.call(this,a);
case 2:
return G__39408__2.call(this,a,b);
case 3:
return G__39408__3.call(this,a,b,c);
default:
var G__39412 = null;
if (arguments.length > 3) {
var G__39413__i = 0, G__39413__a = new Array(arguments.length -  3);
while (G__39413__i < G__39413__a.length) {G__39413__a[G__39413__i] = arguments[G__39413__i + 3]; ++G__39413__i;}
G__39412 = new cljs.core.IndexedSeq(G__39413__a,0);
}
return G__39408__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__39412);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__39408.cljs$lang$maxFixedArity = 3;
G__39408.cljs$lang$applyTo = G__39408__4.cljs$lang$applyTo;
G__39408.cljs$core$IFn$_invoke$arity$1 = G__39408__1;
G__39408.cljs$core$IFn$_invoke$arity$2 = G__39408__2;
G__39408.cljs$core$IFn$_invoke$arity$3 = G__39408__3;
G__39408.cljs$core$IFn$_invoke$arity$variadic = G__39408__4.cljs$core$IFn$_invoke$arity$variadic;
return G__39408;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__39414 = null;
var G__39414__2 = (function (a,b){
var G__39398 = (((a == null))?x:a);
var G__39399 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__39398,G__39399) : f.call(null,G__39398,G__39399));
});
var G__39414__3 = (function (a,b,c){
var G__39400 = (((a == null))?x:a);
var G__39401 = (((b == null))?y:b);
var G__39402 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__39400,G__39401,G__39402) : f.call(null,G__39400,G__39401,G__39402));
});
var G__39414__4 = (function() { 
var G__39415__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__39415 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__39416__i = 0, G__39416__a = new Array(arguments.length -  3);
while (G__39416__i < G__39416__a.length) {G__39416__a[G__39416__i] = arguments[G__39416__i + 3]; ++G__39416__i;}
  ds = new cljs.core.IndexedSeq(G__39416__a,0);
} 
return G__39415__delegate.call(this,a,b,c,ds);};
G__39415.cljs$lang$maxFixedArity = 3;
G__39415.cljs$lang$applyTo = (function (arglist__39417){
var a = cljs.core.first(arglist__39417);
arglist__39417 = cljs.core.next(arglist__39417);
var b = cljs.core.first(arglist__39417);
arglist__39417 = cljs.core.next(arglist__39417);
var c = cljs.core.first(arglist__39417);
var ds = cljs.core.rest(arglist__39417);
return G__39415__delegate(a,b,c,ds);
});
G__39415.cljs$core$IFn$_invoke$arity$variadic = G__39415__delegate;
return G__39415;
})()
;
G__39414 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__39414__2.call(this,a,b);
case 3:
return G__39414__3.call(this,a,b,c);
default:
var G__39418 = null;
if (arguments.length > 3) {
var G__39419__i = 0, G__39419__a = new Array(arguments.length -  3);
while (G__39419__i < G__39419__a.length) {G__39419__a[G__39419__i] = arguments[G__39419__i + 3]; ++G__39419__i;}
G__39418 = new cljs.core.IndexedSeq(G__39419__a,0);
}
return G__39414__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__39418);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__39414.cljs$lang$maxFixedArity = 3;
G__39414.cljs$lang$applyTo = G__39414__4.cljs$lang$applyTo;
G__39414.cljs$core$IFn$_invoke$arity$2 = G__39414__2;
G__39414.cljs$core$IFn$_invoke$arity$3 = G__39414__3;
G__39414.cljs$core$IFn$_invoke$arity$variadic = G__39414__4.cljs$core$IFn$_invoke$arity$variadic;
return G__39414;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__39420 = null;
var G__39420__2 = (function (a,b){
var G__39403 = (((a == null))?x:a);
var G__39404 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__39403,G__39404) : f.call(null,G__39403,G__39404));
});
var G__39420__3 = (function (a,b,c){
var G__39405 = (((a == null))?x:a);
var G__39406 = (((b == null))?y:b);
var G__39407 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__39405,G__39406,G__39407) : f.call(null,G__39405,G__39406,G__39407));
});
var G__39420__4 = (function() { 
var G__39421__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__39421 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__39422__i = 0, G__39422__a = new Array(arguments.length -  3);
while (G__39422__i < G__39422__a.length) {G__39422__a[G__39422__i] = arguments[G__39422__i + 3]; ++G__39422__i;}
  ds = new cljs.core.IndexedSeq(G__39422__a,0);
} 
return G__39421__delegate.call(this,a,b,c,ds);};
G__39421.cljs$lang$maxFixedArity = 3;
G__39421.cljs$lang$applyTo = (function (arglist__39423){
var a = cljs.core.first(arglist__39423);
arglist__39423 = cljs.core.next(arglist__39423);
var b = cljs.core.first(arglist__39423);
arglist__39423 = cljs.core.next(arglist__39423);
var c = cljs.core.first(arglist__39423);
var ds = cljs.core.rest(arglist__39423);
return G__39421__delegate(a,b,c,ds);
});
G__39421.cljs$core$IFn$_invoke$arity$variadic = G__39421__delegate;
return G__39421;
})()
;
G__39420 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__39420__2.call(this,a,b);
case 3:
return G__39420__3.call(this,a,b,c);
default:
var G__39424 = null;
if (arguments.length > 3) {
var G__39425__i = 0, G__39425__a = new Array(arguments.length -  3);
while (G__39425__i < G__39425__a.length) {G__39425__a[G__39425__i] = arguments[G__39425__i + 3]; ++G__39425__i;}
G__39424 = new cljs.core.IndexedSeq(G__39425__a,0);
}
return G__39420__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__39424);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__39420.cljs$lang$maxFixedArity = 3;
G__39420.cljs$lang$applyTo = G__39420__4.cljs$lang$applyTo;
G__39420.cljs$core$IFn$_invoke$arity$2 = G__39420__2;
G__39420.cljs$core$IFn$_invoke$arity$3 = G__39420__3;
G__39420.cljs$core$IFn$_invoke$arity$variadic = G__39420__4.cljs$core$IFn$_invoke$arity$variadic;
return G__39420;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__39456 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__39456) : cljs.core.volatile_BANG_.call(null,G__39456));
})();
return ((function (i){
return (function() {
var G__39486 = null;
var G__39486__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__39486__1 = (function (result){
var G__39457 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__39457) : rf.call(null,G__39457));
});
var G__39486__2 = (function (result,input){
var G__39458 = result;
var G__39459 = (function (){var G__39460 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__39461 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__39460,G__39461) : f.call(null,G__39460,G__39461));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__39458,G__39459) : rf.call(null,G__39458,G__39459));
});
G__39486 = function(result,input){
switch(arguments.length){
case 0:
return G__39486__0.call(this);
case 1:
return G__39486__1.call(this,result);
case 2:
return G__39486__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__39486.cljs$core$IFn$_invoke$arity$0 = G__39486__0;
G__39486.cljs$core$IFn$_invoke$arity$1 = G__39486__1;
G__39486.cljs$core$IFn$_invoke$arity$2 = G__39486__2;
return G__39486;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__18564__auto___39487 = size;
var i_39488 = (0);
while(true){
if((i_39488 < n__18564__auto___39487)){
cljs.core.chunk_append(b,(function (){var G__39482 = (idx + i_39488);
var G__39483 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_39488);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__39482,G__39483) : f.call(null,G__39482,G__39483));
})());

var G__39489 = (i_39488 + (1));
i_39488 = G__39489;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__39484 = idx;
var G__39485 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__39484,G__39485) : f.call(null,G__39484,G__39485));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__39508 = null;
var G__39508__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__39508__1 = (function (result){
var G__39502 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__39502) : rf.call(null,G__39502));
});
var G__39508__2 = (function (result,input){
var v = (function (){var G__39503 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__39503) : f.call(null,G__39503));
})();
if((v == null)){
return result;
} else {
var G__39504 = result;
var G__39505 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__39504,G__39505) : rf.call(null,G__39504,G__39505));
}
});
G__39508 = function(result,input){
switch(arguments.length){
case 0:
return G__39508__0.call(this);
case 1:
return G__39508__1.call(this,result);
case 2:
return G__39508__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__39508.cljs$core$IFn$_invoke$arity$0 = G__39508__0;
G__39508.cljs$core$IFn$_invoke$arity$1 = G__39508__1;
G__39508.cljs$core$IFn$_invoke$arity$2 = G__39508__2;
return G__39508;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__18564__auto___39509 = size;
var i_39510 = (0);
while(true){
if((i_39510 < n__18564__auto___39509)){
var x_39511 = (function (){var G__39506 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_39510);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__39506) : f.call(null,G__39506));
})();
if((x_39511 == null)){
} else {
cljs.core.chunk_append(b,x_39511);
}

var G__39512 = (i_39510 + (1));
i_39510 = G__39512;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__39507 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__39507) : f.call(null,G__39507));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__39513 = this$__$1;
return goog.getUid(G__39513);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__39514 = cljs.core.seq(self__.watches);
var chunk__39515 = null;
var count__39516 = (0);
var i__39517 = (0);
while(true){
if((i__39517 < count__39516)){
var vec__39518 = chunk__39515.cljs$core$IIndexed$_nth$arity$2(null,i__39517);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__39518,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__39518,(1),null);
var G__39519_39528 = key;
var G__39520_39529 = this$__$1;
var G__39521_39530 = oldval;
var G__39522_39531 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__39519_39528,G__39520_39529,G__39521_39530,G__39522_39531) : f.call(null,G__39519_39528,G__39520_39529,G__39521_39530,G__39522_39531));

var G__39532 = seq__39514;
var G__39533 = chunk__39515;
var G__39534 = count__39516;
var G__39535 = (i__39517 + (1));
seq__39514 = G__39532;
chunk__39515 = G__39533;
count__39516 = G__39534;
i__39517 = G__39535;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__39514);
if(temp__4126__auto__){
var seq__39514__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__39514__$1)){
var c__18464__auto__ = cljs.core.chunk_first(seq__39514__$1);
var G__39536 = cljs.core.chunk_rest(seq__39514__$1);
var G__39537 = c__18464__auto__;
var G__39538 = cljs.core.count(c__18464__auto__);
var G__39539 = (0);
seq__39514 = G__39536;
chunk__39515 = G__39537;
count__39516 = G__39538;
i__39517 = G__39539;
continue;
} else {
var vec__39523 = cljs.core.first(seq__39514__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__39523,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__39523,(1),null);
var G__39524_39540 = key;
var G__39525_39541 = this$__$1;
var G__39526_39542 = oldval;
var G__39527_39543 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__39524_39540,G__39525_39541,G__39526_39542,G__39527_39543) : f.call(null,G__39524_39540,G__39525_39541,G__39526_39542,G__39527_39543));

var G__39544 = cljs.core.next(seq__39514__$1);
var G__39545 = null;
var G__39546 = (0);
var G__39547 = (0);
seq__39514 = G__39544;
chunk__39515 = G__39545;
count__39516 = G__39546;
i__39517 = G__39547;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__18264__auto__,writer__18265__auto__,opt__18266__auto__){
return cljs.core._write(writer__18265__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__39551__delegate = function (x,p__39548){
var map__39550 = p__39548;
var map__39550__$1 = ((cljs.core.seq_QMARK_(map__39550))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__39550):map__39550);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__39550__$1,cljs.core.constant$keyword$51);
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__39550__$1,cljs.core.constant$keyword$46);
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__39551 = function (x,var_args){
var p__39548 = null;
if (arguments.length > 1) {
var G__39552__i = 0, G__39552__a = new Array(arguments.length -  1);
while (G__39552__i < G__39552__a.length) {G__39552__a[G__39552__i] = arguments[G__39552__i + 1]; ++G__39552__i;}
  p__39548 = new cljs.core.IndexedSeq(G__39552__a,0);
} 
return G__39551__delegate.call(this,x,p__39548);};
G__39551.cljs$lang$maxFixedArity = 1;
G__39551.cljs$lang$applyTo = (function (arglist__39553){
var x = cljs.core.first(arglist__39553);
var p__39548 = cljs.core.rest(arglist__39553);
return G__39551__delegate(x,p__39548);
});
G__39551.cljs$core$IFn$_invoke$arity$variadic = G__39551__delegate;
return G__39551;
})()
;
atom = function(x,var_args){
var p__39548 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__39554 = null;
if (arguments.length > 1) {
var G__39555__i = 0, G__39555__a = new Array(arguments.length -  1);
while (G__39555__i < G__39555__a.length) {G__39555__a[G__39555__i] = arguments[G__39555__i + 1]; ++G__39555__i;}
G__39554 = new cljs.core.IndexedSeq(G__39555__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__39554);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__39558 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__39558) : validate.call(null,G__39558));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__39559 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__39559) : cljs.core.pr_str.call(null,G__39559));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__39566 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__39566) : f.call(null,G__39566));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__39567 = a.state;
var G__39568 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__39567,G__39568) : f.call(null,G__39567,G__39568));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__39569 = a.state;
var G__39570 = x;
var G__39571 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__39569,G__39570,G__39571) : f.call(null,G__39569,G__39570,G__39571));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__39572__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__39572 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__39573__i = 0, G__39573__a = new Array(arguments.length -  4);
while (G__39573__i < G__39573__a.length) {G__39573__a[G__39573__i] = arguments[G__39573__i + 4]; ++G__39573__i;}
  more = new cljs.core.IndexedSeq(G__39573__a,0);
} 
return G__39572__delegate.call(this,a,f,x,y,more);};
G__39572.cljs$lang$maxFixedArity = 4;
G__39572.cljs$lang$applyTo = (function (arglist__39574){
var a = cljs.core.first(arglist__39574);
arglist__39574 = cljs.core.next(arglist__39574);
var f = cljs.core.first(arglist__39574);
arglist__39574 = cljs.core.next(arglist__39574);
var x = cljs.core.first(arglist__39574);
arglist__39574 = cljs.core.next(arglist__39574);
var y = cljs.core.first(arglist__39574);
var more = cljs.core.rest(arglist__39574);
return G__39572__delegate(a,f,x,y,more);
});
G__39572.cljs$core$IFn$_invoke$arity$variadic = G__39572__delegate;
return G__39572;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__39575 = null;
if (arguments.length > 4) {
var G__39576__i = 0, G__39576__a = new Array(arguments.length -  4);
while (G__39576__i < G__39576__a.length) {G__39576__a[G__39576__i] = arguments[G__39576__i + 4]; ++G__39576__i;}
G__39575 = new cljs.core.IndexedSeq(G__39576__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__39575);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__18264__auto__,writer__18265__auto__,opt__18266__auto__){
return cljs.core._write(writer__18265__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__39643 = null;
var G__39643__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__39643__1 = (function (result){
var G__39610 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__39610) : rf.call(null,G__39610));
});
var G__39643__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__39611 = i;
var G__39612 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__39611,G__39612) : f.call(null,G__39611,G__39612));
})();
if((v == null)){
return result;
} else {
var G__39613 = result;
var G__39614 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__39613,G__39614) : rf.call(null,G__39613,G__39614));
}
});
G__39643 = function(result,input){
switch(arguments.length){
case 0:
return G__39643__0.call(this);
case 1:
return G__39643__1.call(this,result);
case 2:
return G__39643__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__39643.cljs$core$IFn$_invoke$arity$0 = G__39643__0;
G__39643.cljs$core$IFn$_invoke$arity$1 = G__39643__1;
G__39643.cljs$core$IFn$_invoke$arity$2 = G__39643__2;
return G__39643;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__18564__auto___39644 = size;
var i_39645 = (0);
while(true){
if((i_39645 < n__18564__auto___39644)){
var x_39646 = (function (){var G__39639 = (idx + i_39645);
var G__39640 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_39645);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__39639,G__39640) : f.call(null,G__39639,G__39640));
})();
if((x_39646 == null)){
} else {
cljs.core.chunk_append(b,x_39646);
}

var G__39647 = (i_39645 + (1));
i_39645 = G__39647;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__39641 = idx;
var G__39642 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__39641,G__39642) : f.call(null,G__39641,G__39642));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__39861 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__39861) : p.call(null,G__39861));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__17665__auto__ = (function (){var G__39863 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__39863) : p.call(null,G__39863));
})();
if(cljs.core.truth_(and__17665__auto__)){
var G__39864 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__39864) : p.call(null,G__39864));
} else {
return and__17665__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__17665__auto__ = (function (){var G__39866 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__39866) : p.call(null,G__39866));
})();
if(cljs.core.truth_(and__17665__auto__)){
var and__17665__auto____$1 = (function (){var G__39868 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__39868) : p.call(null,G__39868));
})();
if(cljs.core.truth_(and__17665__auto____$1)){
var G__39869 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__39869) : p.call(null,G__39869));
} else {
return and__17665__auto____$1;
}
} else {
return and__17665__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__40038__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__40038 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__40039__i = 0, G__40039__a = new Array(arguments.length -  3);
while (G__40039__i < G__40039__a.length) {G__40039__a[G__40039__i] = arguments[G__40039__i + 3]; ++G__40039__i;}
  args = new cljs.core.IndexedSeq(G__40039__a,0);
} 
return G__40038__delegate.call(this,x,y,z,args);};
G__40038.cljs$lang$maxFixedArity = 3;
G__40038.cljs$lang$applyTo = (function (arglist__40040){
var x = cljs.core.first(arglist__40040);
arglist__40040 = cljs.core.next(arglist__40040);
var y = cljs.core.first(arglist__40040);
arglist__40040 = cljs.core.next(arglist__40040);
var z = cljs.core.first(arglist__40040);
var args = cljs.core.rest(arglist__40040);
return G__40038__delegate(x,y,z,args);
});
G__40038.cljs$core$IFn$_invoke$arity$variadic = G__40038__delegate;
return G__40038;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__40041 = null;
if (arguments.length > 3) {
var G__40042__i = 0, G__40042__a = new Array(arguments.length -  3);
while (G__40042__i < G__40042__a.length) {G__40042__a[G__40042__i] = arguments[G__40042__i + 3]; ++G__40042__i;}
G__40041 = new cljs.core.IndexedSeq(G__40042__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__40041);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__17665__auto__ = (function (){var G__39901 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__39901) : p1.call(null,G__39901));
})();
if(cljs.core.truth_(and__17665__auto__)){
var G__39902 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__39902) : p2.call(null,G__39902));
} else {
return and__17665__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__17665__auto__ = (function (){var G__39904 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__39904) : p1.call(null,G__39904));
})();
if(cljs.core.truth_(and__17665__auto__)){
var and__17665__auto____$1 = (function (){var G__39906 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__39906) : p1.call(null,G__39906));
})();
if(cljs.core.truth_(and__17665__auto____$1)){
var and__17665__auto____$2 = (function (){var G__39908 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__39908) : p2.call(null,G__39908));
})();
if(cljs.core.truth_(and__17665__auto____$2)){
var G__39909 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__39909) : p2.call(null,G__39909));
} else {
return and__17665__auto____$2;
}
} else {
return and__17665__auto____$1;
}
} else {
return and__17665__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__17665__auto__ = (function (){var G__39911 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__39911) : p1.call(null,G__39911));
})();
if(cljs.core.truth_(and__17665__auto__)){
var and__17665__auto____$1 = (function (){var G__39913 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__39913) : p1.call(null,G__39913));
})();
if(cljs.core.truth_(and__17665__auto____$1)){
var and__17665__auto____$2 = (function (){var G__39915 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__39915) : p1.call(null,G__39915));
})();
if(cljs.core.truth_(and__17665__auto____$2)){
var and__17665__auto____$3 = (function (){var G__39917 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__39917) : p2.call(null,G__39917));
})();
if(cljs.core.truth_(and__17665__auto____$3)){
var and__17665__auto____$4 = (function (){var G__39919 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__39919) : p2.call(null,G__39919));
})();
if(cljs.core.truth_(and__17665__auto____$4)){
var G__39920 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__39920) : p2.call(null,G__39920));
} else {
return and__17665__auto____$4;
}
} else {
return and__17665__auto____$3;
}
} else {
return and__17665__auto____$2;
}
} else {
return and__17665__auto____$1;
}
} else {
return and__17665__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__40043__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__39648_SHARP_){
var and__17665__auto__ = (function (){var G__39925 = p1__39648_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__39925) : p1.call(null,G__39925));
})();
if(cljs.core.truth_(and__17665__auto__)){
var G__39926 = p1__39648_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__39926) : p2.call(null,G__39926));
} else {
return and__17665__auto__;
}
}),args)));
};
var G__40043 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__40044__i = 0, G__40044__a = new Array(arguments.length -  3);
while (G__40044__i < G__40044__a.length) {G__40044__a[G__40044__i] = arguments[G__40044__i + 3]; ++G__40044__i;}
  args = new cljs.core.IndexedSeq(G__40044__a,0);
} 
return G__40043__delegate.call(this,x,y,z,args);};
G__40043.cljs$lang$maxFixedArity = 3;
G__40043.cljs$lang$applyTo = (function (arglist__40045){
var x = cljs.core.first(arglist__40045);
arglist__40045 = cljs.core.next(arglist__40045);
var y = cljs.core.first(arglist__40045);
arglist__40045 = cljs.core.next(arglist__40045);
var z = cljs.core.first(arglist__40045);
var args = cljs.core.rest(arglist__40045);
return G__40043__delegate(x,y,z,args);
});
G__40043.cljs$core$IFn$_invoke$arity$variadic = G__40043__delegate;
return G__40043;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__40046 = null;
if (arguments.length > 3) {
var G__40047__i = 0, G__40047__a = new Array(arguments.length -  3);
while (G__40047__i < G__40047__a.length) {G__40047__a[G__40047__i] = arguments[G__40047__i + 3]; ++G__40047__i;}
G__40046 = new cljs.core.IndexedSeq(G__40047__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__40046);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__17665__auto__ = (function (){var G__39972 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__39972) : p1.call(null,G__39972));
})();
if(cljs.core.truth_(and__17665__auto__)){
var and__17665__auto____$1 = (function (){var G__39974 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__39974) : p2.call(null,G__39974));
})();
if(cljs.core.truth_(and__17665__auto____$1)){
var G__39975 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__39975) : p3.call(null,G__39975));
} else {
return and__17665__auto____$1;
}
} else {
return and__17665__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__17665__auto__ = (function (){var G__39977 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__39977) : p1.call(null,G__39977));
})();
if(cljs.core.truth_(and__17665__auto__)){
var and__17665__auto____$1 = (function (){var G__39979 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__39979) : p2.call(null,G__39979));
})();
if(cljs.core.truth_(and__17665__auto____$1)){
var and__17665__auto____$2 = (function (){var G__39981 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__39981) : p3.call(null,G__39981));
})();
if(cljs.core.truth_(and__17665__auto____$2)){
var and__17665__auto____$3 = (function (){var G__39983 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__39983) : p1.call(null,G__39983));
})();
if(cljs.core.truth_(and__17665__auto____$3)){
var and__17665__auto____$4 = (function (){var G__39985 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__39985) : p2.call(null,G__39985));
})();
if(cljs.core.truth_(and__17665__auto____$4)){
var G__39986 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__39986) : p3.call(null,G__39986));
} else {
return and__17665__auto____$4;
}
} else {
return and__17665__auto____$3;
}
} else {
return and__17665__auto____$2;
}
} else {
return and__17665__auto____$1;
}
} else {
return and__17665__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__17665__auto__ = (function (){var G__39988 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__39988) : p1.call(null,G__39988));
})();
if(cljs.core.truth_(and__17665__auto__)){
var and__17665__auto____$1 = (function (){var G__39990 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__39990) : p2.call(null,G__39990));
})();
if(cljs.core.truth_(and__17665__auto____$1)){
var and__17665__auto____$2 = (function (){var G__39992 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__39992) : p3.call(null,G__39992));
})();
if(cljs.core.truth_(and__17665__auto____$2)){
var and__17665__auto____$3 = (function (){var G__39994 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__39994) : p1.call(null,G__39994));
})();
if(cljs.core.truth_(and__17665__auto____$3)){
var and__17665__auto____$4 = (function (){var G__39996 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__39996) : p2.call(null,G__39996));
})();
if(cljs.core.truth_(and__17665__auto____$4)){
var and__17665__auto____$5 = (function (){var G__39998 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__39998) : p3.call(null,G__39998));
})();
if(cljs.core.truth_(and__17665__auto____$5)){
var and__17665__auto____$6 = (function (){var G__40000 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__40000) : p1.call(null,G__40000));
})();
if(cljs.core.truth_(and__17665__auto____$6)){
var and__17665__auto____$7 = (function (){var G__40002 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__40002) : p2.call(null,G__40002));
})();
if(cljs.core.truth_(and__17665__auto____$7)){
var G__40003 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__40003) : p3.call(null,G__40003));
} else {
return and__17665__auto____$7;
}
} else {
return and__17665__auto____$6;
}
} else {
return and__17665__auto____$5;
}
} else {
return and__17665__auto____$4;
}
} else {
return and__17665__auto____$3;
}
} else {
return and__17665__auto____$2;
}
} else {
return and__17665__auto____$1;
}
} else {
return and__17665__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__40048__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__39649_SHARP_){
var and__17665__auto__ = (function (){var G__40010 = p1__39649_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__40010) : p1.call(null,G__40010));
})();
if(cljs.core.truth_(and__17665__auto__)){
var and__17665__auto____$1 = (function (){var G__40012 = p1__39649_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__40012) : p2.call(null,G__40012));
})();
if(cljs.core.truth_(and__17665__auto____$1)){
var G__40013 = p1__39649_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__40013) : p3.call(null,G__40013));
} else {
return and__17665__auto____$1;
}
} else {
return and__17665__auto__;
}
}),args)));
};
var G__40048 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__40049__i = 0, G__40049__a = new Array(arguments.length -  3);
while (G__40049__i < G__40049__a.length) {G__40049__a[G__40049__i] = arguments[G__40049__i + 3]; ++G__40049__i;}
  args = new cljs.core.IndexedSeq(G__40049__a,0);
} 
return G__40048__delegate.call(this,x,y,z,args);};
G__40048.cljs$lang$maxFixedArity = 3;
G__40048.cljs$lang$applyTo = (function (arglist__40050){
var x = cljs.core.first(arglist__40050);
arglist__40050 = cljs.core.next(arglist__40050);
var y = cljs.core.first(arglist__40050);
arglist__40050 = cljs.core.next(arglist__40050);
var z = cljs.core.first(arglist__40050);
var args = cljs.core.rest(arglist__40050);
return G__40048__delegate(x,y,z,args);
});
G__40048.cljs$core$IFn$_invoke$arity$variadic = G__40048__delegate;
return G__40048;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__40051 = null;
if (arguments.length > 3) {
var G__40052__i = 0, G__40052__a = new Array(arguments.length -  3);
while (G__40052__i < G__40052__a.length) {G__40052__a[G__40052__i] = arguments[G__40052__i + 3]; ++G__40052__i;}
G__40051 = new cljs.core.IndexedSeq(G__40052__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__40051);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__40053__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__39650_SHARP_){
var G__40029 = x;
return (p1__39650_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__39650_SHARP_.cljs$core$IFn$_invoke$arity$1(G__40029) : p1__39650_SHARP_.call(null,G__40029));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__39651_SHARP_){
var and__17665__auto__ = (function (){var G__40031 = x;
return (p1__39651_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__39651_SHARP_.cljs$core$IFn$_invoke$arity$1(G__40031) : p1__39651_SHARP_.call(null,G__40031));
})();
if(cljs.core.truth_(and__17665__auto__)){
var G__40032 = y;
return (p1__39651_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__39651_SHARP_.cljs$core$IFn$_invoke$arity$1(G__40032) : p1__39651_SHARP_.call(null,G__40032));
} else {
return and__17665__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__39652_SHARP_){
var and__17665__auto__ = (function (){var G__40034 = x;
return (p1__39652_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__39652_SHARP_.cljs$core$IFn$_invoke$arity$1(G__40034) : p1__39652_SHARP_.call(null,G__40034));
})();
if(cljs.core.truth_(and__17665__auto__)){
var and__17665__auto____$1 = (function (){var G__40036 = y;
return (p1__39652_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__39652_SHARP_.cljs$core$IFn$_invoke$arity$1(G__40036) : p1__39652_SHARP_.call(null,G__40036));
})();
if(cljs.core.truth_(and__17665__auto____$1)){
var G__40037 = z;
return (p1__39652_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__39652_SHARP_.cljs$core$IFn$_invoke$arity$1(G__40037) : p1__39652_SHARP_.call(null,G__40037));
} else {
return and__17665__auto____$1;
}
} else {
return and__17665__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__40054__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__39653_SHARP_){
return cljs.core.every_QMARK_(p1__39653_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__40054 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__40055__i = 0, G__40055__a = new Array(arguments.length -  3);
while (G__40055__i < G__40055__a.length) {G__40055__a[G__40055__i] = arguments[G__40055__i + 3]; ++G__40055__i;}
  args = new cljs.core.IndexedSeq(G__40055__a,0);
} 
return G__40054__delegate.call(this,x,y,z,args);};
G__40054.cljs$lang$maxFixedArity = 3;
G__40054.cljs$lang$applyTo = (function (arglist__40056){
var x = cljs.core.first(arglist__40056);
arglist__40056 = cljs.core.next(arglist__40056);
var y = cljs.core.first(arglist__40056);
arglist__40056 = cljs.core.next(arglist__40056);
var z = cljs.core.first(arglist__40056);
var args = cljs.core.rest(arglist__40056);
return G__40054__delegate(x,y,z,args);
});
G__40054.cljs$core$IFn$_invoke$arity$variadic = G__40054__delegate;
return G__40054;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__40057 = null;
if (arguments.length > 3) {
var G__40058__i = 0, G__40058__a = new Array(arguments.length -  3);
while (G__40058__i < G__40058__a.length) {G__40058__a[G__40058__i] = arguments[G__40058__i + 3]; ++G__40058__i;}
G__40057 = new cljs.core.IndexedSeq(G__40058__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__40057);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__40053 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__40059__i = 0, G__40059__a = new Array(arguments.length -  3);
while (G__40059__i < G__40059__a.length) {G__40059__a[G__40059__i] = arguments[G__40059__i + 3]; ++G__40059__i;}
  ps = new cljs.core.IndexedSeq(G__40059__a,0);
} 
return G__40053__delegate.call(this,p1,p2,p3,ps);};
G__40053.cljs$lang$maxFixedArity = 3;
G__40053.cljs$lang$applyTo = (function (arglist__40060){
var p1 = cljs.core.first(arglist__40060);
arglist__40060 = cljs.core.next(arglist__40060);
var p2 = cljs.core.first(arglist__40060);
arglist__40060 = cljs.core.next(arglist__40060);
var p3 = cljs.core.first(arglist__40060);
var ps = cljs.core.rest(arglist__40060);
return G__40053__delegate(p1,p2,p3,ps);
});
G__40053.cljs$core$IFn$_invoke$arity$variadic = G__40053__delegate;
return G__40053;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__40061 = null;
if (arguments.length > 3) {
var G__40062__i = 0, G__40062__a = new Array(arguments.length -  3);
while (G__40062__i < G__40062__a.length) {G__40062__a[G__40062__i] = arguments[G__40062__i + 3]; ++G__40062__i;}
G__40061 = new cljs.core.IndexedSeq(G__40062__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__40061);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__40268 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__40268) : p.call(null,G__40268));
});
var sp1__2 = (function (x,y){
var or__17677__auto__ = (function (){var G__40270 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__40270) : p.call(null,G__40270));
})();
if(cljs.core.truth_(or__17677__auto__)){
return or__17677__auto__;
} else {
var G__40271 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__40271) : p.call(null,G__40271));
}
});
var sp1__3 = (function (x,y,z){
var or__17677__auto__ = (function (){var G__40273 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__40273) : p.call(null,G__40273));
})();
if(cljs.core.truth_(or__17677__auto__)){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (function (){var G__40275 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__40275) : p.call(null,G__40275));
})();
if(cljs.core.truth_(or__17677__auto____$1)){
return or__17677__auto____$1;
} else {
var G__40276 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__40276) : p.call(null,G__40276));
}
}
});
var sp1__4 = (function() { 
var G__40437__delegate = function (x,y,z,args){
var or__17677__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__17677__auto__)){
return or__17677__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__40437 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__40438__i = 0, G__40438__a = new Array(arguments.length -  3);
while (G__40438__i < G__40438__a.length) {G__40438__a[G__40438__i] = arguments[G__40438__i + 3]; ++G__40438__i;}
  args = new cljs.core.IndexedSeq(G__40438__a,0);
} 
return G__40437__delegate.call(this,x,y,z,args);};
G__40437.cljs$lang$maxFixedArity = 3;
G__40437.cljs$lang$applyTo = (function (arglist__40439){
var x = cljs.core.first(arglist__40439);
arglist__40439 = cljs.core.next(arglist__40439);
var y = cljs.core.first(arglist__40439);
arglist__40439 = cljs.core.next(arglist__40439);
var z = cljs.core.first(arglist__40439);
var args = cljs.core.rest(arglist__40439);
return G__40437__delegate(x,y,z,args);
});
G__40437.cljs$core$IFn$_invoke$arity$variadic = G__40437__delegate;
return G__40437;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__40440 = null;
if (arguments.length > 3) {
var G__40441__i = 0, G__40441__a = new Array(arguments.length -  3);
while (G__40441__i < G__40441__a.length) {G__40441__a[G__40441__i] = arguments[G__40441__i + 3]; ++G__40441__i;}
G__40440 = new cljs.core.IndexedSeq(G__40441__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__40440);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__17677__auto__ = (function (){var G__40308 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__40308) : p1.call(null,G__40308));
})();
if(cljs.core.truth_(or__17677__auto__)){
return or__17677__auto__;
} else {
var G__40309 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__40309) : p2.call(null,G__40309));
}
});
var sp2__2 = (function (x,y){
var or__17677__auto__ = (function (){var G__40311 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__40311) : p1.call(null,G__40311));
})();
if(cljs.core.truth_(or__17677__auto__)){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (function (){var G__40313 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__40313) : p1.call(null,G__40313));
})();
if(cljs.core.truth_(or__17677__auto____$1)){
return or__17677__auto____$1;
} else {
var or__17677__auto____$2 = (function (){var G__40315 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__40315) : p2.call(null,G__40315));
})();
if(cljs.core.truth_(or__17677__auto____$2)){
return or__17677__auto____$2;
} else {
var G__40316 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__40316) : p2.call(null,G__40316));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__17677__auto__ = (function (){var G__40318 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__40318) : p1.call(null,G__40318));
})();
if(cljs.core.truth_(or__17677__auto__)){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (function (){var G__40320 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__40320) : p1.call(null,G__40320));
})();
if(cljs.core.truth_(or__17677__auto____$1)){
return or__17677__auto____$1;
} else {
var or__17677__auto____$2 = (function (){var G__40322 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__40322) : p1.call(null,G__40322));
})();
if(cljs.core.truth_(or__17677__auto____$2)){
return or__17677__auto____$2;
} else {
var or__17677__auto____$3 = (function (){var G__40324 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__40324) : p2.call(null,G__40324));
})();
if(cljs.core.truth_(or__17677__auto____$3)){
return or__17677__auto____$3;
} else {
var or__17677__auto____$4 = (function (){var G__40326 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__40326) : p2.call(null,G__40326));
})();
if(cljs.core.truth_(or__17677__auto____$4)){
return or__17677__auto____$4;
} else {
var G__40327 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__40327) : p2.call(null,G__40327));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__40442__delegate = function (x,y,z,args){
var or__17677__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__17677__auto__)){
return or__17677__auto__;
} else {
return cljs.core.some(((function (or__17677__auto__){
return (function (p1__40063_SHARP_){
var or__17677__auto____$1 = (function (){var G__40329 = p1__40063_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__40329) : p1.call(null,G__40329));
})();
if(cljs.core.truth_(or__17677__auto____$1)){
return or__17677__auto____$1;
} else {
var G__40330 = p1__40063_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__40330) : p2.call(null,G__40330));
}
});})(or__17677__auto__))
,args);
}
};
var G__40442 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__40443__i = 0, G__40443__a = new Array(arguments.length -  3);
while (G__40443__i < G__40443__a.length) {G__40443__a[G__40443__i] = arguments[G__40443__i + 3]; ++G__40443__i;}
  args = new cljs.core.IndexedSeq(G__40443__a,0);
} 
return G__40442__delegate.call(this,x,y,z,args);};
G__40442.cljs$lang$maxFixedArity = 3;
G__40442.cljs$lang$applyTo = (function (arglist__40444){
var x = cljs.core.first(arglist__40444);
arglist__40444 = cljs.core.next(arglist__40444);
var y = cljs.core.first(arglist__40444);
arglist__40444 = cljs.core.next(arglist__40444);
var z = cljs.core.first(arglist__40444);
var args = cljs.core.rest(arglist__40444);
return G__40442__delegate(x,y,z,args);
});
G__40442.cljs$core$IFn$_invoke$arity$variadic = G__40442__delegate;
return G__40442;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__40445 = null;
if (arguments.length > 3) {
var G__40446__i = 0, G__40446__a = new Array(arguments.length -  3);
while (G__40446__i < G__40446__a.length) {G__40446__a[G__40446__i] = arguments[G__40446__i + 3]; ++G__40446__i;}
G__40445 = new cljs.core.IndexedSeq(G__40446__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__40445);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__17677__auto__ = (function (){var G__40376 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__40376) : p1.call(null,G__40376));
})();
if(cljs.core.truth_(or__17677__auto__)){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (function (){var G__40378 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__40378) : p2.call(null,G__40378));
})();
if(cljs.core.truth_(or__17677__auto____$1)){
return or__17677__auto____$1;
} else {
var G__40379 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__40379) : p3.call(null,G__40379));
}
}
});
var sp3__2 = (function (x,y){
var or__17677__auto__ = (function (){var G__40381 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__40381) : p1.call(null,G__40381));
})();
if(cljs.core.truth_(or__17677__auto__)){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (function (){var G__40383 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__40383) : p2.call(null,G__40383));
})();
if(cljs.core.truth_(or__17677__auto____$1)){
return or__17677__auto____$1;
} else {
var or__17677__auto____$2 = (function (){var G__40385 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__40385) : p3.call(null,G__40385));
})();
if(cljs.core.truth_(or__17677__auto____$2)){
return or__17677__auto____$2;
} else {
var or__17677__auto____$3 = (function (){var G__40387 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__40387) : p1.call(null,G__40387));
})();
if(cljs.core.truth_(or__17677__auto____$3)){
return or__17677__auto____$3;
} else {
var or__17677__auto____$4 = (function (){var G__40389 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__40389) : p2.call(null,G__40389));
})();
if(cljs.core.truth_(or__17677__auto____$4)){
return or__17677__auto____$4;
} else {
var G__40390 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__40390) : p3.call(null,G__40390));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__17677__auto__ = (function (){var G__40392 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__40392) : p1.call(null,G__40392));
})();
if(cljs.core.truth_(or__17677__auto__)){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (function (){var G__40394 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__40394) : p2.call(null,G__40394));
})();
if(cljs.core.truth_(or__17677__auto____$1)){
return or__17677__auto____$1;
} else {
var or__17677__auto____$2 = (function (){var G__40396 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__40396) : p3.call(null,G__40396));
})();
if(cljs.core.truth_(or__17677__auto____$2)){
return or__17677__auto____$2;
} else {
var or__17677__auto____$3 = (function (){var G__40398 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__40398) : p1.call(null,G__40398));
})();
if(cljs.core.truth_(or__17677__auto____$3)){
return or__17677__auto____$3;
} else {
var or__17677__auto____$4 = (function (){var G__40400 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__40400) : p2.call(null,G__40400));
})();
if(cljs.core.truth_(or__17677__auto____$4)){
return or__17677__auto____$4;
} else {
var or__17677__auto____$5 = (function (){var G__40402 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__40402) : p3.call(null,G__40402));
})();
if(cljs.core.truth_(or__17677__auto____$5)){
return or__17677__auto____$5;
} else {
var or__17677__auto____$6 = (function (){var G__40404 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__40404) : p1.call(null,G__40404));
})();
if(cljs.core.truth_(or__17677__auto____$6)){
return or__17677__auto____$6;
} else {
var or__17677__auto____$7 = (function (){var G__40406 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__40406) : p2.call(null,G__40406));
})();
if(cljs.core.truth_(or__17677__auto____$7)){
return or__17677__auto____$7;
} else {
var G__40407 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__40407) : p3.call(null,G__40407));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__40447__delegate = function (x,y,z,args){
var or__17677__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__17677__auto__)){
return or__17677__auto__;
} else {
return cljs.core.some(((function (or__17677__auto__){
return (function (p1__40064_SHARP_){
var or__17677__auto____$1 = (function (){var G__40409 = p1__40064_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__40409) : p1.call(null,G__40409));
})();
if(cljs.core.truth_(or__17677__auto____$1)){
return or__17677__auto____$1;
} else {
var or__17677__auto____$2 = (function (){var G__40411 = p1__40064_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__40411) : p2.call(null,G__40411));
})();
if(cljs.core.truth_(or__17677__auto____$2)){
return or__17677__auto____$2;
} else {
var G__40412 = p1__40064_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__40412) : p3.call(null,G__40412));
}
}
});})(or__17677__auto__))
,args);
}
};
var G__40447 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__40448__i = 0, G__40448__a = new Array(arguments.length -  3);
while (G__40448__i < G__40448__a.length) {G__40448__a[G__40448__i] = arguments[G__40448__i + 3]; ++G__40448__i;}
  args = new cljs.core.IndexedSeq(G__40448__a,0);
} 
return G__40447__delegate.call(this,x,y,z,args);};
G__40447.cljs$lang$maxFixedArity = 3;
G__40447.cljs$lang$applyTo = (function (arglist__40449){
var x = cljs.core.first(arglist__40449);
arglist__40449 = cljs.core.next(arglist__40449);
var y = cljs.core.first(arglist__40449);
arglist__40449 = cljs.core.next(arglist__40449);
var z = cljs.core.first(arglist__40449);
var args = cljs.core.rest(arglist__40449);
return G__40447__delegate(x,y,z,args);
});
G__40447.cljs$core$IFn$_invoke$arity$variadic = G__40447__delegate;
return G__40447;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__40450 = null;
if (arguments.length > 3) {
var G__40451__i = 0, G__40451__a = new Array(arguments.length -  3);
while (G__40451__i < G__40451__a.length) {G__40451__a[G__40451__i] = arguments[G__40451__i + 3]; ++G__40451__i;}
G__40450 = new cljs.core.IndexedSeq(G__40451__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__40450);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__40452__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__40065_SHARP_){
var G__40428 = x;
return (p1__40065_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__40065_SHARP_.cljs$core$IFn$_invoke$arity$1(G__40428) : p1__40065_SHARP_.call(null,G__40428));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__40066_SHARP_){
var or__17677__auto__ = (function (){var G__40430 = x;
return (p1__40066_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__40066_SHARP_.cljs$core$IFn$_invoke$arity$1(G__40430) : p1__40066_SHARP_.call(null,G__40430));
})();
if(cljs.core.truth_(or__17677__auto__)){
return or__17677__auto__;
} else {
var G__40431 = y;
return (p1__40066_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__40066_SHARP_.cljs$core$IFn$_invoke$arity$1(G__40431) : p1__40066_SHARP_.call(null,G__40431));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__40067_SHARP_){
var or__17677__auto__ = (function (){var G__40433 = x;
return (p1__40067_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__40067_SHARP_.cljs$core$IFn$_invoke$arity$1(G__40433) : p1__40067_SHARP_.call(null,G__40433));
})();
if(cljs.core.truth_(or__17677__auto__)){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (function (){var G__40435 = y;
return (p1__40067_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__40067_SHARP_.cljs$core$IFn$_invoke$arity$1(G__40435) : p1__40067_SHARP_.call(null,G__40435));
})();
if(cljs.core.truth_(or__17677__auto____$1)){
return or__17677__auto____$1;
} else {
var G__40436 = z;
return (p1__40067_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__40067_SHARP_.cljs$core$IFn$_invoke$arity$1(G__40436) : p1__40067_SHARP_.call(null,G__40436));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__40453__delegate = function (x,y,z,args){
var or__17677__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__17677__auto__)){
return or__17677__auto__;
} else {
return cljs.core.some(((function (or__17677__auto__,ps__$1){
return (function (p1__40068_SHARP_){
return cljs.core.some(p1__40068_SHARP_,args);
});})(or__17677__auto__,ps__$1))
,ps__$1);
}
};
var G__40453 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__40454__i = 0, G__40454__a = new Array(arguments.length -  3);
while (G__40454__i < G__40454__a.length) {G__40454__a[G__40454__i] = arguments[G__40454__i + 3]; ++G__40454__i;}
  args = new cljs.core.IndexedSeq(G__40454__a,0);
} 
return G__40453__delegate.call(this,x,y,z,args);};
G__40453.cljs$lang$maxFixedArity = 3;
G__40453.cljs$lang$applyTo = (function (arglist__40455){
var x = cljs.core.first(arglist__40455);
arglist__40455 = cljs.core.next(arglist__40455);
var y = cljs.core.first(arglist__40455);
arglist__40455 = cljs.core.next(arglist__40455);
var z = cljs.core.first(arglist__40455);
var args = cljs.core.rest(arglist__40455);
return G__40453__delegate(x,y,z,args);
});
G__40453.cljs$core$IFn$_invoke$arity$variadic = G__40453__delegate;
return G__40453;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__40456 = null;
if (arguments.length > 3) {
var G__40457__i = 0, G__40457__a = new Array(arguments.length -  3);
while (G__40457__i < G__40457__a.length) {G__40457__a[G__40457__i] = arguments[G__40457__i + 3]; ++G__40457__i;}
G__40456 = new cljs.core.IndexedSeq(G__40457__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__40456);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__40452 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__40458__i = 0, G__40458__a = new Array(arguments.length -  3);
while (G__40458__i < G__40458__a.length) {G__40458__a[G__40458__i] = arguments[G__40458__i + 3]; ++G__40458__i;}
  ps = new cljs.core.IndexedSeq(G__40458__a,0);
} 
return G__40452__delegate.call(this,p1,p2,p3,ps);};
G__40452.cljs$lang$maxFixedArity = 3;
G__40452.cljs$lang$applyTo = (function (arglist__40459){
var p1 = cljs.core.first(arglist__40459);
arglist__40459 = cljs.core.next(arglist__40459);
var p2 = cljs.core.first(arglist__40459);
arglist__40459 = cljs.core.next(arglist__40459);
var p3 = cljs.core.first(arglist__40459);
var ps = cljs.core.rest(arglist__40459);
return G__40452__delegate(p1,p2,p3,ps);
});
G__40452.cljs$core$IFn$_invoke$arity$variadic = G__40452__delegate;
return G__40452;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__40460 = null;
if (arguments.length > 3) {
var G__40461__i = 0, G__40461__a = new Array(arguments.length -  3);
while (G__40461__i < G__40461__a.length) {G__40461__a[G__40461__i] = arguments[G__40461__i + 3]; ++G__40461__i;}
G__40460 = new cljs.core.IndexedSeq(G__40461__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__40460);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__40516 = null;
var G__40516__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__40516__1 = (function (result){
var G__40502 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__40502) : rf.call(null,G__40502));
});
var G__40516__2 = (function (result,input){
var G__40503 = result;
var G__40504 = (function (){var G__40505 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__40505) : f.call(null,G__40505));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__40503,G__40504) : rf.call(null,G__40503,G__40504));
});
var G__40516__3 = (function() { 
var G__40517__delegate = function (result,input,inputs){
var G__40506 = result;
var G__40507 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__40506,G__40507) : rf.call(null,G__40506,G__40507));
};
var G__40517 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__40518__i = 0, G__40518__a = new Array(arguments.length -  2);
while (G__40518__i < G__40518__a.length) {G__40518__a[G__40518__i] = arguments[G__40518__i + 2]; ++G__40518__i;}
  inputs = new cljs.core.IndexedSeq(G__40518__a,0);
} 
return G__40517__delegate.call(this,result,input,inputs);};
G__40517.cljs$lang$maxFixedArity = 2;
G__40517.cljs$lang$applyTo = (function (arglist__40519){
var result = cljs.core.first(arglist__40519);
arglist__40519 = cljs.core.next(arglist__40519);
var input = cljs.core.first(arglist__40519);
var inputs = cljs.core.rest(arglist__40519);
return G__40517__delegate(result,input,inputs);
});
G__40517.cljs$core$IFn$_invoke$arity$variadic = G__40517__delegate;
return G__40517;
})()
;
G__40516 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__40516__0.call(this);
case 1:
return G__40516__1.call(this,result);
case 2:
return G__40516__2.call(this,result,input);
default:
var G__40520 = null;
if (arguments.length > 2) {
var G__40521__i = 0, G__40521__a = new Array(arguments.length -  2);
while (G__40521__i < G__40521__a.length) {G__40521__a[G__40521__i] = arguments[G__40521__i + 2]; ++G__40521__i;}
G__40520 = new cljs.core.IndexedSeq(G__40521__a,0);
}
return G__40516__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__40520);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__40516.cljs$lang$maxFixedArity = 2;
G__40516.cljs$lang$applyTo = G__40516__3.cljs$lang$applyTo;
G__40516.cljs$core$IFn$_invoke$arity$0 = G__40516__0;
G__40516.cljs$core$IFn$_invoke$arity$1 = G__40516__1;
G__40516.cljs$core$IFn$_invoke$arity$2 = G__40516__2;
G__40516.cljs$core$IFn$_invoke$arity$variadic = G__40516__3.cljs$core$IFn$_invoke$arity$variadic;
return G__40516;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__18564__auto___40522 = size;
var i_40523 = (0);
while(true){
if((i_40523 < n__18564__auto___40522)){
cljs.core.chunk_append(b,(function (){var G__40508 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_40523);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__40508) : f.call(null,G__40508));
})());

var G__40524 = (i_40523 + (1));
i_40523 = G__40524;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__40509 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__40509) : f.call(null,G__40509));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__40510 = cljs.core.first(s1);
var G__40511 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__40510,G__40511) : f.call(null,G__40510,G__40511));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__40512 = cljs.core.first(s1);
var G__40513 = cljs.core.first(s2);
var G__40514 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__40512,G__40513,G__40514) : f.call(null,G__40512,G__40513,G__40514));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__40525__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__40462_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__40462_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__40525 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__40526__i = 0, G__40526__a = new Array(arguments.length -  4);
while (G__40526__i < G__40526__a.length) {G__40526__a[G__40526__i] = arguments[G__40526__i + 4]; ++G__40526__i;}
  colls = new cljs.core.IndexedSeq(G__40526__a,0);
} 
return G__40525__delegate.call(this,f,c1,c2,c3,colls);};
G__40525.cljs$lang$maxFixedArity = 4;
G__40525.cljs$lang$applyTo = (function (arglist__40527){
var f = cljs.core.first(arglist__40527);
arglist__40527 = cljs.core.next(arglist__40527);
var c1 = cljs.core.first(arglist__40527);
arglist__40527 = cljs.core.next(arglist__40527);
var c2 = cljs.core.first(arglist__40527);
arglist__40527 = cljs.core.next(arglist__40527);
var c3 = cljs.core.first(arglist__40527);
var colls = cljs.core.rest(arglist__40527);
return G__40525__delegate(f,c1,c2,c3,colls);
});
G__40525.cljs$core$IFn$_invoke$arity$variadic = G__40525__delegate;
return G__40525;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__40528 = null;
if (arguments.length > 4) {
var G__40529__i = 0, G__40529__a = new Array(arguments.length -  4);
while (G__40529__i < G__40529__a.length) {G__40529__a[G__40529__i] = arguments[G__40529__i + 4]; ++G__40529__i;}
G__40528 = new cljs.core.IndexedSeq(G__40529__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__40528);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__40538 = null;
var G__40538__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__40538__1 = (function (result){
var G__40535 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__40535) : rf.call(null,G__40535));
});
var G__40538__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__40536 = result;
var G__40537 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__40536,G__40537) : rf.call(null,G__40536,G__40537));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__40538 = function(result,input){
switch(arguments.length){
case 0:
return G__40538__0.call(this);
case 1:
return G__40538__1.call(this,result);
case 2:
return G__40538__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__40538.cljs$core$IFn$_invoke$arity$0 = G__40538__0;
G__40538.cljs$core$IFn$_invoke$arity$1 = G__40538__1;
G__40538.cljs$core$IFn$_invoke$arity$2 = G__40538__2;
return G__40538;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__40545 = null;
var G__40545__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__40545__1 = (function (result){
var G__40542 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__40542) : rf.call(null,G__40542));
});
var G__40545__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__40543 = result;
var G__40544 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__40543,G__40544) : rf.call(null,G__40543,G__40544));
}
});
G__40545 = function(result,input){
switch(arguments.length){
case 0:
return G__40545__0.call(this);
case 1:
return G__40545__1.call(this,result);
case 2:
return G__40545__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__40545.cljs$core$IFn$_invoke$arity$0 = G__40545__0;
G__40545.cljs$core$IFn$_invoke$arity$1 = G__40545__1;
G__40545.cljs$core$IFn$_invoke$arity$2 = G__40545__2;
return G__40545;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__40546 = (n__$1 - (1));
var G__40547 = cljs.core.rest(s);
n__$1 = G__40546;
coll__$1 = G__40547;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__40550 = cljs.core.next(s);
var G__40551 = cljs.core.next(lead);
s = G__40550;
lead = G__40551;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__40564 = null;
var G__40564__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__40564__1 = (function (result){
var G__40558 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__40558) : rf.call(null,G__40558));
});
var G__40564__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__17665__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__17665__auto__)){
var G__40559 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__40559) : pred.call(null,G__40559));
} else {
return and__17665__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__40560 = result;
var G__40561 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__40560,G__40561) : rf.call(null,G__40560,G__40561));
}
});
G__40564 = function(result,input){
switch(arguments.length){
case 0:
return G__40564__0.call(this);
case 1:
return G__40564__1.call(this,result);
case 2:
return G__40564__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__40564.cljs$core$IFn$_invoke$arity$0 = G__40564__0;
G__40564.cljs$core$IFn$_invoke$arity$1 = G__40564__1;
G__40564.cljs$core$IFn$_invoke$arity$2 = G__40564__2;
return G__40564;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__17665__auto__ = s;
if(and__17665__auto__){
var G__40563 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__40563) : pred__$1.call(null,G__40563));
} else {
return and__17665__auto__;
}
})())){
var G__40565 = pred__$1;
var G__40566 = cljs.core.rest(s);
pred__$1 = G__40565;
coll__$1 = G__40566;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__40575 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__40575) : f.call(null,G__40575));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__40578__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__40578 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__40579__i = 0, G__40579__a = new Array(arguments.length -  2);
while (G__40579__i < G__40579__a.length) {G__40579__a[G__40579__i] = arguments[G__40579__i + 2]; ++G__40579__i;}
  colls = new cljs.core.IndexedSeq(G__40579__a,0);
} 
return G__40578__delegate.call(this,c1,c2,colls);};
G__40578.cljs$lang$maxFixedArity = 2;
G__40578.cljs$lang$applyTo = (function (arglist__40580){
var c1 = cljs.core.first(arglist__40580);
arglist__40580 = cljs.core.next(arglist__40580);
var c2 = cljs.core.first(arglist__40580);
var colls = cljs.core.rest(arglist__40580);
return G__40578__delegate(c1,c2,colls);
});
G__40578.cljs$core$IFn$_invoke$arity$variadic = G__40578__delegate;
return G__40578;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__40581 = null;
if (arguments.length > 2) {
var G__40582__i = 0, G__40582__a = new Array(arguments.length -  2);
while (G__40582__i < G__40582__a.length) {G__40582__a[G__40582__i] = arguments[G__40582__i + 2]; ++G__40582__i;}
G__40581 = new cljs.core.IndexedSeq(G__40582__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__40581);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__40597 = null;
var G__40597__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__40597__1 = (function (result){
var G__40590 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__40590) : rf.call(null,G__40590));
});
var G__40597__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__40591 = result;
var G__40592 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__40591,G__40592) : rf.call(null,G__40591,G__40592));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__40593 = sepr;
var G__40594 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__40593,G__40594) : rf.call(null,G__40593,G__40594));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__40595 = result;
var G__40596 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__40595,G__40596) : rf.call(null,G__40595,G__40596));
}
});
G__40597 = function(result,input){
switch(arguments.length){
case 0:
return G__40597__0.call(this);
case 1:
return G__40597__1.call(this,result);
case 2:
return G__40597__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__40597.cljs$core$IFn$_invoke$arity$0 = G__40597__0;
G__40597.cljs$core$IFn$_invoke$arity$1 = G__40597__1;
G__40597.cljs$core$IFn$_invoke$arity$2 = G__40597__2;
return G__40597;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__40606__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__40606 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__40607__i = 0, G__40607__a = new Array(arguments.length -  1);
while (G__40607__i < G__40607__a.length) {G__40607__a[G__40607__i] = arguments[G__40607__i + 1]; ++G__40607__i;}
  colls = new cljs.core.IndexedSeq(G__40607__a,0);
} 
return G__40606__delegate.call(this,f,colls);};
G__40606.cljs$lang$maxFixedArity = 1;
G__40606.cljs$lang$applyTo = (function (arglist__40608){
var f = cljs.core.first(arglist__40608);
var colls = cljs.core.rest(arglist__40608);
return G__40606__delegate(f,colls);
});
G__40606.cljs$core$IFn$_invoke$arity$variadic = G__40606__delegate;
return G__40606;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__40609 = null;
if (arguments.length > 1) {
var G__40610__i = 0, G__40610__a = new Array(arguments.length -  1);
while (G__40610__i < G__40610__a.length) {G__40610__a[G__40610__i] = arguments[G__40610__i + 1]; ++G__40610__i;}
G__40609 = new cljs.core.IndexedSeq(G__40610__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__40609);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__40629 = null;
var G__40629__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__40629__1 = (function (result){
var G__40623 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__40623) : rf.call(null,G__40623));
});
var G__40629__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__40624 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__40624) : pred.call(null,G__40624));
})())){
var G__40625 = result;
var G__40626 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__40625,G__40626) : rf.call(null,G__40625,G__40626));
} else {
return result;
}
});
G__40629 = function(result,input){
switch(arguments.length){
case 0:
return G__40629__0.call(this);
case 1:
return G__40629__1.call(this,result);
case 2:
return G__40629__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__40629.cljs$core$IFn$_invoke$arity$0 = G__40629__0;
G__40629.cljs$core$IFn$_invoke$arity$1 = G__40629__1;
G__40629.cljs$core$IFn$_invoke$arity$2 = G__40629__2;
return G__40629;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__18564__auto___40630 = size;
var i_40631 = (0);
while(true){
if((i_40631 < n__18564__auto___40630)){
if(cljs.core.truth_((function (){var G__40627 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_40631);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__40627) : pred.call(null,G__40627));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_40631));
} else {
}

var G__40632 = (i_40631 + (1));
i_40631 = G__40632;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__40628 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__40628) : pred.call(null,G__40628));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__40639 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__40639) : branch_QMARK_.call(null,G__40639));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__40640 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__40640) : children.call(null,G__40640));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__40641_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__40641_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__40644 = to;
if(G__40644){
var bit__18351__auto__ = (G__40644.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__18351__auto__) || (G__40644.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__40645 = to;
if(G__40645){
var bit__18351__auto__ = (G__40645.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__18351__auto__) || (G__40645.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__40647 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__40647) : f.call(null,G__40647));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__40648__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__40648 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__40649__i = 0, G__40649__a = new Array(arguments.length -  4);
while (G__40649__i < G__40649__a.length) {G__40649__a[G__40649__i] = arguments[G__40649__i + 4]; ++G__40649__i;}
  colls = new cljs.core.IndexedSeq(G__40649__a,0);
} 
return G__40648__delegate.call(this,f,c1,c2,c3,colls);};
G__40648.cljs$lang$maxFixedArity = 4;
G__40648.cljs$lang$applyTo = (function (arglist__40650){
var f = cljs.core.first(arglist__40650);
arglist__40650 = cljs.core.next(arglist__40650);
var c1 = cljs.core.first(arglist__40650);
arglist__40650 = cljs.core.next(arglist__40650);
var c2 = cljs.core.first(arglist__40650);
arglist__40650 = cljs.core.next(arglist__40650);
var c3 = cljs.core.first(arglist__40650);
var colls = cljs.core.rest(arglist__40650);
return G__40648__delegate(f,c1,c2,c3,colls);
});
G__40648.cljs$core$IFn$_invoke$arity$variadic = G__40648__delegate;
return G__40648;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__40651 = null;
if (arguments.length > 4) {
var G__40652__i = 0, G__40652__a = new Array(arguments.length -  4);
while (G__40652__i < G__40652__a.length) {G__40652__a[G__40652__i] = arguments[G__40652__i + 4]; ++G__40652__i;}
G__40651 = new cljs.core.IndexedSeq(G__40652__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__40651);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__40654 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__40654) : pred.call(null,G__40654));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__40669 = m__$1;
if(G__40669){
var bit__18358__auto__ = (G__40669.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__18358__auto__) || (G__40669.cljs$core$ILookup$)){
return true;
} else {
if((!G__40669.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__40669);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__40669);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__40670 = sentinel;
var G__40671 = m__$2;
var G__40672 = cljs.core.next(ks__$1);
sentinel = G__40670;
m__$1 = G__40671;
ks__$1 = G__40672;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__40673,v){
var vec__40678 = p__40673;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__40678,(0),null);
var ks = cljs.core.nthnext(vec__40678,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__40679,f){
var vec__40717 = p__40679;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__40717,(0),null);
var ks = cljs.core.nthnext(vec__40717,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__40718 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__40718) : f.call(null,G__40718));
})());
}
});
var update_in__4 = (function (m,p__40680,f,a){
var vec__40719 = p__40680;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__40719,(0),null);
var ks = cljs.core.nthnext(vec__40719,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__40720 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__40721 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__40720,G__40721) : f.call(null,G__40720,G__40721));
})());
}
});
var update_in__5 = (function (m,p__40681,f,a,b){
var vec__40722 = p__40681;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__40722,(0),null);
var ks = cljs.core.nthnext(vec__40722,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__40723 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__40724 = a;
var G__40725 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__40723,G__40724,G__40725) : f.call(null,G__40723,G__40724,G__40725));
})());
}
});
var update_in__6 = (function (m,p__40682,f,a,b,c){
var vec__40726 = p__40682;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__40726,(0),null);
var ks = cljs.core.nthnext(vec__40726,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__40727 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__40728 = a;
var G__40729 = b;
var G__40730 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__40727,G__40728,G__40729,G__40730) : f.call(null,G__40727,G__40728,G__40729,G__40730));
})());
}
});
var update_in__7 = (function() { 
var G__40732__delegate = function (m,p__40683,f,a,b,c,args){
var vec__40731 = p__40683;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__40731,(0),null);
var ks = cljs.core.nthnext(vec__40731,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__40732 = function (m,p__40683,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__40733__i = 0, G__40733__a = new Array(arguments.length -  6);
while (G__40733__i < G__40733__a.length) {G__40733__a[G__40733__i] = arguments[G__40733__i + 6]; ++G__40733__i;}
  args = new cljs.core.IndexedSeq(G__40733__a,0);
} 
return G__40732__delegate.call(this,m,p__40683,f,a,b,c,args);};
G__40732.cljs$lang$maxFixedArity = 6;
G__40732.cljs$lang$applyTo = (function (arglist__40734){
var m = cljs.core.first(arglist__40734);
arglist__40734 = cljs.core.next(arglist__40734);
var p__40683 = cljs.core.first(arglist__40734);
arglist__40734 = cljs.core.next(arglist__40734);
var f = cljs.core.first(arglist__40734);
arglist__40734 = cljs.core.next(arglist__40734);
var a = cljs.core.first(arglist__40734);
arglist__40734 = cljs.core.next(arglist__40734);
var b = cljs.core.first(arglist__40734);
arglist__40734 = cljs.core.next(arglist__40734);
var c = cljs.core.first(arglist__40734);
var args = cljs.core.rest(arglist__40734);
return G__40732__delegate(m,p__40683,f,a,b,c,args);
});
G__40732.cljs$core$IFn$_invoke$arity$variadic = G__40732__delegate;
return G__40732;
})()
;
update_in = function(m,p__40683,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__40683,f);
case 4:
return update_in__4.call(this,m,p__40683,f,a);
case 5:
return update_in__5.call(this,m,p__40683,f,a,b);
case 6:
return update_in__6.call(this,m,p__40683,f,a,b,c);
default:
var G__40735 = null;
if (arguments.length > 6) {
var G__40736__i = 0, G__40736__a = new Array(arguments.length -  6);
while (G__40736__i < G__40736__a.length) {G__40736__a[G__40736__i] = arguments[G__40736__i + 6]; ++G__40736__i;}
G__40735 = new cljs.core.IndexedSeq(G__40736__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__40683,f,a,b,c, G__40735);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__40747 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__40747) : f.call(null,G__40747));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__40748 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__40749 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__40748,G__40749) : f.call(null,G__40748,G__40749));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__40750 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__40751 = x;
var G__40752 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__40750,G__40751,G__40752) : f.call(null,G__40750,G__40751,G__40752));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__40753 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__40754 = x;
var G__40755 = y;
var G__40756 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__40753,G__40754,G__40755,G__40756) : f.call(null,G__40753,G__40754,G__40755,G__40756));
})());
});
var update__7 = (function() { 
var G__40757__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__40757 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__40758__i = 0, G__40758__a = new Array(arguments.length -  6);
while (G__40758__i < G__40758__a.length) {G__40758__a[G__40758__i] = arguments[G__40758__i + 6]; ++G__40758__i;}
  more = new cljs.core.IndexedSeq(G__40758__a,0);
} 
return G__40757__delegate.call(this,m,k,f,x,y,z,more);};
G__40757.cljs$lang$maxFixedArity = 6;
G__40757.cljs$lang$applyTo = (function (arglist__40759){
var m = cljs.core.first(arglist__40759);
arglist__40759 = cljs.core.next(arglist__40759);
var k = cljs.core.first(arglist__40759);
arglist__40759 = cljs.core.next(arglist__40759);
var f = cljs.core.first(arglist__40759);
arglist__40759 = cljs.core.next(arglist__40759);
var x = cljs.core.first(arglist__40759);
arglist__40759 = cljs.core.next(arglist__40759);
var y = cljs.core.first(arglist__40759);
arglist__40759 = cljs.core.next(arglist__40759);
var z = cljs.core.first(arglist__40759);
var more = cljs.core.rest(arglist__40759);
return G__40757__delegate(m,k,f,x,y,z,more);
});
G__40757.cljs$core$IFn$_invoke$arity$variadic = G__40757__delegate;
return G__40757;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__40760 = null;
if (arguments.length > 6) {
var G__40761__i = 0, G__40761__a = new Array(arguments.length -  6);
while (G__40761__i < G__40761__a.length) {G__40761__a[G__40761__i] = arguments[G__40761__i + 6]; ++G__40761__i;}
G__40760 = new cljs.core.IndexedSeq(G__40761__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__40760);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__18264__auto__,writer__18265__auto__,opt__18266__auto__){
return cljs.core._write(writer__18265__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__40762 = (ll - (5));
var G__40763 = r;
ll = G__40762;
ret = G__40763;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__40768 = cljs.core.pv_aget(node,(0));
var G__40769 = (level - (5));
node = G__40768;
level = G__40769;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__40770 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__40771 = (level - (5));
node = G__40770;
level = G__40771;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__18264__auto__,writer__18265__auto__,opt__18266__auto__){
return cljs.core._write(writer__18265__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__40781 = init__$2;
var G__40782 = (j + i);
var G__40783 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__40781,G__40782,G__40783) : f.call(null,G__40781,G__40782,G__40783));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__40794 = (j + (1));
var G__40795 = init__$3;
j = G__40794;
init__$2 = G__40795;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__40784 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__40784) : cljs.core.deref.call(null,G__40784));
} else {
var G__40796 = (i + len);
var G__40797 = init__$2;
i = G__40796;
init__$1 = G__40797;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__18098__auto__ = self__.__hash;
if(!((h__18098__auto__ == null))){
return h__18098__auto__;
} else {
var h__18098__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__18098__auto____$1;

return h__18098__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__40785 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__40785) : cljs.core.tv_editable_root.call(null,G__40785));
})(),(function (){var G__40786 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__40786) : cljs.core.tv_editable_tail.call(null,G__40786));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__40787 = init__$2;
var G__40788 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__40787,G__40788) : f.call(null,G__40787,G__40788));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__40798 = (j + (1));
var G__40799 = init__$3;
j = G__40798;
init__$2 = G__40799;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__40789 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__40789) : cljs.core.deref.call(null,G__40789));
} else {
var G__40800 = (i + len);
var G__40801 = init__$2;
i = G__40800;
init__$1 = G__40801;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__40790 = coll__$1;
var G__40791 = cljs.core.first_array_for_longvec(coll__$1);
var G__40792 = (0);
var G__40793 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__40790,G__40791,G__40792,G__40793) : cljs.core.chunked_seq.call(null,G__40790,G__40791,G__40792,G__40793));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__18564__auto___40802 = len;
var i_40803 = (0);
while(true){
if((i_40803 < n__18564__auto___40802)){
(new_tail[i_40803] = (self__.tail[i_40803]));

var G__40804 = (i_40803 + (1));
i_40803 = G__40804;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__40805 = null;
var G__40805__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__40805__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__40805 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__40805__2.call(this,self__,k);
case 3:
return G__40805__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__40805.cljs$core$IFn$_invoke$arity$2 = G__40805__2;
G__40805.cljs$core$IFn$_invoke$arity$3 = G__40805__3;
return G__40805;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args40780){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args40780)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__18264__auto__,writer__18265__auto__,opt__18266__auto__){
return cljs.core._write(writer__18265__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__40806 = (i + (1));
var G__40807 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__40806;
out = G__40807;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18655__auto__ = this;
return cljs.core.es6_iterator(this__18655__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__40808__i = 0, G__40808__a = new Array(arguments.length -  0);
while (G__40808__i < G__40808__a.length) {G__40808__a[G__40808__i] = arguments[G__40808__i + 0]; ++G__40808__i;}
  args = new cljs.core.IndexedSeq(G__40808__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__40809){
var args = cljs.core.seq(arglist__40809);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__40810 = self__.vec;
var G__40811 = self__.node;
var G__40812 = self__.i;
var G__40813 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__40810,G__40811,G__40812,G__40813) : cljs.core.chunked_seq.call(null,G__40810,G__40811,G__40812,G__40813));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__18098__auto__ = self__.__hash;
if(!((h__18098__auto__ == null))){
return h__18098__auto__;
} else {
var h__18098__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__18098__auto____$1;

return h__18098__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__40814 = self__.vec;
var G__40815 = (self__.i + self__.off);
var G__40816 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__40814,G__40815,G__40816) : cljs.core.subvec.call(null,G__40814,G__40815,G__40816));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__40817 = self__.vec;
var G__40818 = (self__.i + self__.off);
var G__40819 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__40817,G__40818,G__40819) : cljs.core.subvec.call(null,G__40817,G__40818,G__40819));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__40820 = self__.vec;
var G__40821 = self__.node;
var G__40822 = self__.i;
var G__40823 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__40820,G__40821,G__40822,G__40823) : cljs.core.chunked_seq.call(null,G__40820,G__40821,G__40822,G__40823));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__40824 = self__.vec;
var G__40825 = cljs.core.unchecked_array_for(self__.vec,end);
var G__40826 = end;
var G__40827 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__40824,G__40825,G__40826,G__40827) : cljs.core.chunked_seq.call(null,G__40824,G__40825,G__40826,G__40827));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__40828 = self__.vec;
var G__40829 = self__.node;
var G__40830 = self__.i;
var G__40831 = self__.off;
var G__40832 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__40828,G__40829,G__40830,G__40831,G__40832) : cljs.core.chunked_seq.call(null,G__40828,G__40829,G__40830,G__40831,G__40832));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__40833 = self__.vec;
var G__40834 = cljs.core.unchecked_array_for(self__.vec,end);
var G__40835 = end;
var G__40836 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__40833,G__40834,G__40835,G__40836) : cljs.core.chunked_seq.call(null,G__40833,G__40834,G__40835,G__40836));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__18264__auto__,writer__18265__auto__,opt__18266__auto__){
return cljs.core._write(writer__18265__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18655__auto__ = this;
return cljs.core.es6_iterator(this__18655__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__40838 = self__.meta;
var G__40839 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__40840 = self__.start;
var G__40841 = (function (){var x__17994__auto__ = self__.end;
var y__17995__auto__ = (v_pos + (1));
return ((x__17994__auto__ > y__17995__auto__) ? x__17994__auto__ : y__17995__auto__);
})();
var G__40842 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__40838,G__40839,G__40840,G__40841,G__40842) : cljs.core.build_subvec.call(null,G__40838,G__40839,G__40840,G__40841,G__40842));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__40843 = self__.meta;
var G__40844 = self__.v;
var G__40845 = self__.start;
var G__40846 = (self__.end - (1));
var G__40847 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__40843,G__40844,G__40845,G__40846,G__40847) : cljs.core.build_subvec.call(null,G__40843,G__40844,G__40845,G__40846,G__40847));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__18098__auto__ = self__.__hash;
if(!((h__18098__auto__ == null))){
return h__18098__auto__;
} else {
var h__18098__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__18098__auto____$1;

return h__18098__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__40849 = meta__$1;
var G__40850 = self__.v;
var G__40851 = self__.start;
var G__40852 = self__.end;
var G__40853 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__40849,G__40850,G__40851,G__40852,G__40853) : cljs.core.build_subvec.call(null,G__40849,G__40850,G__40851,G__40852,G__40853));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__40854 = self__.meta;
var G__40855 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__40856 = self__.start;
var G__40857 = (self__.end + (1));
var G__40858 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__40854,G__40855,G__40856,G__40857,G__40858) : cljs.core.build_subvec.call(null,G__40854,G__40855,G__40856,G__40857,G__40858));
});

cljs.core.Subvec.prototype.call = (function() {
var G__40859 = null;
var G__40859__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__40859__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__40859 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__40859__2.call(this,self__,k);
case 3:
return G__40859__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__40859.cljs$core$IFn$_invoke$arity$2 = G__40859__2;
G__40859.cljs$core$IFn$_invoke$arity$3 = G__40859__3;
return G__40859;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args40837){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args40837)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__18264__auto__,writer__18265__auto__,opt__18266__auto__){
return cljs.core._write(writer__18265__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18655__auto__ = this;
return cljs.core.es6_iterator(this__18655__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__40860 = meta;
var G__40861 = v.v;
var G__40862 = (v.start + start);
var G__40863 = (v.start + end);
var G__40864 = __hash;
meta = G__40860;
v = G__40861;
start = G__40862;
end = G__40863;
__hash = G__40864;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj40871 = {};
return obj40871;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__40879 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__40880 = (level - (5));
node = G__40879;
level = G__40880;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__40884 = null;
var G__40884__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__40884__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__40884 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__40884__2.call(this,self__,k);
case 3:
return G__40884__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__40884.cljs$core$IFn$_invoke$arity$2 = G__40884__2;
G__40884.cljs$core$IFn$_invoke$arity$3 = G__40884__3;
return G__40884;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args40881){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args40881)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__18264__auto__,writer__18265__auto__,opt__18266__auto__){
return cljs.core._write(writer__18265__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__18098__auto__ = self__.__hash;
if(!((h__18098__auto__ == null))){
return h__18098__auto__;
} else {
var h__18098__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__18098__auto____$1;

return h__18098__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__18264__auto__,writer__18265__auto__,opt__18266__auto__){
return cljs.core._write(writer__18265__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18655__auto__ = this;
return cljs.core.es6_iterator(this__18655__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__18098__auto__ = self__.__hash;
if(!((h__18098__auto__ == null))){
return h__18098__auto__;
} else {
var h__18098__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__18098__auto____$1;

return h__18098__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__17677__auto__ = self__.front;
if(cljs.core.truth_(or__17677__auto__)){
return or__17677__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__17677__auto__ = self__.rear;
if(cljs.core.truth_(or__17677__auto__)){
return or__17677__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__18264__auto__,writer__18265__auto__,opt__18266__auto__){
return cljs.core._write(writer__18265__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18655__auto__ = this;
return cljs.core.es6_iterator(this__18655__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__18264__auto__,writer__18265__auto__,opt__18266__auto__){
return cljs.core._write(writer__18265__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__40885 = (i + incr);
i = G__40885;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__40886 = (i + (1));
var G__40887 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__40886;
out = G__40887;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj40891 = {};
return obj40891;
})();
var l = ks.length;
var i_40892 = (0);
while(true){
if((i_40892 < l)){
var k_40893 = (ks[i_40892]);
(new_obj[k_40893] = (obj[k_40893]));

var G__40894 = (i_40892 + (1));
i_40892 = G__40894;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__17665__auto__ = (function (){var G__40898 = k;
return goog.isString(G__40898);
})();
if(cljs.core.truth_(and__17665__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__17665__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__40899 = init__$1;
var G__40900 = k;
var G__40901 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__40899,G__40900,G__40901) : f.call(null,G__40899,G__40900,G__40901));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__40902 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__40902) : cljs.core.deref.call(null,G__40902));
} else {
var G__40908 = cljs.core.rest(keys__$1);
var G__40909 = init__$2;
keys__$1 = G__40908;
init__$1 = G__40909;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__18098__auto__ = self__.__hash;
if(!((h__18098__auto__ == null))){
return h__18098__auto__;
} else {
var h__18098__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__18098__auto____$1;

return h__18098__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__17665__auto__ = (function (){var G__40904 = k;
return goog.isString(G__40904);
})();
if(cljs.core.truth_(and__17665__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__17665__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__40905 = k;
return goog.isString(G__40905);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__17665__auto__ = (function (){var G__40907 = k;
return goog.isString(G__40907);
})();
if(cljs.core.truth_(and__17665__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__17665__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__40895_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__40895_SHARP_,(self__.strobj[p1__40895_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__40910 = null;
var G__40910__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__40910__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__40910 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__40910__2.call(this,self__,k);
case 3:
return G__40910__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__40910.cljs$core$IFn$_invoke$arity$2 = G__40910__2;
G__40910.cljs$core$IFn$_invoke$arity$3 = G__40910__3;
return G__40910;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args40896){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args40896)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__18264__auto__,writer__18265__auto__,opt__18266__auto__){
return cljs.core._write(writer__18265__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj40912 = {};
return obj40912;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__40913 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__40913,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__40913,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__18264__auto__,writer__18265__auto__,opt__18266__auto__){
return cljs.core._write(writer__18265__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__18264__auto__,writer__18265__auto__,opt__18266__auto__){
return cljs.core._write(writer__18265__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__40914 = (i + (2));
i = G__40914;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__40915 = (i + (2));
i = G__40915;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__40916 = (i + (2));
i = G__40916;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__40917 = (i + (2));
i = G__40917;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__40918 = (i + (2));
i = G__40918;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__17677__auto__ = (function (){var G__40922 = k;
return goog.isString(G__40922);
})();
if(cljs.core.truth_(or__17677__auto__)){
return or__17677__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_40923 = (0);
while(true){
if((i_40923 < l)){
(narr[i_40923] = (arr[i_40923]));

var G__40924 = (i_40923 + (1));
i_40923 = G__40924;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__18264__auto__,writer__18265__auto__,opt__18266__auto__){
return cljs.core._write(writer__18265__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18655__auto__ = this;
return cljs.core.es6_iterator(this__18655__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__18264__auto__,writer__18265__auto__,opt__18266__auto__){
return cljs.core._write(writer__18265__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__40926 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__40926) : cljs.core.keys.call(null,G__40926));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__40927 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__40927) : cljs.core.vals.call(null,G__40927));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__40928 = cljs.core.seq(coll);
var chunk__40929 = null;
var count__40930 = (0);
var i__40931 = (0);
while(true){
if((i__40931 < count__40930)){
var vec__40932 = chunk__40929.cljs$core$IIndexed$_nth$arity$2(null,i__40931);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__40932,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__40932,(1),null);
var G__40933_40946 = v;
var G__40934_40947 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__40933_40946,G__40934_40947) : f.call(null,G__40933_40946,G__40934_40947));

var G__40948 = seq__40928;
var G__40949 = chunk__40929;
var G__40950 = count__40930;
var G__40951 = (i__40931 + (1));
seq__40928 = G__40948;
chunk__40929 = G__40949;
count__40930 = G__40950;
i__40931 = G__40951;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__40928);
if(temp__4126__auto__){
var seq__40928__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__40928__$1)){
var c__18464__auto__ = cljs.core.chunk_first(seq__40928__$1);
var G__40952 = cljs.core.chunk_rest(seq__40928__$1);
var G__40953 = c__18464__auto__;
var G__40954 = cljs.core.count(c__18464__auto__);
var G__40955 = (0);
seq__40928 = G__40952;
chunk__40929 = G__40953;
count__40930 = G__40954;
i__40931 = G__40955;
continue;
} else {
var vec__40935 = cljs.core.first(seq__40928__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__40935,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__40935,(1),null);
var G__40936_40956 = v;
var G__40937_40957 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__40936_40956,G__40937_40957) : f.call(null,G__40936_40956,G__40937_40957));

var G__40958 = cljs.core.next(seq__40928__$1);
var G__40959 = null;
var G__40960 = (0);
var G__40961 = (0);
seq__40928 = G__40958;
chunk__40929 = G__40959;
count__40930 = G__40960;
i__40931 = G__40961;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__40938 = init__$1;
var G__40939 = (self__.arr[i]);
var G__40940 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__40938,G__40939,G__40940) : f.call(null,G__40938,G__40939,G__40940));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__40941 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__40941) : cljs.core.deref.call(null,G__40941));
} else {
var G__40962 = (i + (2));
var G__40963 = init__$2;
i = G__40962;
init__$1 = G__40963;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__18098__auto__ = self__.__hash;
if(!((h__18098__auto__ == null))){
return h__18098__auto__;
} else {
var h__18098__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__18098__auto____$1;

return h__18098__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__40942 = other;
if(G__40942){
var bit__18351__auto__ = (G__40942.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__18351__auto__) || (G__40942.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__40964 = (i + (2));
i = G__40964;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj40944 = {};
return obj40944;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__40965 = (s + (2));
var G__40966 = d;
s = G__40965;
d = G__40966;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__40967 = (s + (2));
var G__40968 = (d + (2));
s = G__40967;
d = G__40968;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__40945 = cljs.core.aclone(self__.arr);
(G__40945[(idx + (1))] = v);

return G__40945;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__40969 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__40970 = cljs.core.next(es);
ret = G__40969;
es = G__40970;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__40971 = null;
var G__40971__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__40971__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__40971 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__40971__2.call(this,self__,k);
case 3:
return G__40971__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__40971.cljs$core$IFn$_invoke$arity$2 = G__40971__2;
G__40971.cljs$core$IFn$_invoke$arity$3 = G__40971__3;
return G__40971;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args40925){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args40925)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__18264__auto__,writer__18265__auto__,opt__18266__auto__){
return cljs.core._write(writer__18265__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__40972 = (i + (2));
var G__40973 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__40972;
ret = G__40973;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18655__auto__ = this;
return cljs.core.es6_iterator(this__18655__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__40974_40982 = self__.arr;
G__40974_40982.pop();

G__40974_40982.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__40975 = self__.len;
var G__40976 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__40975,G__40976) : cljs.core.array__GT_transient_hash_map.call(null,G__40975,G__40976));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__40977 = o;
if(G__40977){
var bit__18358__auto__ = (G__40977.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__18358__auto__) || (G__40977.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__40977.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__40977);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__40977);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__40978 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__40978) : cljs.core.key.call(null,G__40978));
})(),(function (){var G__40979 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__40979) : cljs.core.val.call(null,G__40979));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__40983 = cljs.core.next(es);
var G__40984 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__40980 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__40980) : cljs.core.key.call(null,G__40980));
})(),(function (){var G__40981 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__40981) : cljs.core.val.call(null,G__40981));
})());
es = G__40983;
tcoll__$2 = G__40984;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__18264__auto__,writer__18265__auto__,opt__18266__auto__){
return cljs.core._write(writer__18265__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__40985 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__40986 = (i + (2));
out = G__40985;
i = G__40986;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__18264__auto__,writer__18265__auto__,opt__18266__auto__){
return cljs.core._write(writer__18265__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__40989 = cljs.core.aclone(arr);
(G__40989[i] = a);

return G__40989;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__40990 = cljs.core.aclone(arr);
(G__40990[i] = a);

(G__40990[j] = b);

return G__40990;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__40995 = init__$1;
var G__40996 = k;
var G__40997 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__40995,G__40996,G__40997) : f.call(null,G__40995,G__40996,G__40997));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__40998 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__40998) : cljs.core.deref.call(null,G__40998));
} else {
var G__40999 = (i + (2));
var G__41000 = init__$2;
i = G__40999;
init__$1 = G__41000;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__41001 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__41001) : cljs.core.create_inode_seq.call(null,G__41001));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_41015 = (0);
var j_41016 = (0);
while(true){
if((i_41015 < (32))){
if((((self__.bitmap >>> i_41015) & (1)) === (0))){
var G__41017 = (i_41015 + (1));
var G__41018 = j_41016;
i_41015 = G__41017;
j_41016 = G__41018;
continue;
} else {
(nodes[i_41015] = ((!(((self__.arr[j_41016]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_41016])),(self__.arr[j_41016]),(self__.arr[(j_41016 + (1))]),added_leaf_QMARK_):(self__.arr[(j_41016 + (1))])));

var G__41019 = (i_41015 + (1));
var G__41020 = (j_41016 + (2));
i_41015 = G__41019;
j_41016 = G__41020;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__41002 = edit__$1;
var G__41003 = (shift + (5));
var G__41004 = key_or_nil;
var G__41005 = val_or_node;
var G__41006 = hash;
var G__41007 = key;
var G__41008 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__41002,G__41003,G__41004,G__41005,G__41006,G__41007,G__41008) : cljs.core.create_node.call(null,G__41002,G__41003,G__41004,G__41005,G__41006,G__41007,G__41008));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_41021 = (0);
var j_41022 = (0);
while(true){
if((i_41021 < (32))){
if((((self__.bitmap >>> i_41021) & (1)) === (0))){
var G__41023 = (i_41021 + (1));
var G__41024 = j_41022;
i_41021 = G__41023;
j_41022 = G__41024;
continue;
} else {
(nodes[i_41021] = ((!(((self__.arr[j_41022]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_41022])),(self__.arr[j_41022]),(self__.arr[(j_41022 + (1))]),added_leaf_QMARK_):(self__.arr[(j_41022 + (1))])));

var G__41025 = (i_41021 + (1));
var G__41026 = (j_41022 + (2));
i_41021 = G__41025;
j_41022 = G__41026;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__41009 = (shift + (5));
var G__41010 = key_or_nil;
var G__41011 = val_or_node;
var G__41012 = hash;
var G__41013 = key;
var G__41014 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__41009,G__41010,G__41011,G__41012,G__41013,G__41014) : cljs.core.create_node.call(null,G__41009,G__41010,G__41011,G__41012,G__41013,G__41014));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__18264__auto__,writer__18265__auto__,opt__18266__auto__){
return cljs.core._write(writer__18265__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__41027 = (i + (1));
var G__41028 = (j + (2));
var G__41029 = (bitmap | ((1) << i));
i = G__41027;
j = G__41028;
bitmap = G__41029;
continue;
} else {
var G__41030 = (i + (1));
var G__41031 = j;
var G__41032 = bitmap;
i = G__41030;
j = G__41031;
bitmap = G__41032;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__41033 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__41033) : cljs.core.create_array_node_seq.call(null,G__41033));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__41034 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__41034) : cljs.core.deref.call(null,G__41034));
} else {
var G__41035 = (i + (1));
var G__41036 = init__$2;
i = G__41035;
init__$1 = G__41036;
continue;
}
} else {
var G__41037 = (i + (1));
var G__41038 = init__$1;
i = G__41037;
init__$1 = G__41038;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__18264__auto__,writer__18265__auto__,opt__18266__auto__){
return cljs.core._write(writer__18265__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__41039 = (i + (2));
i = G__41039;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__41040 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__41040) : cljs.core.create_inode_seq.call(null,G__41040));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__18264__auto__,writer__18265__auto__,opt__18266__auto__){
return cljs.core._write(writer__18265__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__18098__auto__ = self__.__hash;
if(!((h__18098__auto__ == null))){
return h__18098__auto__;
} else {
var h__18098__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__18098__auto____$1;

return h__18098__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__41041 = self__.nodes;
var G__41042 = (self__.i + (2));
var G__41043 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__41041,G__41042,G__41043) : cljs.core.create_inode_seq.call(null,G__41041,G__41042,G__41043));
} else {
var G__41044 = self__.nodes;
var G__41045 = self__.i;
var G__41046 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__41044,G__41045,G__41046) : cljs.core.create_inode_seq.call(null,G__41044,G__41045,G__41046));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__18264__auto__,writer__18265__auto__,opt__18266__auto__){
return cljs.core._write(writer__18265__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18655__auto__ = this;
return cljs.core.es6_iterator(this__18655__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__41050 = (j + (2));
j = G__41050;
continue;
}
} else {
var G__41051 = (j + (2));
j = G__41051;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__18098__auto__ = self__.__hash;
if(!((h__18098__auto__ == null))){
return h__18098__auto__;
} else {
var h__18098__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__18098__auto____$1;

return h__18098__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__41052 = null;
var G__41053 = self__.nodes;
var G__41054 = self__.i;
var G__41055 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__41052,G__41053,G__41054,G__41055) : cljs.core.create_array_node_seq.call(null,G__41052,G__41053,G__41054,G__41055));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__18264__auto__,writer__18265__auto__,opt__18266__auto__){
return cljs.core._write(writer__18265__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18655__auto__ = this;
return cljs.core.es6_iterator(this__18655__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__41060 = (j + (1));
j = G__41060;
continue;
}
} else {
var G__41061 = (j + (1));
j = G__41061;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__41063 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__41063) : cljs.core.keys.call(null,G__41063));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__41064 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__41064) : cljs.core.vals.call(null,G__41064));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__41065 = cljs.core.seq(coll);
var chunk__41066 = null;
var count__41067 = (0);
var i__41068 = (0);
while(true){
if((i__41068 < count__41067)){
var vec__41069 = chunk__41066.cljs$core$IIndexed$_nth$arity$2(null,i__41068);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41069,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41069,(1),null);
var G__41070_41081 = v;
var G__41071_41082 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__41070_41081,G__41071_41082) : f.call(null,G__41070_41081,G__41071_41082));

var G__41083 = seq__41065;
var G__41084 = chunk__41066;
var G__41085 = count__41067;
var G__41086 = (i__41068 + (1));
seq__41065 = G__41083;
chunk__41066 = G__41084;
count__41067 = G__41085;
i__41068 = G__41086;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__41065);
if(temp__4126__auto__){
var seq__41065__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__41065__$1)){
var c__18464__auto__ = cljs.core.chunk_first(seq__41065__$1);
var G__41087 = cljs.core.chunk_rest(seq__41065__$1);
var G__41088 = c__18464__auto__;
var G__41089 = cljs.core.count(c__18464__auto__);
var G__41090 = (0);
seq__41065 = G__41087;
chunk__41066 = G__41088;
count__41067 = G__41089;
i__41068 = G__41090;
continue;
} else {
var vec__41072 = cljs.core.first(seq__41065__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41072,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41072,(1),null);
var G__41073_41091 = v;
var G__41074_41092 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__41073_41091,G__41074_41092) : f.call(null,G__41073_41091,G__41074_41092));

var G__41093 = cljs.core.next(seq__41065__$1);
var G__41094 = null;
var G__41095 = (0);
var G__41096 = (0);
seq__41065 = G__41093;
chunk__41066 = G__41094;
count__41067 = G__41095;
i__41068 = G__41096;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__41075 = init;
var G__41076 = null;
var G__41077 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__41075,G__41076,G__41077) : f.call(null,G__41075,G__41076,G__41077));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__41078 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__41078) : cljs.core.deref.call(null,G__41078));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__18098__auto__ = self__.__hash;
if(!((h__18098__auto__ == null))){
return h__18098__auto__;
} else {
var h__18098__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__18098__auto____$1;

return h__18098__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj41080 = {};
return obj41080;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__41097 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__41098 = cljs.core.next(es);
ret = G__41097;
es = G__41098;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__41099 = null;
var G__41099__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__41099__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__41099 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__41099__2.call(this,self__,k);
case 3:
return G__41099__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__41099.cljs$core$IFn$_invoke$arity$2 = G__41099__2;
G__41099.cljs$core$IFn$_invoke$arity$3 = G__41099__3;
return G__41099;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args41062){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args41062)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__18264__auto__,writer__18265__auto__,opt__18266__auto__){
return cljs.core._write(writer__18265__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__41100 = (i + (2));
var G__41101 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__41100;
ret = G__41101;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__41102 = (i + (1));
var G__41103 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__41102;
out = G__41103;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18655__auto__ = this;
return cljs.core.es6_iterator(this__18655__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__41104 = o;
if(G__41104){
var bit__18358__auto__ = (G__41104.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__18358__auto__) || (G__41104.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__41104.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__41104);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__41104);
}
})()){
return tcoll.assoc_BANG_((function (){var G__41105 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__41105) : cljs.core.key.call(null,G__41105));
})(),(function (){var G__41106 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__41106) : cljs.core.val.call(null,G__41106));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__41109 = cljs.core.next(es);
var G__41110 = tcoll__$1.assoc_BANG_((function (){var G__41107 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__41107) : cljs.core.key.call(null,G__41107));
})(),(function (){var G__41108 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__41108) : cljs.core.val.call(null,G__41108));
})());
es = G__41109;
tcoll__$1 = G__41110;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__18264__auto__,writer__18265__auto__,opt__18266__auto__){
return cljs.core._write(writer__18265__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__41111 = ((ascending_QMARK_)?t.left:t.right);
var G__41112 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__41111;
stack__$1 = G__41112;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__18098__auto__ = self__.__hash;
if(!((h__18098__auto__ == null))){
return h__18098__auto__;
} else {
var h__18098__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__18098__auto____$1;

return h__18098__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__18264__auto__,writer__18265__auto__,opt__18266__auto__){
return cljs.core._write(writer__18265__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18655__auto__ = this;
return cljs.core.es6_iterator(this__18655__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__41125 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__41125) : cljs.core.deref.call(null,G__41125));
} else {
var init__$2 = (function (){var G__41126 = init__$1;
var G__41127 = node.key;
var G__41128 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__41126,G__41127,G__41128) : f.call(null,G__41126,G__41127,G__41128));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__41129 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__41129) : cljs.core.deref.call(null,G__41129));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__41130 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__41130) : cljs.core.deref.call(null,G__41130));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__18098__auto__ = self__.__hash;
if(!((h__18098__auto__ == null))){
return h__18098__auto__;
} else {
var h__18098__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__18098__auto____$1;

return h__18098__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__41132 = null;
var G__41132__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__41132__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__41132 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__41132__2.call(this,self__,k);
case 3:
return G__41132__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__41132.cljs$core$IFn$_invoke$arity$2 = G__41132__2;
G__41132.cljs$core$IFn$_invoke$arity$3 = G__41132__3;
return G__41132;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args41131){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args41131)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__18264__auto__,writer__18265__auto__,opt__18266__auto__){
return cljs.core._write(writer__18265__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18655__auto__ = this;
return cljs.core.es6_iterator(this__18655__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__18098__auto__ = self__.__hash;
if(!((h__18098__auto__ == null))){
return h__18098__auto__;
} else {
var h__18098__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__18098__auto____$1;

return h__18098__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__41134 = null;
var G__41134__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__41134__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__41134 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__41134__2.call(this,self__,k);
case 3:
return G__41134__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__41134.cljs$core$IFn$_invoke$arity$2 = G__41134__2;
G__41134.cljs$core$IFn$_invoke$arity$3 = G__41134__3;
return G__41134;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args41133){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args41133)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__18264__auto__,writer__18265__auto__,opt__18266__auto__){
return cljs.core._write(writer__18265__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18655__auto__ = this;
return cljs.core.es6_iterator(this__18655__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__41147 = k;
var G__41148 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__41147,G__41148) : comp.call(null,G__41147,G__41148));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__41167 = k;
var G__41168 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__41167,G__41168) : comp.call(null,G__41167,G__41168));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__41179 = k;
var G__41180 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__41179,G__41180) : comp.call(null,G__41179,G__41180));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__41182 = cljs.core.seq(coll);
var chunk__41183 = null;
var count__41184 = (0);
var i__41185 = (0);
while(true){
if((i__41185 < count__41184)){
var vec__41186 = chunk__41183.cljs$core$IIndexed$_nth$arity$2(null,i__41185);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41186,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41186,(1),null);
var G__41187_41199 = v;
var G__41188_41200 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__41187_41199,G__41188_41200) : f.call(null,G__41187_41199,G__41188_41200));

var G__41201 = seq__41182;
var G__41202 = chunk__41183;
var G__41203 = count__41184;
var G__41204 = (i__41185 + (1));
seq__41182 = G__41201;
chunk__41183 = G__41202;
count__41184 = G__41203;
i__41185 = G__41204;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__41182);
if(temp__4126__auto__){
var seq__41182__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__41182__$1)){
var c__18464__auto__ = cljs.core.chunk_first(seq__41182__$1);
var G__41205 = cljs.core.chunk_rest(seq__41182__$1);
var G__41206 = c__18464__auto__;
var G__41207 = cljs.core.count(c__18464__auto__);
var G__41208 = (0);
seq__41182 = G__41205;
chunk__41183 = G__41206;
count__41184 = G__41207;
i__41185 = G__41208;
continue;
} else {
var vec__41189 = cljs.core.first(seq__41182__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41189,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41189,(1),null);
var G__41190_41209 = v;
var G__41191_41210 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__41190_41209,G__41191_41210) : f.call(null,G__41190_41209,G__41191_41210));

var G__41211 = cljs.core.next(seq__41182__$1);
var G__41212 = null;
var G__41213 = (0);
var G__41214 = (0);
seq__41182 = G__41211;
chunk__41183 = G__41212;
count__41184 = G__41213;
i__41185 = G__41214;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__41192 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__41192) : cljs.core.keys.call(null,G__41192));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__41193 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__41193) : cljs.core.vals.call(null,G__41193));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__41194 = k;
var G__41195 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__41194,G__41195) : self__.comp.call(null,G__41194,G__41195));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__41215 = t.left;
t = G__41215;
continue;
} else {
var G__41216 = t.right;
t = G__41216;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__18098__auto__ = self__.__hash;
if(!((h__18098__auto__ == null))){
return h__18098__auto__;
} else {
var h__18098__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__18098__auto____$1;

return h__18098__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__41217 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__41218 = cljs.core.next(es);
ret = G__41217;
es = G__41218;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__41219 = null;
var G__41219__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__41219__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__41219 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__41219__2.call(this,self__,k);
case 3:
return G__41219__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__41219.cljs$core$IFn$_invoke$arity$2 = G__41219__2;
G__41219.cljs$core$IFn$_invoke$arity$3 = G__41219__3;
return G__41219;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args41181){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args41181)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__41196 = k;
var G__41197 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__41196,G__41197) : self__.comp.call(null,G__41196,G__41197));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__41220 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__41221 = t.left;
stack = G__41220;
t = G__41221;
continue;
} else {
var G__41222 = stack;
var G__41223 = t.right;
stack = G__41222;
t = G__41223;
continue;
}
} else {
if((c > (0))){
var G__41224 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__41225 = t.right;
stack = G__41224;
t = G__41225;
continue;
} else {
var G__41226 = stack;
var G__41227 = t.left;
stack = G__41226;
t = G__41227;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__41198 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__41198) : cljs.core.key.call(null,G__41198));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__18264__auto__,writer__18265__auto__,opt__18266__auto__){
return cljs.core._write(writer__18265__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18655__auto__ = this;
return cljs.core.es6_iterator(this__18655__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__41228 = cljs.core.nnext(in$);
var G__41229 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__41228;
out = G__41229;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__41230__i = 0, G__41230__a = new Array(arguments.length -  0);
while (G__41230__i < G__41230__a.length) {G__41230__a[G__41230__i] = arguments[G__41230__i + 0]; ++G__41230__i;}
  keyvals = new cljs.core.IndexedSeq(G__41230__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__41231){
var keyvals = cljs.core.seq(arglist__41231);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__41232__i = 0, G__41232__a = new Array(arguments.length -  0);
while (G__41232__i < G__41232__a.length) {G__41232__a[G__41232__i] = arguments[G__41232__i + 0]; ++G__41232__i;}
  keyvals = new cljs.core.IndexedSeq(G__41232__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__41233){
var keyvals = cljs.core.seq(arglist__41233);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj41237 = {};
return obj41237;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__41238 = cljs.core.nnext(kvs);
kvs = G__41238;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__41239__i = 0, G__41239__a = new Array(arguments.length -  0);
while (G__41239__i < G__41239__a.length) {G__41239__a[G__41239__i] = arguments[G__41239__i + 0]; ++G__41239__i;}
  keyvals = new cljs.core.IndexedSeq(G__41239__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__41240){
var keyvals = cljs.core.seq(arglist__41240);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__41241 = cljs.core.nnext(in$);
var G__41242 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__41241;
out = G__41242;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__41243__i = 0, G__41243__a = new Array(arguments.length -  0);
while (G__41243__i < G__41243__a.length) {G__41243__a[G__41243__i] = arguments[G__41243__i + 0]; ++G__41243__i;}
  keyvals = new cljs.core.IndexedSeq(G__41243__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__41244){
var keyvals = cljs.core.seq(arglist__41244);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__41245 = cljs.core.nnext(in$);
var G__41246 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__41245;
out = G__41246;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__41247__i = 0, G__41247__a = new Array(arguments.length -  1);
while (G__41247__i < G__41247__a.length) {G__41247__a[G__41247__i] = arguments[G__41247__i + 1]; ++G__41247__i;}
  keyvals = new cljs.core.IndexedSeq(G__41247__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__41248){
var comparator = cljs.core.first(arglist__41248);
var keyvals = cljs.core.rest(arglist__41248);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__41249 = self__.mseq;
if(G__41249){
var bit__18358__auto__ = (G__41249.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__18358__auto__) || (G__41249.cljs$core$INext$)){
return true;
} else {
if((!G__41249.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__41249);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__41249);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__41250 = self__.mseq;
if(G__41250){
var bit__18358__auto__ = (G__41250.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__18358__auto__) || (G__41250.cljs$core$INext$)){
return true;
} else {
if((!G__41250.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__41250);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__41250);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__18264__auto__,writer__18265__auto__,opt__18266__auto__){
return cljs.core._write(writer__18265__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18655__auto__ = this;
return cljs.core.es6_iterator(this__18655__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__41251 = self__.mseq;
if(G__41251){
var bit__18358__auto__ = (G__41251.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__18358__auto__) || (G__41251.cljs$core$INext$)){
return true;
} else {
if((!G__41251.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__41251);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__41251);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__41252 = self__.mseq;
if(G__41252){
var bit__18358__auto__ = (G__41252.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__18358__auto__) || (G__41252.cljs$core$INext$)){
return true;
} else {
if((!G__41252.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__41252);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__41252);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__18264__auto__,writer__18265__auto__,opt__18266__auto__){
return cljs.core._write(writer__18265__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18655__auto__ = this;
return cljs.core.es6_iterator(this__18655__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__41253_SHARP_,p2__41254_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__17677__auto__ = p1__41253_SHARP_;
if(cljs.core.truth_(or__17677__auto__)){
return or__17677__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__41254_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__41255__i = 0, G__41255__a = new Array(arguments.length -  0);
while (G__41255__i < G__41255__a.length) {G__41255__a[G__41255__i] = arguments[G__41255__i + 0]; ++G__41255__i;}
  maps = new cljs.core.IndexedSeq(G__41255__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__41256){
var maps = cljs.core.seq(arglist__41256);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__41259 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__41260 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__41259,G__41260) : f.call(null,G__41259,G__41260));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__17677__auto__ = m1;
if(cljs.core.truth_(or__17677__auto__)){
return or__17677__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__41261__i = 0, G__41261__a = new Array(arguments.length -  1);
while (G__41261__i < G__41261__a.length) {G__41261__a[G__41261__i] = arguments[G__41261__i + 1]; ++G__41261__i;}
  maps = new cljs.core.IndexedSeq(G__41261__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__41262){
var f = cljs.core.first(arglist__41262);
var maps = cljs.core.rest(arglist__41262);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,cljs.core.constant$keyword$52);
var G__41263 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,cljs.core.constant$keyword$52))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__41264 = cljs.core.next(keys);
ret = G__41263;
keys = G__41264;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__41267 = cljs.core.seq(coll);
var chunk__41268 = null;
var count__41269 = (0);
var i__41270 = (0);
while(true){
if((i__41270 < count__41269)){
var vec__41271 = chunk__41268.cljs$core$IIndexed$_nth$arity$2(null,i__41270);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41271,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41271,(1),null);
var G__41272_41277 = v;
var G__41273_41278 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__41272_41277,G__41273_41278) : f.call(null,G__41272_41277,G__41273_41278));

var G__41279 = seq__41267;
var G__41280 = chunk__41268;
var G__41281 = count__41269;
var G__41282 = (i__41270 + (1));
seq__41267 = G__41279;
chunk__41268 = G__41280;
count__41269 = G__41281;
i__41270 = G__41282;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__41267);
if(temp__4126__auto__){
var seq__41267__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__41267__$1)){
var c__18464__auto__ = cljs.core.chunk_first(seq__41267__$1);
var G__41283 = cljs.core.chunk_rest(seq__41267__$1);
var G__41284 = c__18464__auto__;
var G__41285 = cljs.core.count(c__18464__auto__);
var G__41286 = (0);
seq__41267 = G__41283;
chunk__41268 = G__41284;
count__41269 = G__41285;
i__41270 = G__41286;
continue;
} else {
var vec__41274 = cljs.core.first(seq__41267__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41274,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41274,(1),null);
var G__41275_41287 = v;
var G__41276_41288 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__41275_41287,G__41276_41288) : f.call(null,G__41275_41287,G__41276_41288));

var G__41289 = cljs.core.next(seq__41267__$1);
var G__41290 = null;
var G__41291 = (0);
var G__41292 = (0);
seq__41267 = G__41289;
chunk__41268 = G__41290;
count__41269 = G__41291;
i__41270 = G__41292;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__18098__auto__ = self__.__hash;
if(!((h__18098__auto__ == null))){
return h__18098__auto__;
} else {
var h__18098__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__18098__auto____$1;

return h__18098__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__41265_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__41265_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__41293 = null;
var G__41293__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__41293__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__41293 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__41293__2.call(this,self__,k);
case 3:
return G__41293__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__41293.cljs$core$IFn$_invoke$arity$2 = G__41293__2;
G__41293.cljs$core$IFn$_invoke$arity$3 = G__41293__3;
return G__41293;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args41266){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args41266)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__18264__auto__,writer__18265__auto__,opt__18266__auto__){
return cljs.core._write(writer__18265__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__41294 = (i + (1));
var G__41295 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__41294;
out = G__41295;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__41296 = (i + (1));
var G__41297 = cljs.core._conj_BANG_(out,(items[i]));
i = G__41296;
out = G__41297;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18655__auto__ = this;
return cljs.core.es6_iterator(this__18655__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__41299 = null;
var G__41299__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__41299__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__41299 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__41299__2.call(this,self__,k);
case 3:
return G__41299__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__41299.cljs$core$IFn$_invoke$arity$2 = G__41299__2;
G__41299.cljs$core$IFn$_invoke$arity$3 = G__41299__3;
return G__41299;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args41298){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args41298)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__18264__auto__,writer__18265__auto__,opt__18266__auto__){
return cljs.core._write(writer__18265__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__41302 = cljs.core.seq(coll);
var chunk__41303 = null;
var count__41304 = (0);
var i__41305 = (0);
while(true){
if((i__41305 < count__41304)){
var vec__41306 = chunk__41303.cljs$core$IIndexed$_nth$arity$2(null,i__41305);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41306,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41306,(1),null);
var G__41307_41312 = v;
var G__41308_41313 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__41307_41312,G__41308_41313) : f.call(null,G__41307_41312,G__41308_41313));

var G__41314 = seq__41302;
var G__41315 = chunk__41303;
var G__41316 = count__41304;
var G__41317 = (i__41305 + (1));
seq__41302 = G__41314;
chunk__41303 = G__41315;
count__41304 = G__41316;
i__41305 = G__41317;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__41302);
if(temp__4126__auto__){
var seq__41302__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__41302__$1)){
var c__18464__auto__ = cljs.core.chunk_first(seq__41302__$1);
var G__41318 = cljs.core.chunk_rest(seq__41302__$1);
var G__41319 = c__18464__auto__;
var G__41320 = cljs.core.count(c__18464__auto__);
var G__41321 = (0);
seq__41302 = G__41318;
chunk__41303 = G__41319;
count__41304 = G__41320;
i__41305 = G__41321;
continue;
} else {
var vec__41309 = cljs.core.first(seq__41302__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41309,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41309,(1),null);
var G__41310_41322 = v;
var G__41311_41323 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__41310_41322,G__41311_41323) : f.call(null,G__41310_41322,G__41311_41323));

var G__41324 = cljs.core.next(seq__41302__$1);
var G__41325 = null;
var G__41326 = (0);
var G__41327 = (0);
seq__41302 = G__41324;
chunk__41303 = G__41325;
count__41304 = G__41326;
i__41305 = G__41327;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__18098__auto__ = self__.__hash;
if(!((h__18098__auto__ == null))){
return h__18098__auto__;
} else {
var h__18098__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__18098__auto____$1;

return h__18098__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__41300_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__41300_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__41328 = null;
var G__41328__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__41328__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__41328 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__41328__2.call(this,self__,k);
case 3:
return G__41328__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__41328.cljs$core$IFn$_invoke$arity$2 = G__41328__2;
G__41328.cljs$core$IFn$_invoke$arity$3 = G__41328__3;
return G__41328;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args41301){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args41301)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__18264__auto__,writer__18265__auto__,opt__18266__auto__){
return cljs.core._write(writer__18265__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18655__auto__ = this;
return cljs.core.es6_iterator(this__18655__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__18558__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__18558__auto__.length)){
var G__41329 = (i + (1));
var G__41330 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__41329;
res = G__41330;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__41331 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__41332 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__41331;
out = G__41332;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__41333__delegate = function (keys){
return cljs.core.set(keys);
};
var G__41333 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__41334__i = 0, G__41334__a = new Array(arguments.length -  0);
while (G__41334__i < G__41334__a.length) {G__41334__a[G__41334__i] = arguments[G__41334__i + 0]; ++G__41334__i;}
  keys = new cljs.core.IndexedSeq(G__41334__a,0);
} 
return G__41333__delegate.call(this,keys);};
G__41333.cljs$lang$maxFixedArity = 0;
G__41333.cljs$lang$applyTo = (function (arglist__41335){
var keys = cljs.core.seq(arglist__41335);
return G__41333__delegate(keys);
});
G__41333.cljs$core$IFn$_invoke$arity$variadic = G__41333__delegate;
return G__41333;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__41336 = null;
if (arguments.length > 0) {
var G__41337__i = 0, G__41337__a = new Array(arguments.length -  0);
while (G__41337__i < G__41337__a.length) {G__41337__a[G__41337__i] = arguments[G__41337__i + 0]; ++G__41337__i;}
G__41336 = new cljs.core.IndexedSeq(G__41337__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__41336);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__41338__i = 0, G__41338__a = new Array(arguments.length -  0);
while (G__41338__i < G__41338__a.length) {G__41338__a[G__41338__i] = arguments[G__41338__i + 0]; ++G__41338__i;}
  keys = new cljs.core.IndexedSeq(G__41338__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__41339){
var keys = cljs.core.seq(arglist__41339);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__41340__i = 0, G__41340__a = new Array(arguments.length -  1);
while (G__41340__i < G__41340__a.length) {G__41340__a[G__41340__i] = arguments[G__41340__i + 1]; ++G__41340__i;}
  keys = new cljs.core.IndexedSeq(G__41340__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__41341){
var comparator = cljs.core.first(arglist__41341);
var keys = cljs.core.rest(arglist__41341);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__41342_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__41342_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__41342_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__41343_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__41343_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__41343_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__41364 = null;
var G__41364__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__41364__1 = (function (result){
var G__41354 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__41354) : rf.call(null,G__41354));
});
var G__41364__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__41355 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__41355) : cljs.core.deref.call(null,G__41355));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__41356 = result;
var G__41357 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__41356,G__41357) : rf.call(null,G__41356,G__41357));
}
});
G__41364 = function(result,input){
switch(arguments.length){
case 0:
return G__41364__0.call(this);
case 1:
return G__41364__1.call(this,result);
case 2:
return G__41364__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__41364.cljs$core$IFn$_invoke$arity$0 = G__41364__0;
G__41364.cljs$core$IFn$_invoke$arity$1 = G__41364__1;
G__41364.cljs$core$IFn$_invoke$arity$2 = G__41364__2;
return G__41364;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__41362,seen__$1){
while(true){
var vec__41363 = p__41362;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41363,(0),null);
var xs__$1 = vec__41363;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__41365 = cljs.core.rest(s);
var G__41366 = seen__$1;
p__41362 = G__41365;
seen__$1 = G__41366;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__41367 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__41368 = cljs.core.next(s__$1);
ret = G__41367;
s__$1 = G__41368;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__41370 = x;
if(G__41370){
var bit__18351__auto__ = (G__41370.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__18351__auto__) || (G__41370.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__41371 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__41372 = cljs.core.next(ks);
var G__41373 = cljs.core.next(vs);
map = G__41371;
ks = G__41372;
vs = G__41373;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__41384 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__41384) : k.call(null,G__41384));
})() > (function (){var G__41385 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__41385) : k.call(null,G__41385));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__41386__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__41374_SHARP_,p2__41375_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__41374_SHARP_,p2__41375_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__41386 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__41387__i = 0, G__41387__a = new Array(arguments.length -  3);
while (G__41387__i < G__41387__a.length) {G__41387__a[G__41387__i] = arguments[G__41387__i + 3]; ++G__41387__i;}
  more = new cljs.core.IndexedSeq(G__41387__a,0);
} 
return G__41386__delegate.call(this,k,x,y,more);};
G__41386.cljs$lang$maxFixedArity = 3;
G__41386.cljs$lang$applyTo = (function (arglist__41388){
var k = cljs.core.first(arglist__41388);
arglist__41388 = cljs.core.next(arglist__41388);
var x = cljs.core.first(arglist__41388);
arglist__41388 = cljs.core.next(arglist__41388);
var y = cljs.core.first(arglist__41388);
var more = cljs.core.rest(arglist__41388);
return G__41386__delegate(k,x,y,more);
});
G__41386.cljs$core$IFn$_invoke$arity$variadic = G__41386__delegate;
return G__41386;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__41389 = null;
if (arguments.length > 3) {
var G__41390__i = 0, G__41390__a = new Array(arguments.length -  3);
while (G__41390__i < G__41390__a.length) {G__41390__a[G__41390__i] = arguments[G__41390__i + 3]; ++G__41390__i;}
G__41389 = new cljs.core.IndexedSeq(G__41390__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__41389);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__41401 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__41401) : k.call(null,G__41401));
})() < (function (){var G__41402 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__41402) : k.call(null,G__41402));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__41403__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__41391_SHARP_,p2__41392_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__41391_SHARP_,p2__41392_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__41403 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__41404__i = 0, G__41404__a = new Array(arguments.length -  3);
while (G__41404__i < G__41404__a.length) {G__41404__a[G__41404__i] = arguments[G__41404__i + 3]; ++G__41404__i;}
  more = new cljs.core.IndexedSeq(G__41404__a,0);
} 
return G__41403__delegate.call(this,k,x,y,more);};
G__41403.cljs$lang$maxFixedArity = 3;
G__41403.cljs$lang$applyTo = (function (arglist__41405){
var k = cljs.core.first(arglist__41405);
arglist__41405 = cljs.core.next(arglist__41405);
var x = cljs.core.first(arglist__41405);
arglist__41405 = cljs.core.next(arglist__41405);
var y = cljs.core.first(arglist__41405);
var more = cljs.core.rest(arglist__41405);
return G__41403__delegate(k,x,y,more);
});
G__41403.cljs$core$IFn$_invoke$arity$variadic = G__41403__delegate;
return G__41403;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__41406 = null;
if (arguments.length > 3) {
var G__41407__i = 0, G__41407__a = new Array(arguments.length -  3);
while (G__41407__i < G__41407__a.length) {G__41407__a[G__41407__i] = arguments[G__41407__i + 3]; ++G__41407__i;}
G__41406 = new cljs.core.IndexedSeq(G__41407__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__41406);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__18264__auto__,writer__18265__auto__,opt__18266__auto__){
return cljs.core._write(writer__18265__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__41424 = null;
var G__41424__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__41424__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__41419 = result;
var G__41420 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__41419,G__41420) : rf.call(null,G__41419,G__41420));
})());
})());
var G__41421 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__41421) : rf.call(null,G__41421));
});
var G__41424__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__41422 = result;
var G__41423 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__41422,G__41423) : rf.call(null,G__41422,G__41423));
} else {
return result;
}
});
G__41424 = function(result,input){
switch(arguments.length){
case 0:
return G__41424__0.call(this);
case 1:
return G__41424__1.call(this,result);
case 2:
return G__41424__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__41424.cljs$core$IFn$_invoke$arity$0 = G__41424__0;
G__41424.cljs$core$IFn$_invoke$arity$1 = G__41424__1;
G__41424.cljs$core$IFn$_invoke$arity$2 = G__41424__2;
return G__41424;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__41437 = null;
var G__41437__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__41437__1 = (function (result){
var G__41432 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__41432) : rf.call(null,G__41432));
});
var G__41437__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__41433 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__41433) : pred.call(null,G__41433));
})())){
var G__41434 = result;
var G__41435 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__41434,G__41435) : rf.call(null,G__41434,G__41435));
} else {
return cljs.core.reduced(result);
}
});
G__41437 = function(result,input){
switch(arguments.length){
case 0:
return G__41437__0.call(this);
case 1:
return G__41437__1.call(this,result);
case 2:
return G__41437__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__41437.cljs$core$IFn$_invoke$arity$0 = G__41437__0;
G__41437.cljs$core$IFn$_invoke$arity$1 = G__41437__1;
G__41437.cljs$core$IFn$_invoke$arity$2 = G__41437__2;
return G__41437;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__41436 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__41436) : pred.call(null,G__41436));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__41442 = (function (){var G__41444 = cljs.core._entry_key(sc,e);
var G__41445 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__41444,G__41445) : comp.call(null,G__41444,G__41445));
})();
var G__41443 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__41442,G__41443) : test.call(null,G__41442,G__41443));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__41449 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41449,(0),null);
var s = vec__41449;
if(cljs.core.truth_((function (){var G__41450 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__41450) : include.call(null,G__41450));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__41451 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41451,(0),null);
var s = vec__41451;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__41455 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41455,(0),null);
var s = vec__41455;
if(cljs.core.truth_((function (){var G__41456 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__41456) : include.call(null,G__41456));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__41457 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41457,(0),null);
var s = vec__41457;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__18264__auto__,writer__18265__auto__,opt__18266__auto__){
return cljs.core._write(writer__18265__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__41458 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__41458) : Math.ceil.call(null,G__41458));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__18098__auto__ = self__.__hash;
if(!((h__18098__auto__ == null))){
return h__18098__auto__;
} else {
var h__18098__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__18098__auto____$1;

return h__18098__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__41459 = ret;
var G__41460 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__41459,G__41460) : f.call(null,G__41459,G__41460));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__41461 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__41461) : cljs.core.deref.call(null,G__41461));
} else {
var G__41462 = (i + self__.step);
var G__41463 = ret__$1;
i = G__41462;
ret = G__41463;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__18264__auto__,writer__18265__auto__,opt__18266__auto__){
return cljs.core._write(writer__18265__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18655__auto__ = this;
return cljs.core.es6_iterator(this__18655__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__41481 = null;
var G__41481__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__41481__1 = (function (result){
var G__41478 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__41478) : rf.call(null,G__41478));
});
var G__41481__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__41479 = result;
var G__41480 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__41479,G__41480) : rf.call(null,G__41479,G__41480));
} else {
return result;
}
});
G__41481 = function(result,input){
switch(arguments.length){
case 0:
return G__41481__0.call(this);
case 1:
return G__41481__1.call(this,result);
case 2:
return G__41481__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__41481.cljs$core$IFn$_invoke$arity$0 = G__41481__0;
G__41481.cljs$core$IFn$_invoke$arity$1 = G__41481__1;
G__41481.cljs$core$IFn$_invoke$arity$2 = G__41481__2;
return G__41481;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(cljs.core.constant$keyword$53);
return ((function (a,pa){
return (function() {
var G__41503 = null;
var G__41503__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__41503__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__41494 = result;
var G__41495 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__41494,G__41495) : rf.call(null,G__41494,G__41495));
})());
})());
var G__41496 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__41496) : rf.call(null,G__41496));
});
var G__41503__2 = (function (result,input){
var pval = (function (){var G__41497 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__41497) : cljs.core.deref.call(null,G__41497));
})();
var val = (function (){var G__41498 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__41498) : f.call(null,G__41498));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,cljs.core.constant$keyword$53)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__41499 = result;
var G__41500 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__41499,G__41500) : rf.call(null,G__41499,G__41500));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__41503 = function(result,input){
switch(arguments.length){
case 0:
return G__41503__0.call(this);
case 1:
return G__41503__1.call(this,result);
case 2:
return G__41503__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__41503.cljs$core$IFn$_invoke$arity$0 = G__41503__0;
G__41503.cljs$core$IFn$_invoke$arity$1 = G__41503__1;
G__41503.cljs$core$IFn$_invoke$arity$2 = G__41503__2;
return G__41503;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__41501 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__41501) : f.call(null,G__41501));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__41482_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__41502 = p1__41482_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__41502) : f.call(null,G__41502));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__41512 = init;
var G__41513 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__41512,G__41513) : f.call(null,G__41512,G__41513));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__41608 = null;
var G__41608__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__41608__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__41566 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__41566) : f.call(null,G__41566));
})()],null));
});
var G__41608__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__41567 = x;
var G__41568 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__41567,G__41568) : f.call(null,G__41567,G__41568));
})()],null));
});
var G__41608__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__41569 = x;
var G__41570 = y;
var G__41571 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__41569,G__41570,G__41571) : f.call(null,G__41569,G__41570,G__41571));
})()],null));
});
var G__41608__4 = (function() { 
var G__41609__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__41609 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__41610__i = 0, G__41610__a = new Array(arguments.length -  3);
while (G__41610__i < G__41610__a.length) {G__41610__a[G__41610__i] = arguments[G__41610__i + 3]; ++G__41610__i;}
  args = new cljs.core.IndexedSeq(G__41610__a,0);
} 
return G__41609__delegate.call(this,x,y,z,args);};
G__41609.cljs$lang$maxFixedArity = 3;
G__41609.cljs$lang$applyTo = (function (arglist__41611){
var x = cljs.core.first(arglist__41611);
arglist__41611 = cljs.core.next(arglist__41611);
var y = cljs.core.first(arglist__41611);
arglist__41611 = cljs.core.next(arglist__41611);
var z = cljs.core.first(arglist__41611);
var args = cljs.core.rest(arglist__41611);
return G__41609__delegate(x,y,z,args);
});
G__41609.cljs$core$IFn$_invoke$arity$variadic = G__41609__delegate;
return G__41609;
})()
;
G__41608 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__41608__0.call(this);
case 1:
return G__41608__1.call(this,x);
case 2:
return G__41608__2.call(this,x,y);
case 3:
return G__41608__3.call(this,x,y,z);
default:
var G__41612 = null;
if (arguments.length > 3) {
var G__41613__i = 0, G__41613__a = new Array(arguments.length -  3);
while (G__41613__i < G__41613__a.length) {G__41613__a[G__41613__i] = arguments[G__41613__i + 3]; ++G__41613__i;}
G__41612 = new cljs.core.IndexedSeq(G__41613__a,0);
}
return G__41608__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__41612);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__41608.cljs$lang$maxFixedArity = 3;
G__41608.cljs$lang$applyTo = G__41608__4.cljs$lang$applyTo;
G__41608.cljs$core$IFn$_invoke$arity$0 = G__41608__0;
G__41608.cljs$core$IFn$_invoke$arity$1 = G__41608__1;
G__41608.cljs$core$IFn$_invoke$arity$2 = G__41608__2;
G__41608.cljs$core$IFn$_invoke$arity$3 = G__41608__3;
G__41608.cljs$core$IFn$_invoke$arity$variadic = G__41608__4.cljs$core$IFn$_invoke$arity$variadic;
return G__41608;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__41614 = null;
var G__41614__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__41614__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__41572 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__41572) : f.call(null,G__41572));
})(),(function (){var G__41573 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__41573) : g.call(null,G__41573));
})()],null));
});
var G__41614__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__41574 = x;
var G__41575 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__41574,G__41575) : f.call(null,G__41574,G__41575));
})(),(function (){var G__41576 = x;
var G__41577 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__41576,G__41577) : g.call(null,G__41576,G__41577));
})()],null));
});
var G__41614__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__41578 = x;
var G__41579 = y;
var G__41580 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__41578,G__41579,G__41580) : f.call(null,G__41578,G__41579,G__41580));
})(),(function (){var G__41581 = x;
var G__41582 = y;
var G__41583 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__41581,G__41582,G__41583) : g.call(null,G__41581,G__41582,G__41583));
})()],null));
});
var G__41614__4 = (function() { 
var G__41615__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__41615 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__41616__i = 0, G__41616__a = new Array(arguments.length -  3);
while (G__41616__i < G__41616__a.length) {G__41616__a[G__41616__i] = arguments[G__41616__i + 3]; ++G__41616__i;}
  args = new cljs.core.IndexedSeq(G__41616__a,0);
} 
return G__41615__delegate.call(this,x,y,z,args);};
G__41615.cljs$lang$maxFixedArity = 3;
G__41615.cljs$lang$applyTo = (function (arglist__41617){
var x = cljs.core.first(arglist__41617);
arglist__41617 = cljs.core.next(arglist__41617);
var y = cljs.core.first(arglist__41617);
arglist__41617 = cljs.core.next(arglist__41617);
var z = cljs.core.first(arglist__41617);
var args = cljs.core.rest(arglist__41617);
return G__41615__delegate(x,y,z,args);
});
G__41615.cljs$core$IFn$_invoke$arity$variadic = G__41615__delegate;
return G__41615;
})()
;
G__41614 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__41614__0.call(this);
case 1:
return G__41614__1.call(this,x);
case 2:
return G__41614__2.call(this,x,y);
case 3:
return G__41614__3.call(this,x,y,z);
default:
var G__41618 = null;
if (arguments.length > 3) {
var G__41619__i = 0, G__41619__a = new Array(arguments.length -  3);
while (G__41619__i < G__41619__a.length) {G__41619__a[G__41619__i] = arguments[G__41619__i + 3]; ++G__41619__i;}
G__41618 = new cljs.core.IndexedSeq(G__41619__a,0);
}
return G__41614__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__41618);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__41614.cljs$lang$maxFixedArity = 3;
G__41614.cljs$lang$applyTo = G__41614__4.cljs$lang$applyTo;
G__41614.cljs$core$IFn$_invoke$arity$0 = G__41614__0;
G__41614.cljs$core$IFn$_invoke$arity$1 = G__41614__1;
G__41614.cljs$core$IFn$_invoke$arity$2 = G__41614__2;
G__41614.cljs$core$IFn$_invoke$arity$3 = G__41614__3;
G__41614.cljs$core$IFn$_invoke$arity$variadic = G__41614__4.cljs$core$IFn$_invoke$arity$variadic;
return G__41614;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__41620 = null;
var G__41620__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__41620__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__41584 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__41584) : f.call(null,G__41584));
})(),(function (){var G__41585 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__41585) : g.call(null,G__41585));
})(),(function (){var G__41586 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__41586) : h.call(null,G__41586));
})()],null));
});
var G__41620__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__41587 = x;
var G__41588 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__41587,G__41588) : f.call(null,G__41587,G__41588));
})(),(function (){var G__41589 = x;
var G__41590 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__41589,G__41590) : g.call(null,G__41589,G__41590));
})(),(function (){var G__41591 = x;
var G__41592 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__41591,G__41592) : h.call(null,G__41591,G__41592));
})()],null));
});
var G__41620__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__41593 = x;
var G__41594 = y;
var G__41595 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__41593,G__41594,G__41595) : f.call(null,G__41593,G__41594,G__41595));
})(),(function (){var G__41596 = x;
var G__41597 = y;
var G__41598 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__41596,G__41597,G__41598) : g.call(null,G__41596,G__41597,G__41598));
})(),(function (){var G__41599 = x;
var G__41600 = y;
var G__41601 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__41599,G__41600,G__41601) : h.call(null,G__41599,G__41600,G__41601));
})()],null));
});
var G__41620__4 = (function() { 
var G__41621__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__41621 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__41622__i = 0, G__41622__a = new Array(arguments.length -  3);
while (G__41622__i < G__41622__a.length) {G__41622__a[G__41622__i] = arguments[G__41622__i + 3]; ++G__41622__i;}
  args = new cljs.core.IndexedSeq(G__41622__a,0);
} 
return G__41621__delegate.call(this,x,y,z,args);};
G__41621.cljs$lang$maxFixedArity = 3;
G__41621.cljs$lang$applyTo = (function (arglist__41623){
var x = cljs.core.first(arglist__41623);
arglist__41623 = cljs.core.next(arglist__41623);
var y = cljs.core.first(arglist__41623);
arglist__41623 = cljs.core.next(arglist__41623);
var z = cljs.core.first(arglist__41623);
var args = cljs.core.rest(arglist__41623);
return G__41621__delegate(x,y,z,args);
});
G__41621.cljs$core$IFn$_invoke$arity$variadic = G__41621__delegate;
return G__41621;
})()
;
G__41620 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__41620__0.call(this);
case 1:
return G__41620__1.call(this,x);
case 2:
return G__41620__2.call(this,x,y);
case 3:
return G__41620__3.call(this,x,y,z);
default:
var G__41624 = null;
if (arguments.length > 3) {
var G__41625__i = 0, G__41625__a = new Array(arguments.length -  3);
while (G__41625__i < G__41625__a.length) {G__41625__a[G__41625__i] = arguments[G__41625__i + 3]; ++G__41625__i;}
G__41624 = new cljs.core.IndexedSeq(G__41625__a,0);
}
return G__41620__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__41624);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__41620.cljs$lang$maxFixedArity = 3;
G__41620.cljs$lang$applyTo = G__41620__4.cljs$lang$applyTo;
G__41620.cljs$core$IFn$_invoke$arity$0 = G__41620__0;
G__41620.cljs$core$IFn$_invoke$arity$1 = G__41620__1;
G__41620.cljs$core$IFn$_invoke$arity$2 = G__41620__2;
G__41620.cljs$core$IFn$_invoke$arity$3 = G__41620__3;
G__41620.cljs$core$IFn$_invoke$arity$variadic = G__41620__4.cljs$core$IFn$_invoke$arity$variadic;
return G__41620;
})()
});
var juxt__4 = (function() { 
var G__41626__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__41627 = null;
var G__41627__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__41514_SHARP_,p2__41515_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__41514_SHARP_,(function (){return (p2__41515_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__41515_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__41515_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__41627__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__41516_SHARP_,p2__41517_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__41516_SHARP_,(function (){var G__41602 = x;
return (p2__41517_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__41517_SHARP_.cljs$core$IFn$_invoke$arity$1(G__41602) : p2__41517_SHARP_.call(null,G__41602));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__41627__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__41518_SHARP_,p2__41519_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__41518_SHARP_,(function (){var G__41603 = x;
var G__41604 = y;
return (p2__41519_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__41519_SHARP_.cljs$core$IFn$_invoke$arity$2(G__41603,G__41604) : p2__41519_SHARP_.call(null,G__41603,G__41604));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__41627__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__41520_SHARP_,p2__41521_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__41520_SHARP_,(function (){var G__41605 = x;
var G__41606 = y;
var G__41607 = z;
return (p2__41521_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__41521_SHARP_.cljs$core$IFn$_invoke$arity$3(G__41605,G__41606,G__41607) : p2__41521_SHARP_.call(null,G__41605,G__41606,G__41607));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__41627__4 = (function() { 
var G__41628__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__41522_SHARP_,p2__41523_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__41522_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__41523_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__41628 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__41629__i = 0, G__41629__a = new Array(arguments.length -  3);
while (G__41629__i < G__41629__a.length) {G__41629__a[G__41629__i] = arguments[G__41629__i + 3]; ++G__41629__i;}
  args = new cljs.core.IndexedSeq(G__41629__a,0);
} 
return G__41628__delegate.call(this,x,y,z,args);};
G__41628.cljs$lang$maxFixedArity = 3;
G__41628.cljs$lang$applyTo = (function (arglist__41630){
var x = cljs.core.first(arglist__41630);
arglist__41630 = cljs.core.next(arglist__41630);
var y = cljs.core.first(arglist__41630);
arglist__41630 = cljs.core.next(arglist__41630);
var z = cljs.core.first(arglist__41630);
var args = cljs.core.rest(arglist__41630);
return G__41628__delegate(x,y,z,args);
});
G__41628.cljs$core$IFn$_invoke$arity$variadic = G__41628__delegate;
return G__41628;
})()
;
G__41627 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__41627__0.call(this);
case 1:
return G__41627__1.call(this,x);
case 2:
return G__41627__2.call(this,x,y);
case 3:
return G__41627__3.call(this,x,y,z);
default:
var G__41631 = null;
if (arguments.length > 3) {
var G__41632__i = 0, G__41632__a = new Array(arguments.length -  3);
while (G__41632__i < G__41632__a.length) {G__41632__a[G__41632__i] = arguments[G__41632__i + 3]; ++G__41632__i;}
G__41631 = new cljs.core.IndexedSeq(G__41632__a,0);
}
return G__41627__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__41631);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__41627.cljs$lang$maxFixedArity = 3;
G__41627.cljs$lang$applyTo = G__41627__4.cljs$lang$applyTo;
G__41627.cljs$core$IFn$_invoke$arity$0 = G__41627__0;
G__41627.cljs$core$IFn$_invoke$arity$1 = G__41627__1;
G__41627.cljs$core$IFn$_invoke$arity$2 = G__41627__2;
G__41627.cljs$core$IFn$_invoke$arity$3 = G__41627__3;
G__41627.cljs$core$IFn$_invoke$arity$variadic = G__41627__4.cljs$core$IFn$_invoke$arity$variadic;
return G__41627;
})()
;})(fs__$1))
};
var G__41626 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__41633__i = 0, G__41633__a = new Array(arguments.length -  3);
while (G__41633__i < G__41633__a.length) {G__41633__a[G__41633__i] = arguments[G__41633__i + 3]; ++G__41633__i;}
  fs = new cljs.core.IndexedSeq(G__41633__a,0);
} 
return G__41626__delegate.call(this,f,g,h,fs);};
G__41626.cljs$lang$maxFixedArity = 3;
G__41626.cljs$lang$applyTo = (function (arglist__41634){
var f = cljs.core.first(arglist__41634);
arglist__41634 = cljs.core.next(arglist__41634);
var g = cljs.core.first(arglist__41634);
arglist__41634 = cljs.core.next(arglist__41634);
var h = cljs.core.first(arglist__41634);
var fs = cljs.core.rest(arglist__41634);
return G__41626__delegate(f,g,h,fs);
});
G__41626.cljs$core$IFn$_invoke$arity$variadic = G__41626__delegate;
return G__41626;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__41635 = null;
if (arguments.length > 3) {
var G__41636__i = 0, G__41636__a = new Array(arguments.length -  3);
while (G__41636__i < G__41636__a.length) {G__41636__a[G__41636__i] = arguments[G__41636__i + 3]; ++G__41636__i;}
G__41635 = new cljs.core.IndexedSeq(G__41636__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__41635);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__41637 = cljs.core.next(coll);
coll = G__41637;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__41638 = (n - (1));
var G__41639 = cljs.core.next(coll);
n = G__41638;
coll = G__41639;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__41643 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41643,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41643,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41643,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_41651 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if((cljs.core.constant$keyword$48.cljs$core$IFn$_invoke$arity$1(opts) === (0))){
if(cljs.core.seq(coll)){
cljs.core._write(writer,(function (){var or__17677__auto__ = cljs.core.constant$keyword$54.cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__17677__auto__)){
return or__17677__auto__;
} else {
return "...";
}
})());
} else {
}
} else {
if(cljs.core.seq(coll)){
var G__41652_41658 = cljs.core.first(coll);
var G__41653_41659 = writer;
var G__41654_41660 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__41652_41658,G__41653_41659,G__41654_41660) : print_one.call(null,G__41652_41658,G__41653_41659,G__41654_41660));
} else {
}

var coll_41661__$1 = cljs.core.next(coll);
var n_41662 = (cljs.core.constant$keyword$48.cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_41661__$1) && (((n_41662 == null)) || (!((n_41662 === (0)))))){
cljs.core._write(writer,sep);

var G__41655_41663 = cljs.core.first(coll_41661__$1);
var G__41656_41664 = writer;
var G__41657_41665 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__41655_41663,G__41656_41664,G__41657_41665) : print_one.call(null,G__41655_41663,G__41656_41664,G__41657_41665));

var G__41666 = cljs.core.next(coll_41661__$1);
var G__41667 = (n_41662 - (1));
coll_41661__$1 = G__41666;
n_41662 = G__41667;
continue;
} else {
if((cljs.core.seq(coll_41661__$1)) && ((n_41662 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,(function (){var or__17677__auto__ = cljs.core.constant$keyword$54.cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__17677__auto__)){
return or__17677__auto__;
} else {
return "...";
}
})());
} else {
}
}
break;
}
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_41651;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__41672 = cljs.core.seq(ss);
var chunk__41673 = null;
var count__41674 = (0);
var i__41675 = (0);
while(true){
if((i__41675 < count__41674)){
var s = chunk__41673.cljs$core$IIndexed$_nth$arity$2(null,i__41675);
cljs.core._write(writer,s);

var G__41676 = seq__41672;
var G__41677 = chunk__41673;
var G__41678 = count__41674;
var G__41679 = (i__41675 + (1));
seq__41672 = G__41676;
chunk__41673 = G__41677;
count__41674 = G__41678;
i__41675 = G__41679;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__41672);
if(temp__4126__auto__){
var seq__41672__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__41672__$1)){
var c__18464__auto__ = cljs.core.chunk_first(seq__41672__$1);
var G__41680 = cljs.core.chunk_rest(seq__41672__$1);
var G__41681 = c__18464__auto__;
var G__41682 = cljs.core.count(c__18464__auto__);
var G__41683 = (0);
seq__41672 = G__41680;
chunk__41673 = G__41681;
count__41674 = G__41682;
i__41675 = G__41683;
continue;
} else {
var s = cljs.core.first(seq__41672__$1);
cljs.core._write(writer,s);

var G__41684 = cljs.core.next(seq__41672__$1);
var G__41685 = null;
var G__41686 = (0);
var G__41687 = (0);
seq__41672 = G__41684;
chunk__41673 = G__41685;
count__41674 = G__41686;
i__41675 = G__41687;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__41688__i = 0, G__41688__a = new Array(arguments.length -  1);
while (G__41688__i < G__41688__a.length) {G__41688__a[G__41688__i] = arguments[G__41688__i + 1]; ++G__41688__i;}
  ss = new cljs.core.IndexedSeq(G__41688__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__41689){
var writer = cljs.core.first(arglist__41689);
var ss = cljs.core.rest(arglist__41689);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj41691 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj41691;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__41694 = "[\\\\\"\b\f\n\r\t]";
var G__41695 = "g";
return RegExp(G__41694,G__41695);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
cljs.core.pr_writer_impl = (function pr_writer_impl(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__17665__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,cljs.core.constant$keyword$46);
if(cljs.core.truth_(and__17665__auto__)){
var and__17665__auto____$1 = (function (){var G__41709 = obj;
if(G__41709){
var bit__18358__auto__ = (G__41709.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__18358__auto__) || (G__41709.cljs$core$IMeta$)){
return true;
} else {
if((!G__41709.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__41709);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__41709);
}
})();
if(and__17665__auto____$1){
return cljs.core.meta(obj);
} else {
return and__17665__auto____$1;
}
} else {
return and__17665__auto__;
}
})())){
cljs.core._write(writer,"^");

var G__41710_41720 = cljs.core.meta(obj);
var G__41711_41721 = writer;
var G__41712_41722 = opts;
(cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__41710_41720,G__41711_41721,G__41712_41722) : cljs.core.pr_writer.call(null,G__41710_41720,G__41711_41721,G__41712_41722));

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__41713 = obj;
if(G__41713){
var bit__18351__auto__ = (G__41713.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__18351__auto__) || (G__41713.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__41714 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__41715 = cljs.core.pr_writer;
var G__41716 = writer;
var G__41717 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__41714,G__41715,G__41716,G__41717) : cljs.core.print_map.call(null,G__41714,G__41715,G__41716,G__41717));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__41718 = obj;
return goog.isString(G__41718);
})())){
if(cljs.core.truth_(cljs.core.constant$keyword$45.cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__41723 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__41723;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__41719 = obj;
if(G__41719){
var bit__18358__auto__ = (G__41719.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__18358__auto__) || (G__41719.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__41719.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__41719);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__41719);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
var temp__4124__auto__ = cljs.core.constant$keyword$55.cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(temp__4124__auto__)){
var alt_impl = temp__4124__auto__;
var G__41727 = obj;
var G__41728 = writer;
var G__41729 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,cljs.core.constant$keyword$56,cljs.core.pr_writer_impl);
return (alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__41727,G__41728,G__41729) : alt_impl.call(null,G__41727,G__41728,G__41729));
} else {
return cljs.core.pr_writer_impl(obj,writer,opts);
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__41734 = cljs.core.seq(cljs.core.next(objs));
var chunk__41735 = null;
var count__41736 = (0);
var i__41737 = (0);
while(true){
if((i__41737 < count__41736)){
var obj = chunk__41735.cljs$core$IIndexed$_nth$arity$2(null,i__41737);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__41738 = seq__41734;
var G__41739 = chunk__41735;
var G__41740 = count__41736;
var G__41741 = (i__41737 + (1));
seq__41734 = G__41738;
chunk__41735 = G__41739;
count__41736 = G__41740;
i__41737 = G__41741;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__41734);
if(temp__4126__auto__){
var seq__41734__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__41734__$1)){
var c__18464__auto__ = cljs.core.chunk_first(seq__41734__$1);
var G__41742 = cljs.core.chunk_rest(seq__41734__$1);
var G__41743 = c__18464__auto__;
var G__41744 = cljs.core.count(c__18464__auto__);
var G__41745 = (0);
seq__41734 = G__41742;
chunk__41735 = G__41743;
count__41736 = G__41744;
i__41737 = G__41745;
continue;
} else {
var obj = cljs.core.first(seq__41734__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__41746 = cljs.core.next(seq__41734__$1);
var G__41747 = null;
var G__41748 = (0);
var G__41749 = (0);
seq__41734 = G__41746;
chunk__41735 = G__41747;
count__41736 = G__41748;
i__41737 = G__41749;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,cljs.core.constant$keyword$44))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__41750__i = 0, G__41750__a = new Array(arguments.length -  0);
while (G__41750__i < G__41750__a.length) {G__41750__a[G__41750__i] = arguments[G__41750__i + 0]; ++G__41750__i;}
  objs = new cljs.core.IndexedSeq(G__41750__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__41751){
var objs = cljs.core.seq(arglist__41751);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__41752__i = 0, G__41752__a = new Array(arguments.length -  0);
while (G__41752__i < G__41752__a.length) {G__41752__a[G__41752__i] = arguments[G__41752__i + 0]; ++G__41752__i;}
  objs = new cljs.core.IndexedSeq(G__41752__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__41753){
var objs = cljs.core.seq(arglist__41753);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__41754__i = 0, G__41754__a = new Array(arguments.length -  0);
while (G__41754__i < G__41754__a.length) {G__41754__a[G__41754__i] = arguments[G__41754__i + 0]; ++G__41754__i;}
  objs = new cljs.core.IndexedSeq(G__41754__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__41755){
var objs = cljs.core.seq(arglist__41755);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$45,false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__41756__i = 0, G__41756__a = new Array(arguments.length -  0);
while (G__41756__i < G__41756__a.length) {G__41756__a[G__41756__i] = arguments[G__41756__i + 0]; ++G__41756__i;}
  objs = new cljs.core.IndexedSeq(G__41756__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__41757){
var objs = cljs.core.seq(arglist__41757);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$45,false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__41758__i = 0, G__41758__a = new Array(arguments.length -  0);
while (G__41758__i < G__41758__a.length) {G__41758__a[G__41758__i] = arguments[G__41758__i + 0]; ++G__41758__i;}
  objs = new cljs.core.IndexedSeq(G__41758__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__41759){
var objs = cljs.core.seq(arglist__41759);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$45,false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__41760__i = 0, G__41760__a = new Array(arguments.length -  0);
while (G__41760__i < G__41760__a.length) {G__41760__a[G__41760__i] = arguments[G__41760__i + 0]; ++G__41760__i;}
  objs = new cljs.core.IndexedSeq(G__41760__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__41761){
var objs = cljs.core.seq(arglist__41761);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$45,false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__41762__i = 0, G__41762__a = new Array(arguments.length -  0);
while (G__41762__i < G__41762__a.length) {G__41762__a[G__41762__i] = arguments[G__41762__i + 0]; ++G__41762__i;}
  objs = new cljs.core.IndexedSeq(G__41762__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__41763){
var objs = cljs.core.seq(arglist__41763);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__41764__i = 0, G__41764__a = new Array(arguments.length -  0);
while (G__41764__i < G__41764__a.length) {G__41764__a[G__41764__i] = arguments[G__41764__i + 0]; ++G__41764__i;}
  objs = new cljs.core.IndexedSeq(G__41764__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__41765){
var objs = cljs.core.seq(arglist__41765);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__41772_41778 = cljs.core.key(e);
var G__41773_41779 = w;
var G__41774_41780 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__41772_41778,G__41773_41779,G__41774_41780) : print_one.call(null,G__41772_41778,G__41773_41779,G__41774_41780));

cljs.core._write(w," ");

var G__41775 = cljs.core.val(e);
var G__41776 = w;
var G__41777 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__41775,G__41776,G__41777) : print_one.call(null,G__41775,G__41776,G__41777));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__41781__i = 0, G__41781__a = new Array(arguments.length -  2);
while (G__41781__i < G__41781__a.length) {G__41781__a[G__41781__i] = arguments[G__41781__i + 2]; ++G__41781__i;}
  args = new cljs.core.IndexedSeq(G__41781__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__41782){
var iref = cljs.core.first(arglist__41782);
arglist__41782 = cljs.core.next(arglist__41782);
var f = cljs.core.first(arglist__41782);
var args = cljs.core.rest(arglist__41782);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__41785 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__41785) : cljs.core.atom.call(null,G__41785));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__18264__auto__,writer__18265__auto__,opt__18266__auto__){
return cljs.core._write(writer__18265__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__41787 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__41787) : cljs.core.deref.call(null,G__41787));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__41788_SHARP_,p2__41789_SHARP_){
var ret = (function (){var G__41792 = p1__41788_SHARP_;
var G__41793 = p2__41789_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__41792,G__41793) : rf.call(null,G__41792,G__41793));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__41796 = null;
var G__41796__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__41796__1 = (function (result){
var G__41795 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__41795) : rf.call(null,G__41795));
});
var G__41796__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__41796 = function(result,input){
switch(arguments.length){
case 0:
return G__41796__0.call(this);
case 1:
return G__41796__1.call(this,result);
case 2:
return G__41796__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__41796.cljs$core$IFn$_invoke$arity$0 = G__41796__0;
G__41796.cljs$core$IFn$_invoke$arity$1 = G__41796__1;
G__41796.cljs$core$IFn$_invoke$arity$2 = G__41796__2;
return G__41796;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(cljs.core.constant$keyword$53);
return ((function (pa){
return (function() {
var G__41805 = null;
var G__41805__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__41805__1 = (function (result){
var G__41801 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__41801) : rf.call(null,G__41801));
});
var G__41805__2 = (function (result,input){
var prior = (function (){var G__41802 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__41802) : cljs.core.deref.call(null,G__41802));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__41803 = result;
var G__41804 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__41803,G__41804) : rf.call(null,G__41803,G__41804));
}
});
G__41805 = function(result,input){
switch(arguments.length){
case 0:
return G__41805__0.call(this);
case 1:
return G__41805__1.call(this,result);
case 2:
return G__41805__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__41805.cljs$core$IFn$_invoke$arity$0 = G__41805__0;
G__41805.cljs$core$IFn$_invoke$arity$1 = G__41805__1;
G__41805.cljs$core$IFn$_invoke$arity$2 = G__41805__2;
return G__41805;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__18264__auto__,writer__18265__auto__,opt__18266__auto__){
return cljs.core._write(writer__18265__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18655__auto__ = this;
return cljs.core.es6_iterator(this__18655__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__41807_SHARP_,p2__41806_SHARP_){
var G__41809 = p2__41806_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__41809) : proc.call(null,G__41809));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj41811 = {};
return obj41811;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__17665__auto__ = x;
if(and__17665__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__17665__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__18321__auto__ = (((x == null))?null:x);
return (function (){var or__17677__auto__ = (cljs.core._clj__GT_js[(function (){var G__41815 = x__18321__auto__;
return goog.typeOf(G__41815);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__17665__auto__ = x;
if(and__17665__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__17665__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__18321__auto__ = (((x == null))?null:x);
return (function (){var or__17677__auto__ = (cljs.core._key__GT_js[(function (){var G__41819 = x__18321__auto__;
return goog.typeOf(G__41819);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__41822 = k;
if(G__41822){
var bit__18358__auto__ = null;
if(cljs.core.truth_((function (){var or__17677__auto__ = bit__18358__auto__;
if(cljs.core.truth_(or__17677__auto__)){
return or__17677__auto__;
} else {
return G__41822.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__41822.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__41822);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__41822);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__41823 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__41823) : cljs.core.clj__GT_js.call(null,G__41823));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__41839 = x;
if(G__41839){
var bit__18358__auto__ = null;
if(cljs.core.truth_((function (){var or__17677__auto__ = bit__18358__auto__;
if(cljs.core.truth_(or__17677__auto__)){
return or__17677__auto__;
} else {
return G__41839.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__41839.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__41839);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__41839);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj41841 = {};
return obj41841;
})();
var seq__41842_41852 = cljs.core.seq(x);
var chunk__41843_41853 = null;
var count__41844_41854 = (0);
var i__41845_41855 = (0);
while(true){
if((i__41845_41855 < count__41844_41854)){
var vec__41846_41856 = chunk__41843_41853.cljs$core$IIndexed$_nth$arity$2(null,i__41845_41855);
var k_41857 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41846_41856,(0),null);
var v_41858 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41846_41856,(1),null);
(m[cljs.core.key__GT_js(k_41857)] = clj__GT_js(v_41858));

var G__41859 = seq__41842_41852;
var G__41860 = chunk__41843_41853;
var G__41861 = count__41844_41854;
var G__41862 = (i__41845_41855 + (1));
seq__41842_41852 = G__41859;
chunk__41843_41853 = G__41860;
count__41844_41854 = G__41861;
i__41845_41855 = G__41862;
continue;
} else {
var temp__4126__auto___41863 = cljs.core.seq(seq__41842_41852);
if(temp__4126__auto___41863){
var seq__41842_41864__$1 = temp__4126__auto___41863;
if(cljs.core.chunked_seq_QMARK_(seq__41842_41864__$1)){
var c__18464__auto___41865 = cljs.core.chunk_first(seq__41842_41864__$1);
var G__41866 = cljs.core.chunk_rest(seq__41842_41864__$1);
var G__41867 = c__18464__auto___41865;
var G__41868 = cljs.core.count(c__18464__auto___41865);
var G__41869 = (0);
seq__41842_41852 = G__41866;
chunk__41843_41853 = G__41867;
count__41844_41854 = G__41868;
i__41845_41855 = G__41869;
continue;
} else {
var vec__41847_41870 = cljs.core.first(seq__41842_41864__$1);
var k_41871 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41847_41870,(0),null);
var v_41872 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41847_41870,(1),null);
(m[cljs.core.key__GT_js(k_41871)] = clj__GT_js(v_41872));

var G__41873 = cljs.core.next(seq__41842_41864__$1);
var G__41874 = null;
var G__41875 = (0);
var G__41876 = (0);
seq__41842_41852 = G__41873;
chunk__41843_41853 = G__41874;
count__41844_41854 = G__41875;
i__41845_41855 = G__41876;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__41848_41877 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__41849_41878 = null;
var count__41850_41879 = (0);
var i__41851_41880 = (0);
while(true){
if((i__41851_41880 < count__41850_41879)){
var x_41881__$1 = chunk__41849_41878.cljs$core$IIndexed$_nth$arity$2(null,i__41851_41880);
arr.push(x_41881__$1);

var G__41882 = seq__41848_41877;
var G__41883 = chunk__41849_41878;
var G__41884 = count__41850_41879;
var G__41885 = (i__41851_41880 + (1));
seq__41848_41877 = G__41882;
chunk__41849_41878 = G__41883;
count__41850_41879 = G__41884;
i__41851_41880 = G__41885;
continue;
} else {
var temp__4126__auto___41886 = cljs.core.seq(seq__41848_41877);
if(temp__4126__auto___41886){
var seq__41848_41887__$1 = temp__4126__auto___41886;
if(cljs.core.chunked_seq_QMARK_(seq__41848_41887__$1)){
var c__18464__auto___41888 = cljs.core.chunk_first(seq__41848_41887__$1);
var G__41889 = cljs.core.chunk_rest(seq__41848_41887__$1);
var G__41890 = c__18464__auto___41888;
var G__41891 = cljs.core.count(c__18464__auto___41888);
var G__41892 = (0);
seq__41848_41877 = G__41889;
chunk__41849_41878 = G__41890;
count__41850_41879 = G__41891;
i__41851_41880 = G__41892;
continue;
} else {
var x_41893__$1 = cljs.core.first(seq__41848_41887__$1);
arr.push(x_41893__$1);

var G__41894 = cljs.core.next(seq__41848_41887__$1);
var G__41895 = null;
var G__41896 = (0);
var G__41897 = (0);
seq__41848_41877 = G__41894;
chunk__41849_41878 = G__41895;
count__41850_41879 = G__41896;
i__41851_41880 = G__41897;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj41899 = {};
return obj41899;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__17665__auto__ = x;
if(and__17665__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__17665__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__18321__auto__ = (((x == null))?null:x);
return (function (){var or__17677__auto__ = (cljs.core._js__GT_clj[(function (){var G__41903 = x__18321__auto__;
return goog.typeOf(G__41903);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$57,false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__41960__delegate = function (x,opts){
var map__41933 = opts;
var map__41933__$1 = ((cljs.core.seq_QMARK_(map__41933))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__41933):map__41933);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__41933__$1,cljs.core.constant$keyword$57);
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__41933,map__41933__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__41949 = x__$1;
if(G__41949){
var bit__18358__auto__ = null;
if(cljs.core.truth_((function (){var or__17677__auto__ = bit__18358__auto__;
if(cljs.core.truth_(or__17677__auto__)){
return or__17677__auto__;
} else {
return G__41949.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__41949.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__41949);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__41949);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__18433__auto__ = ((function (map__41933,map__41933__$1,keywordize_keys,keyfn){
return (function iter__41950(s__41951){
return (new cljs.core.LazySeq(null,((function (map__41933,map__41933__$1,keywordize_keys,keyfn){
return (function (){
var s__41951__$1 = s__41951;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__41951__$1);
if(temp__4126__auto__){
var s__41951__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__41951__$2)){
var c__18431__auto__ = cljs.core.chunk_first(s__41951__$2);
var size__18432__auto__ = cljs.core.count(c__18431__auto__);
var b__41953 = cljs.core.chunk_buffer(size__18432__auto__);
if((function (){var i__41952 = (0);
while(true){
if((i__41952 < size__18432__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__18431__auto__,i__41952);
cljs.core.chunk_append(b__41953,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__41958 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__41958) : keyfn.call(null,G__41958));
})(),thisfn((x__$1[k]))], null));

var G__41961 = (i__41952 + (1));
i__41952 = G__41961;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__41953),iter__41950(cljs.core.chunk_rest(s__41951__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__41953),null);
}
} else {
var k = cljs.core.first(s__41951__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__41959 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__41959) : keyfn.call(null,G__41959));
})(),thisfn((x__$1[k]))], null),iter__41950(cljs.core.rest(s__41951__$2)));
}
} else {
return null;
}
break;
}
});})(map__41933,map__41933__$1,keywordize_keys,keyfn))
,null,null));
});})(map__41933,map__41933__$1,keywordize_keys,keyfn))
;
return iter__18433__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__41933,map__41933__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__41960 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__41962__i = 0, G__41962__a = new Array(arguments.length -  1);
while (G__41962__i < G__41962__a.length) {G__41962__a[G__41962__i] = arguments[G__41962__i + 1]; ++G__41962__i;}
  opts = new cljs.core.IndexedSeq(G__41962__a,0);
} 
return G__41960__delegate.call(this,x,opts);};
G__41960.cljs$lang$maxFixedArity = 1;
G__41960.cljs$lang$applyTo = (function (arglist__41963){
var x = cljs.core.first(arglist__41963);
var opts = cljs.core.rest(arglist__41963);
return G__41960__delegate(x,opts);
});
G__41960.cljs$core$IFn$_invoke$arity$variadic = G__41960__delegate;
return G__41960;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__41964 = null;
if (arguments.length > 1) {
var G__41965__i = 0, G__41965__a = new Array(arguments.length -  1);
while (G__41965__i < G__41965__a.length) {G__41965__a[G__41965__i] = arguments[G__41965__i + 1]; ++G__41965__i;}
G__41964 = new cljs.core.IndexedSeq(G__41965__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__41964);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__41968 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__41968) : cljs.core.atom.call(null,G__41968));
})();
return ((function (mem){
return (function() { 
var G__41970__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__41969 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__41969) : cljs.core.deref.call(null,G__41969));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__41970 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__41971__i = 0, G__41971__a = new Array(arguments.length -  0);
while (G__41971__i < G__41971__a.length) {G__41971__a[G__41971__i] = arguments[G__41971__i + 0]; ++G__41971__i;}
  args = new cljs.core.IndexedSeq(G__41971__a,0);
} 
return G__41970__delegate.call(this,args);};
G__41970.cljs$lang$maxFixedArity = 0;
G__41970.cljs$lang$applyTo = (function (arglist__41972){
var args = cljs.core.seq(arglist__41972);
return G__41970__delegate(args);
});
G__41970.cljs$core$IFn$_invoke$arity$variadic = G__41970__delegate;
return G__41970;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__41974 = ret;
f = G__41974;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__41975__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__41975 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__41976__i = 0, G__41976__a = new Array(arguments.length -  1);
while (G__41976__i < G__41976__a.length) {G__41976__a[G__41976__i] = arguments[G__41976__i + 1]; ++G__41976__i;}
  args = new cljs.core.IndexedSeq(G__41976__a,0);
} 
return G__41975__delegate.call(this,f,args);};
G__41975.cljs$lang$maxFixedArity = 1;
G__41975.cljs$lang$applyTo = (function (arglist__41977){
var f = cljs.core.first(arglist__41977);
var args = cljs.core.rest(arglist__41977);
return G__41975__delegate(f,args);
});
G__41975.cljs$core$IFn$_invoke$arity$variadic = G__41975__delegate;
return G__41975;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__41978 = null;
if (arguments.length > 1) {
var G__41979__i = 0, G__41979__a = new Array(arguments.length -  1);
while (G__41979__i < G__41979__a.length) {G__41979__a[G__41979__i] = arguments[G__41979__i + 1]; ++G__41979__i;}
G__41978 = new cljs.core.IndexedSeq(G__41979__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__41978);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__41982 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__41982) : Math.floor.call(null,G__41982));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__41984 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__41984) : f.call(null,G__41984));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$58,cljs.core.PersistentArrayMap.EMPTY,cljs.core.constant$keyword$59,cljs.core.PersistentArrayMap.EMPTY,cljs.core.constant$keyword$60,cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__41986 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__41986) : cljs.core.atom.call(null,G__41986));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__41987__i = 0, G__41987__a = new Array(arguments.length -  1);
while (G__41987__i < G__41987__a.length) {G__41987__a[G__41987__i] = arguments[G__41987__i + 1]; ++G__41987__i;}
  args = new cljs.core.IndexedSeq(G__41987__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__41988){
var f = cljs.core.first(arglist__41988);
var args = cljs.core.rest(arglist__41988);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__42053 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__42053) : cljs.core.deref.call(null,G__42053));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__17677__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = cljs.core.contains_QMARK_(cljs.core.constant$keyword$60.cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
var and__17665__auto__ = cljs.core.vector_QMARK_(parent);
if(and__17665__auto__){
var and__17665__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__17665__auto____$1){
var and__17665__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__17665__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__42078 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__42076 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__42076) : child.call(null,G__42076));
})(),(function (){var G__42077 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__42077) : parent.call(null,G__42077));
})());
var G__42079 = (i + (1));
ret = G__42078;
i = G__42079;
continue;
}
break;
}
} else {
return and__17665__auto____$2;
}
} else {
return and__17665__auto____$1;
}
} else {
return and__17665__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__42083 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__42083) : cljs.core.deref.call(null,G__42083));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$58.cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__42087 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__42087) : cljs.core.deref.call(null,G__42087));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$60.cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__42091 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__42091) : cljs.core.deref.call(null,G__42091));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$59.cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = cljs.core.constant$keyword$58.cljs$core$IFn$_invoke$arity$1(h);
var td = cljs.core.constant$keyword$59.cljs$core$IFn$_invoke$arity$1(h);
var ta = cljs.core.constant$keyword$60.cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__42100 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__42100) : targets.call(null,G__42100));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__42101 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__42101) : sources.call(null,G__42101));
})()));
});})(tp,td,ta))
;
var or__17677__auto__ = ((cljs.core.contains_QMARK_((function (){var G__42105 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__42105) : tp.call(null,G__42105));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__42106 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__42106) : ta.call(null,G__42106));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__42107 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__42107) : ta.call(null,G__42107));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$58,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.constant$keyword$58.cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),cljs.core.constant$keyword$60,tf(cljs.core.constant$keyword$60.cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),cljs.core.constant$keyword$59,tf(cljs.core.constant$keyword$59.cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__17677__auto__)){
return or__17677__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = cljs.core.constant$keyword$58.cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__42114 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__42114) : parentMap.call(null,G__42114));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__42115 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__42115) : parentMap.call(null,G__42115));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__42108_SHARP_){
return cljs.core.cons(cljs.core.first(p1__42108_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__42108_SHARP_),cljs.core.second(p1__42108_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__42116 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__42116) : parentMap.call(null,G__42116));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__42109_SHARP_,p2__42110_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__42109_SHARP_,p2__42110_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__42119 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__42119) : cljs.core.deref.call(null,G__42119));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__42120 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__42120) : cljs.core.deref.call(null,G__42120));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__42136 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__42136) : cljs.core.deref.call(null,G__42136));
})().call(null,x);
var or__17677__auto__ = (cljs.core.truth_((function (){var and__17665__auto__ = xprefs;
if(cljs.core.truth_(and__17665__auto__)){
var G__42138 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__42138) : xprefs.call(null,G__42138));
} else {
return and__17665__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__17677__auto__)){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__42139 = cljs.core.rest(ps);
ps = G__42139;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__17677__auto____$1)){
return or__17677__auto____$1;
} else {
var or__17677__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__42140 = cljs.core.rest(ps);
ps = G__42140;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__17677__auto____$2)){
return or__17677__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__17677__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__17677__auto__)){
return or__17677__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__42154){
var vec__42155 = p__42154;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__42155,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__42155,(1),null);
var e = vec__42155;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__42156 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__42156) : cljs.core.deref.call(null,G__42156));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__17677__auto__ = (be == null);
if(or__17677__auto__){
return or__17677__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__42157 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__42157) : cljs.core.deref.call(null,G__42157));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__42158 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__42158) : cljs.core.deref.call(null,G__42158));
})(),(function (){var G__42159 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__42159) : cljs.core.deref.call(null,G__42159));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj42161 = {};
return obj42161;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__17665__auto__ = mf;
if(and__17665__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__17665__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__18321__auto__ = (((mf == null))?null:mf);
return (function (){var or__17677__auto__ = (cljs.core._reset[(function (){var G__42165 = x__18321__auto__;
return goog.typeOf(G__42165);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._reset["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__17665__auto__ = mf;
if(and__17665__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__17665__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__18321__auto__ = (((mf == null))?null:mf);
return (function (){var or__17677__auto__ = (cljs.core._add_method[(function (){var G__42169 = x__18321__auto__;
return goog.typeOf(G__42169);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._add_method["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__17665__auto__ = mf;
if(and__17665__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__17665__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__18321__auto__ = (((mf == null))?null:mf);
return (function (){var or__17677__auto__ = (cljs.core._remove_method[(function (){var G__42173 = x__18321__auto__;
return goog.typeOf(G__42173);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._remove_method["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__17665__auto__ = mf;
if(and__17665__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__17665__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__18321__auto__ = (((mf == null))?null:mf);
return (function (){var or__17677__auto__ = (cljs.core._prefer_method[(function (){var G__42177 = x__18321__auto__;
return goog.typeOf(G__42177);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__17665__auto__ = mf;
if(and__17665__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__17665__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__18321__auto__ = (((mf == null))?null:mf);
return (function (){var or__17677__auto__ = (cljs.core._get_method[(function (){var G__42181 = x__18321__auto__;
return goog.typeOf(G__42181);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._get_method["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__17665__auto__ = mf;
if(and__17665__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__17665__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__18321__auto__ = (((mf == null))?null:mf);
return (function (){var or__17677__auto__ = (cljs.core._methods[(function (){var G__42185 = x__18321__auto__;
return goog.typeOf(G__42185);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._methods["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__17665__auto__ = mf;
if(and__17665__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__17665__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__18321__auto__ = (((mf == null))?null:mf);
return (function (){var or__17677__auto__ = (cljs.core._prefers[(function (){var G__42189 = x__18321__auto__;
return goog.typeOf(G__42189);
})()]);
if(or__17677__auto__){
return or__17677__auto__;
} else {
var or__17677__auto____$1 = (cljs.core._prefers["_"]);
if(or__17677__auto____$1){
return or__17677__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__42191 = this$__$1;
return goog.getUid(G__42191);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__42192 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__42192) : cljs.core.deref.call(null,G__42192));
})(),(function (){var G__42193 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__42193) : cljs.core.deref.call(null,G__42193));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__42194 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__42194) : cljs.core.deref.call(null,G__42194));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__42195 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__42195) : cljs.core.deref.call(null,G__42195));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__42196 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__42196) : cljs.core.deref.call(null,G__42196));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__42197 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__42197) : cljs.core.deref.call(null,G__42197));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__43038 = null;
var G__43038__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__43038__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__42198 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__42198) : self__.dispatch_fn.call(null,G__42198));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__42199 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__42199) : target_fn.call(null,G__42199));
});
var G__43038__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__42200 = a;
var G__42201 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__42200,G__42201) : self__.dispatch_fn.call(null,G__42200,G__42201));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__42202 = a;
var G__42203 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__42202,G__42203) : target_fn.call(null,G__42202,G__42203));
});
var G__43038__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__42204 = a;
var G__42205 = b;
var G__42206 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__42204,G__42205,G__42206) : self__.dispatch_fn.call(null,G__42204,G__42205,G__42206));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__42207 = a;
var G__42208 = b;
var G__42209 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__42207,G__42208,G__42209) : target_fn.call(null,G__42207,G__42208,G__42209));
});
var G__43038__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__42210 = a;
var G__42211 = b;
var G__42212 = c;
var G__42213 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__42210,G__42211,G__42212,G__42213) : self__.dispatch_fn.call(null,G__42210,G__42211,G__42212,G__42213));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__42214 = a;
var G__42215 = b;
var G__42216 = c;
var G__42217 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__42214,G__42215,G__42216,G__42217) : target_fn.call(null,G__42214,G__42215,G__42216,G__42217));
});
var G__43038__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__42218 = a;
var G__42219 = b;
var G__42220 = c;
var G__42221 = d;
var G__42222 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__42218,G__42219,G__42220,G__42221,G__42222) : self__.dispatch_fn.call(null,G__42218,G__42219,G__42220,G__42221,G__42222));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__42223 = a;
var G__42224 = b;
var G__42225 = c;
var G__42226 = d;
var G__42227 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__42223,G__42224,G__42225,G__42226,G__42227) : target_fn.call(null,G__42223,G__42224,G__42225,G__42226,G__42227));
});
var G__43038__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__42228 = a;
var G__42229 = b;
var G__42230 = c;
var G__42231 = d;
var G__42232 = e;
var G__42233 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__42228,G__42229,G__42230,G__42231,G__42232,G__42233) : self__.dispatch_fn.call(null,G__42228,G__42229,G__42230,G__42231,G__42232,G__42233));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__42234 = a;
var G__42235 = b;
var G__42236 = c;
var G__42237 = d;
var G__42238 = e;
var G__42239 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__42234,G__42235,G__42236,G__42237,G__42238,G__42239) : target_fn.call(null,G__42234,G__42235,G__42236,G__42237,G__42238,G__42239));
});
var G__43038__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__42240 = a;
var G__42241 = b;
var G__42242 = c;
var G__42243 = d;
var G__42244 = e;
var G__42245 = f;
var G__42246 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__42240,G__42241,G__42242,G__42243,G__42244,G__42245,G__42246) : self__.dispatch_fn.call(null,G__42240,G__42241,G__42242,G__42243,G__42244,G__42245,G__42246));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__42247 = a;
var G__42248 = b;
var G__42249 = c;
var G__42250 = d;
var G__42251 = e;
var G__42252 = f;
var G__42253 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__42247,G__42248,G__42249,G__42250,G__42251,G__42252,G__42253) : target_fn.call(null,G__42247,G__42248,G__42249,G__42250,G__42251,G__42252,G__42253));
});
var G__43038__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__42254 = a;
var G__42255 = b;
var G__42256 = c;
var G__42257 = d;
var G__42258 = e;
var G__42259 = f;
var G__42260 = g;
var G__42261 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__42254,G__42255,G__42256,G__42257,G__42258,G__42259,G__42260,G__42261) : self__.dispatch_fn.call(null,G__42254,G__42255,G__42256,G__42257,G__42258,G__42259,G__42260,G__42261));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__42262 = a;
var G__42263 = b;
var G__42264 = c;
var G__42265 = d;
var G__42266 = e;
var G__42267 = f;
var G__42268 = g;
var G__42269 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__42262,G__42263,G__42264,G__42265,G__42266,G__42267,G__42268,G__42269) : target_fn.call(null,G__42262,G__42263,G__42264,G__42265,G__42266,G__42267,G__42268,G__42269));
});
var G__43038__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__42270 = a;
var G__42271 = b;
var G__42272 = c;
var G__42273 = d;
var G__42274 = e;
var G__42275 = f;
var G__42276 = g;
var G__42277 = h;
var G__42278 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__42270,G__42271,G__42272,G__42273,G__42274,G__42275,G__42276,G__42277,G__42278) : self__.dispatch_fn.call(null,G__42270,G__42271,G__42272,G__42273,G__42274,G__42275,G__42276,G__42277,G__42278));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__42279 = a;
var G__42280 = b;
var G__42281 = c;
var G__42282 = d;
var G__42283 = e;
var G__42284 = f;
var G__42285 = g;
var G__42286 = h;
var G__42287 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__42279,G__42280,G__42281,G__42282,G__42283,G__42284,G__42285,G__42286,G__42287) : target_fn.call(null,G__42279,G__42280,G__42281,G__42282,G__42283,G__42284,G__42285,G__42286,G__42287));
});
var G__43038__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__42288 = a;
var G__42289 = b;
var G__42290 = c;
var G__42291 = d;
var G__42292 = e;
var G__42293 = f;
var G__42294 = g;
var G__42295 = h;
var G__42296 = i;
var G__42297 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__42288,G__42289,G__42290,G__42291,G__42292,G__42293,G__42294,G__42295,G__42296,G__42297) : self__.dispatch_fn.call(null,G__42288,G__42289,G__42290,G__42291,G__42292,G__42293,G__42294,G__42295,G__42296,G__42297));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__42298 = a;
var G__42299 = b;
var G__42300 = c;
var G__42301 = d;
var G__42302 = e;
var G__42303 = f;
var G__42304 = g;
var G__42305 = h;
var G__42306 = i;
var G__42307 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__42298,G__42299,G__42300,G__42301,G__42302,G__42303,G__42304,G__42305,G__42306,G__42307) : target_fn.call(null,G__42298,G__42299,G__42300,G__42301,G__42302,G__42303,G__42304,G__42305,G__42306,G__42307));
});
var G__43038__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__42308 = a;
var G__42309 = b;
var G__42310 = c;
var G__42311 = d;
var G__42312 = e;
var G__42313 = f;
var G__42314 = g;
var G__42315 = h;
var G__42316 = i;
var G__42317 = j;
var G__42318 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__42308,G__42309,G__42310,G__42311,G__42312,G__42313,G__42314,G__42315,G__42316,G__42317,G__42318) : self__.dispatch_fn.call(null,G__42308,G__42309,G__42310,G__42311,G__42312,G__42313,G__42314,G__42315,G__42316,G__42317,G__42318));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__42319 = a;
var G__42320 = b;
var G__42321 = c;
var G__42322 = d;
var G__42323 = e;
var G__42324 = f;
var G__42325 = g;
var G__42326 = h;
var G__42327 = i;
var G__42328 = j;
var G__42329 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__42319,G__42320,G__42321,G__42322,G__42323,G__42324,G__42325,G__42326,G__42327,G__42328,G__42329) : target_fn.call(null,G__42319,G__42320,G__42321,G__42322,G__42323,G__42324,G__42325,G__42326,G__42327,G__42328,G__42329));
});
var G__43038__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__42330 = a;
var G__42331 = b;
var G__42332 = c;
var G__42333 = d;
var G__42334 = e;
var G__42335 = f;
var G__42336 = g;
var G__42337 = h;
var G__42338 = i;
var G__42339 = j;
var G__42340 = k;
var G__42341 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__42330,G__42331,G__42332,G__42333,G__42334,G__42335,G__42336,G__42337,G__42338,G__42339,G__42340,G__42341) : self__.dispatch_fn.call(null,G__42330,G__42331,G__42332,G__42333,G__42334,G__42335,G__42336,G__42337,G__42338,G__42339,G__42340,G__42341));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__42342 = a;
var G__42343 = b;
var G__42344 = c;
var G__42345 = d;
var G__42346 = e;
var G__42347 = f;
var G__42348 = g;
var G__42349 = h;
var G__42350 = i;
var G__42351 = j;
var G__42352 = k;
var G__42353 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__42342,G__42343,G__42344,G__42345,G__42346,G__42347,G__42348,G__42349,G__42350,G__42351,G__42352,G__42353) : target_fn.call(null,G__42342,G__42343,G__42344,G__42345,G__42346,G__42347,G__42348,G__42349,G__42350,G__42351,G__42352,G__42353));
});
var G__43038__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__42354 = a;
var G__42355 = b;
var G__42356 = c;
var G__42357 = d;
var G__42358 = e;
var G__42359 = f;
var G__42360 = g;
var G__42361 = h;
var G__42362 = i;
var G__42363 = j;
var G__42364 = k;
var G__42365 = l;
var G__42366 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__42354,G__42355,G__42356,G__42357,G__42358,G__42359,G__42360,G__42361,G__42362,G__42363,G__42364,G__42365,G__42366) : self__.dispatch_fn.call(null,G__42354,G__42355,G__42356,G__42357,G__42358,G__42359,G__42360,G__42361,G__42362,G__42363,G__42364,G__42365,G__42366));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__42367 = a;
var G__42368 = b;
var G__42369 = c;
var G__42370 = d;
var G__42371 = e;
var G__42372 = f;
var G__42373 = g;
var G__42374 = h;
var G__42375 = i;
var G__42376 = j;
var G__42377 = k;
var G__42378 = l;
var G__42379 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__42367,G__42368,G__42369,G__42370,G__42371,G__42372,G__42373,G__42374,G__42375,G__42376,G__42377,G__42378,G__42379) : target_fn.call(null,G__42367,G__42368,G__42369,G__42370,G__42371,G__42372,G__42373,G__42374,G__42375,G__42376,G__42377,G__42378,G__42379));
});
var G__43038__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__42380 = a;
var G__42381 = b;
var G__42382 = c;
var G__42383 = d;
var G__42384 = e;
var G__42385 = f;
var G__42386 = g;
var G__42387 = h;
var G__42388 = i;
var G__42389 = j;
var G__42390 = k;
var G__42391 = l;
var G__42392 = m;
var G__42393 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__42380,G__42381,G__42382,G__42383,G__42384,G__42385,G__42386,G__42387,G__42388,G__42389,G__42390,G__42391,G__42392,G__42393) : self__.dispatch_fn.call(null,G__42380,G__42381,G__42382,G__42383,G__42384,G__42385,G__42386,G__42387,G__42388,G__42389,G__42390,G__42391,G__42392,G__42393));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__42394 = a;
var G__42395 = b;
var G__42396 = c;
var G__42397 = d;
var G__42398 = e;
var G__42399 = f;
var G__42400 = g;
var G__42401 = h;
var G__42402 = i;
var G__42403 = j;
var G__42404 = k;
var G__42405 = l;
var G__42406 = m;
var G__42407 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__42394,G__42395,G__42396,G__42397,G__42398,G__42399,G__42400,G__42401,G__42402,G__42403,G__42404,G__42405,G__42406,G__42407) : target_fn.call(null,G__42394,G__42395,G__42396,G__42397,G__42398,G__42399,G__42400,G__42401,G__42402,G__42403,G__42404,G__42405,G__42406,G__42407));
});
var G__43038__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__42408 = a;
var G__42409 = b;
var G__42410 = c;
var G__42411 = d;
var G__42412 = e;
var G__42413 = f;
var G__42414 = g;
var G__42415 = h;
var G__42416 = i;
var G__42417 = j;
var G__42418 = k;
var G__42419 = l;
var G__42420 = m;
var G__42421 = n;
var G__42422 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__42408,G__42409,G__42410,G__42411,G__42412,G__42413,G__42414,G__42415,G__42416,G__42417,G__42418,G__42419,G__42420,G__42421,G__42422) : self__.dispatch_fn.call(null,G__42408,G__42409,G__42410,G__42411,G__42412,G__42413,G__42414,G__42415,G__42416,G__42417,G__42418,G__42419,G__42420,G__42421,G__42422));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__42423 = a;
var G__42424 = b;
var G__42425 = c;
var G__42426 = d;
var G__42427 = e;
var G__42428 = f;
var G__42429 = g;
var G__42430 = h;
var G__42431 = i;
var G__42432 = j;
var G__42433 = k;
var G__42434 = l;
var G__42435 = m;
var G__42436 = n;
var G__42437 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__42423,G__42424,G__42425,G__42426,G__42427,G__42428,G__42429,G__42430,G__42431,G__42432,G__42433,G__42434,G__42435,G__42436,G__42437) : target_fn.call(null,G__42423,G__42424,G__42425,G__42426,G__42427,G__42428,G__42429,G__42430,G__42431,G__42432,G__42433,G__42434,G__42435,G__42436,G__42437));
});
var G__43038__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__42438 = a;
var G__42439 = b;
var G__42440 = c;
var G__42441 = d;
var G__42442 = e;
var G__42443 = f;
var G__42444 = g;
var G__42445 = h;
var G__42446 = i;
var G__42447 = j;
var G__42448 = k;
var G__42449 = l;
var G__42450 = m;
var G__42451 = n;
var G__42452 = o;
var G__42453 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__42438,G__42439,G__42440,G__42441,G__42442,G__42443,G__42444,G__42445,G__42446,G__42447,G__42448,G__42449,G__42450,G__42451,G__42452,G__42453) : self__.dispatch_fn.call(null,G__42438,G__42439,G__42440,G__42441,G__42442,G__42443,G__42444,G__42445,G__42446,G__42447,G__42448,G__42449,G__42450,G__42451,G__42452,G__42453));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__42454 = a;
var G__42455 = b;
var G__42456 = c;
var G__42457 = d;
var G__42458 = e;
var G__42459 = f;
var G__42460 = g;
var G__42461 = h;
var G__42462 = i;
var G__42463 = j;
var G__42464 = k;
var G__42465 = l;
var G__42466 = m;
var G__42467 = n;
var G__42468 = o;
var G__42469 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__42454,G__42455,G__42456,G__42457,G__42458,G__42459,G__42460,G__42461,G__42462,G__42463,G__42464,G__42465,G__42466,G__42467,G__42468,G__42469) : target_fn.call(null,G__42454,G__42455,G__42456,G__42457,G__42458,G__42459,G__42460,G__42461,G__42462,G__42463,G__42464,G__42465,G__42466,G__42467,G__42468,G__42469));
});
var G__43038__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__42470 = a;
var G__42471 = b;
var G__42472 = c;
var G__42473 = d;
var G__42474 = e;
var G__42475 = f;
var G__42476 = g;
var G__42477 = h;
var G__42478 = i;
var G__42479 = j;
var G__42480 = k;
var G__42481 = l;
var G__42482 = m;
var G__42483 = n;
var G__42484 = o;
var G__42485 = p;
var G__42486 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__42470,G__42471,G__42472,G__42473,G__42474,G__42475,G__42476,G__42477,G__42478,G__42479,G__42480,G__42481,G__42482,G__42483,G__42484,G__42485,G__42486) : self__.dispatch_fn.call(null,G__42470,G__42471,G__42472,G__42473,G__42474,G__42475,G__42476,G__42477,G__42478,G__42479,G__42480,G__42481,G__42482,G__42483,G__42484,G__42485,G__42486));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__42487 = a;
var G__42488 = b;
var G__42489 = c;
var G__42490 = d;
var G__42491 = e;
var G__42492 = f;
var G__42493 = g;
var G__42494 = h;
var G__42495 = i;
var G__42496 = j;
var G__42497 = k;
var G__42498 = l;
var G__42499 = m;
var G__42500 = n;
var G__42501 = o;
var G__42502 = p;
var G__42503 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__42487,G__42488,G__42489,G__42490,G__42491,G__42492,G__42493,G__42494,G__42495,G__42496,G__42497,G__42498,G__42499,G__42500,G__42501,G__42502,G__42503) : target_fn.call(null,G__42487,G__42488,G__42489,G__42490,G__42491,G__42492,G__42493,G__42494,G__42495,G__42496,G__42497,G__42498,G__42499,G__42500,G__42501,G__42502,G__42503));
});
var G__43038__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__42504 = a;
var G__42505 = b;
var G__42506 = c;
var G__42507 = d;
var G__42508 = e;
var G__42509 = f;
var G__42510 = g;
var G__42511 = h;
var G__42512 = i;
var G__42513 = j;
var G__42514 = k;
var G__42515 = l;
var G__42516 = m;
var G__42517 = n;
var G__42518 = o;
var G__42519 = p;
var G__42520 = q;
var G__42521 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__42504,G__42505,G__42506,G__42507,G__42508,G__42509,G__42510,G__42511,G__42512,G__42513,G__42514,G__42515,G__42516,G__42517,G__42518,G__42519,G__42520,G__42521) : self__.dispatch_fn.call(null,G__42504,G__42505,G__42506,G__42507,G__42508,G__42509,G__42510,G__42511,G__42512,G__42513,G__42514,G__42515,G__42516,G__42517,G__42518,G__42519,G__42520,G__42521));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__42522 = a;
var G__42523 = b;
var G__42524 = c;
var G__42525 = d;
var G__42526 = e;
var G__42527 = f;
var G__42528 = g;
var G__42529 = h;
var G__42530 = i;
var G__42531 = j;
var G__42532 = k;
var G__42533 = l;
var G__42534 = m;
var G__42535 = n;
var G__42536 = o;
var G__42537 = p;
var G__42538 = q;
var G__42539 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__42522,G__42523,G__42524,G__42525,G__42526,G__42527,G__42528,G__42529,G__42530,G__42531,G__42532,G__42533,G__42534,G__42535,G__42536,G__42537,G__42538,G__42539) : target_fn.call(null,G__42522,G__42523,G__42524,G__42525,G__42526,G__42527,G__42528,G__42529,G__42530,G__42531,G__42532,G__42533,G__42534,G__42535,G__42536,G__42537,G__42538,G__42539));
});
var G__43038__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__42540 = a;
var G__42541 = b;
var G__42542 = c;
var G__42543 = d;
var G__42544 = e;
var G__42545 = f;
var G__42546 = g;
var G__42547 = h;
var G__42548 = i;
var G__42549 = j;
var G__42550 = k;
var G__42551 = l;
var G__42552 = m;
var G__42553 = n;
var G__42554 = o;
var G__42555 = p;
var G__42556 = q;
var G__42557 = r;
var G__42558 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__42540,G__42541,G__42542,G__42543,G__42544,G__42545,G__42546,G__42547,G__42548,G__42549,G__42550,G__42551,G__42552,G__42553,G__42554,G__42555,G__42556,G__42557,G__42558) : self__.dispatch_fn.call(null,G__42540,G__42541,G__42542,G__42543,G__42544,G__42545,G__42546,G__42547,G__42548,G__42549,G__42550,G__42551,G__42552,G__42553,G__42554,G__42555,G__42556,G__42557,G__42558));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__42559 = a;
var G__42560 = b;
var G__42561 = c;
var G__42562 = d;
var G__42563 = e;
var G__42564 = f;
var G__42565 = g;
var G__42566 = h;
var G__42567 = i;
var G__42568 = j;
var G__42569 = k;
var G__42570 = l;
var G__42571 = m;
var G__42572 = n;
var G__42573 = o;
var G__42574 = p;
var G__42575 = q;
var G__42576 = r;
var G__42577 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__42559,G__42560,G__42561,G__42562,G__42563,G__42564,G__42565,G__42566,G__42567,G__42568,G__42569,G__42570,G__42571,G__42572,G__42573,G__42574,G__42575,G__42576,G__42577) : target_fn.call(null,G__42559,G__42560,G__42561,G__42562,G__42563,G__42564,G__42565,G__42566,G__42567,G__42568,G__42569,G__42570,G__42571,G__42572,G__42573,G__42574,G__42575,G__42576,G__42577));
});
var G__43038__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__42578 = a;
var G__42579 = b;
var G__42580 = c;
var G__42581 = d;
var G__42582 = e;
var G__42583 = f;
var G__42584 = g;
var G__42585 = h;
var G__42586 = i;
var G__42587 = j;
var G__42588 = k;
var G__42589 = l;
var G__42590 = m;
var G__42591 = n;
var G__42592 = o;
var G__42593 = p;
var G__42594 = q;
var G__42595 = r;
var G__42596 = s;
var G__42597 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__42578,G__42579,G__42580,G__42581,G__42582,G__42583,G__42584,G__42585,G__42586,G__42587,G__42588,G__42589,G__42590,G__42591,G__42592,G__42593,G__42594,G__42595,G__42596,G__42597) : self__.dispatch_fn.call(null,G__42578,G__42579,G__42580,G__42581,G__42582,G__42583,G__42584,G__42585,G__42586,G__42587,G__42588,G__42589,G__42590,G__42591,G__42592,G__42593,G__42594,G__42595,G__42596,G__42597));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__42598 = a;
var G__42599 = b;
var G__42600 = c;
var G__42601 = d;
var G__42602 = e;
var G__42603 = f;
var G__42604 = g;
var G__42605 = h;
var G__42606 = i;
var G__42607 = j;
var G__42608 = k;
var G__42609 = l;
var G__42610 = m;
var G__42611 = n;
var G__42612 = o;
var G__42613 = p;
var G__42614 = q;
var G__42615 = r;
var G__42616 = s;
var G__42617 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__42598,G__42599,G__42600,G__42601,G__42602,G__42603,G__42604,G__42605,G__42606,G__42607,G__42608,G__42609,G__42610,G__42611,G__42612,G__42613,G__42614,G__42615,G__42616,G__42617) : target_fn.call(null,G__42598,G__42599,G__42600,G__42601,G__42602,G__42603,G__42604,G__42605,G__42606,G__42607,G__42608,G__42609,G__42610,G__42611,G__42612,G__42613,G__42614,G__42615,G__42616,G__42617));
});
var G__43038__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__43038 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__43038__1.call(this,self__);
case 2:
return G__43038__2.call(this,self__,a);
case 3:
return G__43038__3.call(this,self__,a,b);
case 4:
return G__43038__4.call(this,self__,a,b,c);
case 5:
return G__43038__5.call(this,self__,a,b,c,d);
case 6:
return G__43038__6.call(this,self__,a,b,c,d,e);
case 7:
return G__43038__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__43038__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__43038__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__43038__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__43038__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__43038__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__43038__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__43038__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__43038__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__43038__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__43038__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__43038__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__43038__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__43038__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__43038__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__43038__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__43038.cljs$core$IFn$_invoke$arity$1 = G__43038__1;
G__43038.cljs$core$IFn$_invoke$arity$2 = G__43038__2;
G__43038.cljs$core$IFn$_invoke$arity$3 = G__43038__3;
G__43038.cljs$core$IFn$_invoke$arity$4 = G__43038__4;
G__43038.cljs$core$IFn$_invoke$arity$5 = G__43038__5;
G__43038.cljs$core$IFn$_invoke$arity$6 = G__43038__6;
G__43038.cljs$core$IFn$_invoke$arity$7 = G__43038__7;
G__43038.cljs$core$IFn$_invoke$arity$8 = G__43038__8;
G__43038.cljs$core$IFn$_invoke$arity$9 = G__43038__9;
G__43038.cljs$core$IFn$_invoke$arity$10 = G__43038__10;
G__43038.cljs$core$IFn$_invoke$arity$11 = G__43038__11;
G__43038.cljs$core$IFn$_invoke$arity$12 = G__43038__12;
G__43038.cljs$core$IFn$_invoke$arity$13 = G__43038__13;
G__43038.cljs$core$IFn$_invoke$arity$14 = G__43038__14;
G__43038.cljs$core$IFn$_invoke$arity$15 = G__43038__15;
G__43038.cljs$core$IFn$_invoke$arity$16 = G__43038__16;
G__43038.cljs$core$IFn$_invoke$arity$17 = G__43038__17;
G__43038.cljs$core$IFn$_invoke$arity$18 = G__43038__18;
G__43038.cljs$core$IFn$_invoke$arity$19 = G__43038__19;
G__43038.cljs$core$IFn$_invoke$arity$20 = G__43038__20;
G__43038.cljs$core$IFn$_invoke$arity$21 = G__43038__21;
G__43038.cljs$core$IFn$_invoke$arity$22 = G__43038__22;
return G__43038;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args42190){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args42190)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__42618 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__42618) : self__.dispatch_fn.call(null,G__42618));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__42619 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__42619) : target_fn.call(null,G__42619));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__42620 = a;
var G__42621 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__42620,G__42621) : self__.dispatch_fn.call(null,G__42620,G__42621));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__42622 = a;
var G__42623 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__42622,G__42623) : target_fn.call(null,G__42622,G__42623));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__42624 = a;
var G__42625 = b;
var G__42626 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__42624,G__42625,G__42626) : self__.dispatch_fn.call(null,G__42624,G__42625,G__42626));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__42627 = a;
var G__42628 = b;
var G__42629 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__42627,G__42628,G__42629) : target_fn.call(null,G__42627,G__42628,G__42629));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__42630 = a;
var G__42631 = b;
var G__42632 = c;
var G__42633 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__42630,G__42631,G__42632,G__42633) : self__.dispatch_fn.call(null,G__42630,G__42631,G__42632,G__42633));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__42634 = a;
var G__42635 = b;
var G__42636 = c;
var G__42637 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__42634,G__42635,G__42636,G__42637) : target_fn.call(null,G__42634,G__42635,G__42636,G__42637));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__42638 = a;
var G__42639 = b;
var G__42640 = c;
var G__42641 = d;
var G__42642 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__42638,G__42639,G__42640,G__42641,G__42642) : self__.dispatch_fn.call(null,G__42638,G__42639,G__42640,G__42641,G__42642));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__42643 = a;
var G__42644 = b;
var G__42645 = c;
var G__42646 = d;
var G__42647 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__42643,G__42644,G__42645,G__42646,G__42647) : target_fn.call(null,G__42643,G__42644,G__42645,G__42646,G__42647));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__42648 = a;
var G__42649 = b;
var G__42650 = c;
var G__42651 = d;
var G__42652 = e;
var G__42653 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__42648,G__42649,G__42650,G__42651,G__42652,G__42653) : self__.dispatch_fn.call(null,G__42648,G__42649,G__42650,G__42651,G__42652,G__42653));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__42654 = a;
var G__42655 = b;
var G__42656 = c;
var G__42657 = d;
var G__42658 = e;
var G__42659 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__42654,G__42655,G__42656,G__42657,G__42658,G__42659) : target_fn.call(null,G__42654,G__42655,G__42656,G__42657,G__42658,G__42659));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__42660 = a;
var G__42661 = b;
var G__42662 = c;
var G__42663 = d;
var G__42664 = e;
var G__42665 = f;
var G__42666 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__42660,G__42661,G__42662,G__42663,G__42664,G__42665,G__42666) : self__.dispatch_fn.call(null,G__42660,G__42661,G__42662,G__42663,G__42664,G__42665,G__42666));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__42667 = a;
var G__42668 = b;
var G__42669 = c;
var G__42670 = d;
var G__42671 = e;
var G__42672 = f;
var G__42673 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__42667,G__42668,G__42669,G__42670,G__42671,G__42672,G__42673) : target_fn.call(null,G__42667,G__42668,G__42669,G__42670,G__42671,G__42672,G__42673));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__42674 = a;
var G__42675 = b;
var G__42676 = c;
var G__42677 = d;
var G__42678 = e;
var G__42679 = f;
var G__42680 = g;
var G__42681 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__42674,G__42675,G__42676,G__42677,G__42678,G__42679,G__42680,G__42681) : self__.dispatch_fn.call(null,G__42674,G__42675,G__42676,G__42677,G__42678,G__42679,G__42680,G__42681));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__42682 = a;
var G__42683 = b;
var G__42684 = c;
var G__42685 = d;
var G__42686 = e;
var G__42687 = f;
var G__42688 = g;
var G__42689 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__42682,G__42683,G__42684,G__42685,G__42686,G__42687,G__42688,G__42689) : target_fn.call(null,G__42682,G__42683,G__42684,G__42685,G__42686,G__42687,G__42688,G__42689));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__42690 = a;
var G__42691 = b;
var G__42692 = c;
var G__42693 = d;
var G__42694 = e;
var G__42695 = f;
var G__42696 = g;
var G__42697 = h;
var G__42698 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__42690,G__42691,G__42692,G__42693,G__42694,G__42695,G__42696,G__42697,G__42698) : self__.dispatch_fn.call(null,G__42690,G__42691,G__42692,G__42693,G__42694,G__42695,G__42696,G__42697,G__42698));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__42699 = a;
var G__42700 = b;
var G__42701 = c;
var G__42702 = d;
var G__42703 = e;
var G__42704 = f;
var G__42705 = g;
var G__42706 = h;
var G__42707 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__42699,G__42700,G__42701,G__42702,G__42703,G__42704,G__42705,G__42706,G__42707) : target_fn.call(null,G__42699,G__42700,G__42701,G__42702,G__42703,G__42704,G__42705,G__42706,G__42707));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__42708 = a;
var G__42709 = b;
var G__42710 = c;
var G__42711 = d;
var G__42712 = e;
var G__42713 = f;
var G__42714 = g;
var G__42715 = h;
var G__42716 = i;
var G__42717 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__42708,G__42709,G__42710,G__42711,G__42712,G__42713,G__42714,G__42715,G__42716,G__42717) : self__.dispatch_fn.call(null,G__42708,G__42709,G__42710,G__42711,G__42712,G__42713,G__42714,G__42715,G__42716,G__42717));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__42718 = a;
var G__42719 = b;
var G__42720 = c;
var G__42721 = d;
var G__42722 = e;
var G__42723 = f;
var G__42724 = g;
var G__42725 = h;
var G__42726 = i;
var G__42727 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__42718,G__42719,G__42720,G__42721,G__42722,G__42723,G__42724,G__42725,G__42726,G__42727) : target_fn.call(null,G__42718,G__42719,G__42720,G__42721,G__42722,G__42723,G__42724,G__42725,G__42726,G__42727));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__42728 = a;
var G__42729 = b;
var G__42730 = c;
var G__42731 = d;
var G__42732 = e;
var G__42733 = f;
var G__42734 = g;
var G__42735 = h;
var G__42736 = i;
var G__42737 = j;
var G__42738 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__42728,G__42729,G__42730,G__42731,G__42732,G__42733,G__42734,G__42735,G__42736,G__42737,G__42738) : self__.dispatch_fn.call(null,G__42728,G__42729,G__42730,G__42731,G__42732,G__42733,G__42734,G__42735,G__42736,G__42737,G__42738));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__42739 = a;
var G__42740 = b;
var G__42741 = c;
var G__42742 = d;
var G__42743 = e;
var G__42744 = f;
var G__42745 = g;
var G__42746 = h;
var G__42747 = i;
var G__42748 = j;
var G__42749 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__42739,G__42740,G__42741,G__42742,G__42743,G__42744,G__42745,G__42746,G__42747,G__42748,G__42749) : target_fn.call(null,G__42739,G__42740,G__42741,G__42742,G__42743,G__42744,G__42745,G__42746,G__42747,G__42748,G__42749));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__42750 = a;
var G__42751 = b;
var G__42752 = c;
var G__42753 = d;
var G__42754 = e;
var G__42755 = f;
var G__42756 = g;
var G__42757 = h;
var G__42758 = i;
var G__42759 = j;
var G__42760 = k;
var G__42761 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__42750,G__42751,G__42752,G__42753,G__42754,G__42755,G__42756,G__42757,G__42758,G__42759,G__42760,G__42761) : self__.dispatch_fn.call(null,G__42750,G__42751,G__42752,G__42753,G__42754,G__42755,G__42756,G__42757,G__42758,G__42759,G__42760,G__42761));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__42762 = a;
var G__42763 = b;
var G__42764 = c;
var G__42765 = d;
var G__42766 = e;
var G__42767 = f;
var G__42768 = g;
var G__42769 = h;
var G__42770 = i;
var G__42771 = j;
var G__42772 = k;
var G__42773 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__42762,G__42763,G__42764,G__42765,G__42766,G__42767,G__42768,G__42769,G__42770,G__42771,G__42772,G__42773) : target_fn.call(null,G__42762,G__42763,G__42764,G__42765,G__42766,G__42767,G__42768,G__42769,G__42770,G__42771,G__42772,G__42773));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__42774 = a;
var G__42775 = b;
var G__42776 = c;
var G__42777 = d;
var G__42778 = e;
var G__42779 = f;
var G__42780 = g;
var G__42781 = h;
var G__42782 = i;
var G__42783 = j;
var G__42784 = k;
var G__42785 = l;
var G__42786 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__42774,G__42775,G__42776,G__42777,G__42778,G__42779,G__42780,G__42781,G__42782,G__42783,G__42784,G__42785,G__42786) : self__.dispatch_fn.call(null,G__42774,G__42775,G__42776,G__42777,G__42778,G__42779,G__42780,G__42781,G__42782,G__42783,G__42784,G__42785,G__42786));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__42787 = a;
var G__42788 = b;
var G__42789 = c;
var G__42790 = d;
var G__42791 = e;
var G__42792 = f;
var G__42793 = g;
var G__42794 = h;
var G__42795 = i;
var G__42796 = j;
var G__42797 = k;
var G__42798 = l;
var G__42799 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__42787,G__42788,G__42789,G__42790,G__42791,G__42792,G__42793,G__42794,G__42795,G__42796,G__42797,G__42798,G__42799) : target_fn.call(null,G__42787,G__42788,G__42789,G__42790,G__42791,G__42792,G__42793,G__42794,G__42795,G__42796,G__42797,G__42798,G__42799));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__42800 = a;
var G__42801 = b;
var G__42802 = c;
var G__42803 = d;
var G__42804 = e;
var G__42805 = f;
var G__42806 = g;
var G__42807 = h;
var G__42808 = i;
var G__42809 = j;
var G__42810 = k;
var G__42811 = l;
var G__42812 = m;
var G__42813 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__42800,G__42801,G__42802,G__42803,G__42804,G__42805,G__42806,G__42807,G__42808,G__42809,G__42810,G__42811,G__42812,G__42813) : self__.dispatch_fn.call(null,G__42800,G__42801,G__42802,G__42803,G__42804,G__42805,G__42806,G__42807,G__42808,G__42809,G__42810,G__42811,G__42812,G__42813));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__42814 = a;
var G__42815 = b;
var G__42816 = c;
var G__42817 = d;
var G__42818 = e;
var G__42819 = f;
var G__42820 = g;
var G__42821 = h;
var G__42822 = i;
var G__42823 = j;
var G__42824 = k;
var G__42825 = l;
var G__42826 = m;
var G__42827 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__42814,G__42815,G__42816,G__42817,G__42818,G__42819,G__42820,G__42821,G__42822,G__42823,G__42824,G__42825,G__42826,G__42827) : target_fn.call(null,G__42814,G__42815,G__42816,G__42817,G__42818,G__42819,G__42820,G__42821,G__42822,G__42823,G__42824,G__42825,G__42826,G__42827));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__42828 = a;
var G__42829 = b;
var G__42830 = c;
var G__42831 = d;
var G__42832 = e;
var G__42833 = f;
var G__42834 = g;
var G__42835 = h;
var G__42836 = i;
var G__42837 = j;
var G__42838 = k;
var G__42839 = l;
var G__42840 = m;
var G__42841 = n;
var G__42842 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__42828,G__42829,G__42830,G__42831,G__42832,G__42833,G__42834,G__42835,G__42836,G__42837,G__42838,G__42839,G__42840,G__42841,G__42842) : self__.dispatch_fn.call(null,G__42828,G__42829,G__42830,G__42831,G__42832,G__42833,G__42834,G__42835,G__42836,G__42837,G__42838,G__42839,G__42840,G__42841,G__42842));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__42843 = a;
var G__42844 = b;
var G__42845 = c;
var G__42846 = d;
var G__42847 = e;
var G__42848 = f;
var G__42849 = g;
var G__42850 = h;
var G__42851 = i;
var G__42852 = j;
var G__42853 = k;
var G__42854 = l;
var G__42855 = m;
var G__42856 = n;
var G__42857 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__42843,G__42844,G__42845,G__42846,G__42847,G__42848,G__42849,G__42850,G__42851,G__42852,G__42853,G__42854,G__42855,G__42856,G__42857) : target_fn.call(null,G__42843,G__42844,G__42845,G__42846,G__42847,G__42848,G__42849,G__42850,G__42851,G__42852,G__42853,G__42854,G__42855,G__42856,G__42857));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__42858 = a;
var G__42859 = b;
var G__42860 = c;
var G__42861 = d;
var G__42862 = e;
var G__42863 = f;
var G__42864 = g;
var G__42865 = h;
var G__42866 = i;
var G__42867 = j;
var G__42868 = k;
var G__42869 = l;
var G__42870 = m;
var G__42871 = n;
var G__42872 = o;
var G__42873 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__42858,G__42859,G__42860,G__42861,G__42862,G__42863,G__42864,G__42865,G__42866,G__42867,G__42868,G__42869,G__42870,G__42871,G__42872,G__42873) : self__.dispatch_fn.call(null,G__42858,G__42859,G__42860,G__42861,G__42862,G__42863,G__42864,G__42865,G__42866,G__42867,G__42868,G__42869,G__42870,G__42871,G__42872,G__42873));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__42874 = a;
var G__42875 = b;
var G__42876 = c;
var G__42877 = d;
var G__42878 = e;
var G__42879 = f;
var G__42880 = g;
var G__42881 = h;
var G__42882 = i;
var G__42883 = j;
var G__42884 = k;
var G__42885 = l;
var G__42886 = m;
var G__42887 = n;
var G__42888 = o;
var G__42889 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__42874,G__42875,G__42876,G__42877,G__42878,G__42879,G__42880,G__42881,G__42882,G__42883,G__42884,G__42885,G__42886,G__42887,G__42888,G__42889) : target_fn.call(null,G__42874,G__42875,G__42876,G__42877,G__42878,G__42879,G__42880,G__42881,G__42882,G__42883,G__42884,G__42885,G__42886,G__42887,G__42888,G__42889));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__42890 = a;
var G__42891 = b;
var G__42892 = c;
var G__42893 = d;
var G__42894 = e;
var G__42895 = f;
var G__42896 = g;
var G__42897 = h;
var G__42898 = i;
var G__42899 = j;
var G__42900 = k;
var G__42901 = l;
var G__42902 = m;
var G__42903 = n;
var G__42904 = o;
var G__42905 = p;
var G__42906 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__42890,G__42891,G__42892,G__42893,G__42894,G__42895,G__42896,G__42897,G__42898,G__42899,G__42900,G__42901,G__42902,G__42903,G__42904,G__42905,G__42906) : self__.dispatch_fn.call(null,G__42890,G__42891,G__42892,G__42893,G__42894,G__42895,G__42896,G__42897,G__42898,G__42899,G__42900,G__42901,G__42902,G__42903,G__42904,G__42905,G__42906));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__42907 = a;
var G__42908 = b;
var G__42909 = c;
var G__42910 = d;
var G__42911 = e;
var G__42912 = f;
var G__42913 = g;
var G__42914 = h;
var G__42915 = i;
var G__42916 = j;
var G__42917 = k;
var G__42918 = l;
var G__42919 = m;
var G__42920 = n;
var G__42921 = o;
var G__42922 = p;
var G__42923 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__42907,G__42908,G__42909,G__42910,G__42911,G__42912,G__42913,G__42914,G__42915,G__42916,G__42917,G__42918,G__42919,G__42920,G__42921,G__42922,G__42923) : target_fn.call(null,G__42907,G__42908,G__42909,G__42910,G__42911,G__42912,G__42913,G__42914,G__42915,G__42916,G__42917,G__42918,G__42919,G__42920,G__42921,G__42922,G__42923));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__42924 = a;
var G__42925 = b;
var G__42926 = c;
var G__42927 = d;
var G__42928 = e;
var G__42929 = f;
var G__42930 = g;
var G__42931 = h;
var G__42932 = i;
var G__42933 = j;
var G__42934 = k;
var G__42935 = l;
var G__42936 = m;
var G__42937 = n;
var G__42938 = o;
var G__42939 = p;
var G__42940 = q;
var G__42941 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__42924,G__42925,G__42926,G__42927,G__42928,G__42929,G__42930,G__42931,G__42932,G__42933,G__42934,G__42935,G__42936,G__42937,G__42938,G__42939,G__42940,G__42941) : self__.dispatch_fn.call(null,G__42924,G__42925,G__42926,G__42927,G__42928,G__42929,G__42930,G__42931,G__42932,G__42933,G__42934,G__42935,G__42936,G__42937,G__42938,G__42939,G__42940,G__42941));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__42942 = a;
var G__42943 = b;
var G__42944 = c;
var G__42945 = d;
var G__42946 = e;
var G__42947 = f;
var G__42948 = g;
var G__42949 = h;
var G__42950 = i;
var G__42951 = j;
var G__42952 = k;
var G__42953 = l;
var G__42954 = m;
var G__42955 = n;
var G__42956 = o;
var G__42957 = p;
var G__42958 = q;
var G__42959 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__42942,G__42943,G__42944,G__42945,G__42946,G__42947,G__42948,G__42949,G__42950,G__42951,G__42952,G__42953,G__42954,G__42955,G__42956,G__42957,G__42958,G__42959) : target_fn.call(null,G__42942,G__42943,G__42944,G__42945,G__42946,G__42947,G__42948,G__42949,G__42950,G__42951,G__42952,G__42953,G__42954,G__42955,G__42956,G__42957,G__42958,G__42959));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__42960 = a;
var G__42961 = b;
var G__42962 = c;
var G__42963 = d;
var G__42964 = e;
var G__42965 = f;
var G__42966 = g;
var G__42967 = h;
var G__42968 = i;
var G__42969 = j;
var G__42970 = k;
var G__42971 = l;
var G__42972 = m;
var G__42973 = n;
var G__42974 = o;
var G__42975 = p;
var G__42976 = q;
var G__42977 = r;
var G__42978 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__42960,G__42961,G__42962,G__42963,G__42964,G__42965,G__42966,G__42967,G__42968,G__42969,G__42970,G__42971,G__42972,G__42973,G__42974,G__42975,G__42976,G__42977,G__42978) : self__.dispatch_fn.call(null,G__42960,G__42961,G__42962,G__42963,G__42964,G__42965,G__42966,G__42967,G__42968,G__42969,G__42970,G__42971,G__42972,G__42973,G__42974,G__42975,G__42976,G__42977,G__42978));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__42979 = a;
var G__42980 = b;
var G__42981 = c;
var G__42982 = d;
var G__42983 = e;
var G__42984 = f;
var G__42985 = g;
var G__42986 = h;
var G__42987 = i;
var G__42988 = j;
var G__42989 = k;
var G__42990 = l;
var G__42991 = m;
var G__42992 = n;
var G__42993 = o;
var G__42994 = p;
var G__42995 = q;
var G__42996 = r;
var G__42997 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__42979,G__42980,G__42981,G__42982,G__42983,G__42984,G__42985,G__42986,G__42987,G__42988,G__42989,G__42990,G__42991,G__42992,G__42993,G__42994,G__42995,G__42996,G__42997) : target_fn.call(null,G__42979,G__42980,G__42981,G__42982,G__42983,G__42984,G__42985,G__42986,G__42987,G__42988,G__42989,G__42990,G__42991,G__42992,G__42993,G__42994,G__42995,G__42996,G__42997));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__42998 = a;
var G__42999 = b;
var G__43000 = c;
var G__43001 = d;
var G__43002 = e;
var G__43003 = f;
var G__43004 = g;
var G__43005 = h;
var G__43006 = i;
var G__43007 = j;
var G__43008 = k;
var G__43009 = l;
var G__43010 = m;
var G__43011 = n;
var G__43012 = o;
var G__43013 = p;
var G__43014 = q;
var G__43015 = r;
var G__43016 = s;
var G__43017 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__42998,G__42999,G__43000,G__43001,G__43002,G__43003,G__43004,G__43005,G__43006,G__43007,G__43008,G__43009,G__43010,G__43011,G__43012,G__43013,G__43014,G__43015,G__43016,G__43017) : self__.dispatch_fn.call(null,G__42998,G__42999,G__43000,G__43001,G__43002,G__43003,G__43004,G__43005,G__43006,G__43007,G__43008,G__43009,G__43010,G__43011,G__43012,G__43013,G__43014,G__43015,G__43016,G__43017));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__43018 = a;
var G__43019 = b;
var G__43020 = c;
var G__43021 = d;
var G__43022 = e;
var G__43023 = f;
var G__43024 = g;
var G__43025 = h;
var G__43026 = i;
var G__43027 = j;
var G__43028 = k;
var G__43029 = l;
var G__43030 = m;
var G__43031 = n;
var G__43032 = o;
var G__43033 = p;
var G__43034 = q;
var G__43035 = r;
var G__43036 = s;
var G__43037 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__43018,G__43019,G__43020,G__43021,G__43022,G__43023,G__43024,G__43025,G__43026,G__43027,G__43028,G__43029,G__43030,G__43031,G__43032,G__43033,G__43034,G__43035,G__43036,G__43037) : target_fn.call(null,G__43018,G__43019,G__43020,G__43021,G__43022,G__43023,G__43024,G__43025,G__43026,G__43027,G__43028,G__43029,G__43030,G__43031,G__43032,G__43033,G__43034,G__43035,G__43036,G__43037));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__18264__auto__,writer__18265__auto__,opt__18266__auto__){
return cljs.core._write(writer__18265__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__43039 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__43039);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__18264__auto__,writer__18265__auto__,opt__18266__auto__){
return cljs.core._write(writer__18265__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__18264__auto__,writer__18265__auto__,opt__18266__auto__){
return cljs.core._write(writer__18265__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__43044 = msg;
return Error(G__43044);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__43049 = x;
var G__43050 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__43049,G__43050) : pred.call(null,G__43049,G__43050));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__43051 = y;
var G__43052 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__43051,G__43052) : pred.call(null,G__43051,G__43052));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return cljs.core.constant$keyword$61;
} else {
return cljs.core.constant$keyword$62;
}
});
